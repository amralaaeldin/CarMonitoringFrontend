{"version":3,"sources":["../src/time.ts"],"names":["noop","singleton","initTime","log","time","now","Date"],"mappings":";;;;;;;AAAA;;AAGA,SAASA,IAAT,GAAgB,CAAE;;AAMlB;;;;;;eAOe,yBAAQ;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAR,EAA6B,6BAAYC,QAAZ,CAA7B,EAAoD,IAApD,C;AAEf;;;;;;;;;;;;;;;;;;AAcA,eAAeA,QAAf,CAAwB;AACtBC,EAAAA,GAAG,GAAGH;AADgB,CAAxB,EAIyB;AACvBG,EAAAA,GAAG,CAAC,OAAD,EAAU,+BAAV,CAAH;AAEA,SAAOC,IAAP;AAEA;;;;;;;;AAOA,WAASA,IAAT,GAAgB;AACd,UAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AAEAF,IAAAA,GAAG,CAAC,OAAD,EAAU,yBAAV,EAAqCE,GAArC,CAAH;AACA,WAAOA,GAAP;AACD;AACF","sourcesContent":["import { autoService, options } from 'knifecycle';\nimport type { LogService } from './log';\n\nfunction noop() {}\n\nexport interface TimeService {\n  (): number;\n}\n\n/* Architecture Note #1.2: Time\n\nThe time service is just proxying [`Date.now`\n](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date/now)\n in a stubbable manner.\n*/\n\nexport default options({ singleton: true }, autoService(initTime), true);\n\n/**\n * Instantiate the time service\n * @name initTime\n * @function\n * @param  {Object}   services           The services to inject\n * @param  {Object}   [services.log = noop]     A logging function\n * @return {Promise<Function>}           A promise of the time function\n * @example\n * import initTime from 'common-services/dist/time';\n *\n * const time = await initTime({\n *   log: console.log.bind(console),\n * });\n */\nasync function initTime({\n  log = noop,\n}: {\n  log?: LogService;\n}): Promise<TimeService> {\n  log('debug', '⏰ - Time service initialized.');\n\n  return time;\n\n  /**\n   * Returns the current timestamp\n   * @return {number}   The current timestamp\n   * @example\n   * time()\n   * // Prints: 1326585600000\n   */\n  function time() {\n    const now = Date.now();\n\n    log('debug', '⏰ - Picked a timestamp:', now);\n    return now;\n  }\n}\n"],"file":"time.js"}