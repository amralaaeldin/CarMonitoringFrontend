{"ast":null,"code":"var _jsxFileName = \"/Users/hawuu/Desktop/frontend/CarMonitoring_V1.0/src/views/CarMonitoring/CarMonitoring.js\";\n\n/*global google*/\nimport { Box, Button, ButtonGroup, Flex, HStack, IconButton, Input, SkeletonText, Text } from \"@chakra-ui/react\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport React, { Component, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useJsApiLoader, GoogleMap, Marker, Autocomplete, DirectionsRenderer, InfoWindow } from \"@react-google-maps/api\";\nimport { useRef, useState } from \"react\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\");\nGeocode.enableDebug();\nvar polyline;\n\nfunction App() {\n  const [caraddress, setcaraddress] = useState(\"Loading ...\");\n  const [flag, setflag] = useState(0);\n  const [getflag, setgetflag] = useState(0);\n  const [center2, setcenter2] = useState({});\n  const [center, setcenter] = useState({\n    lat: 12.9492,\n    lng: 80.2547\n  });\n  const [carDetails, setcarDetails] = useState([]);\n  const [waypointsdata, setwaypointsdata] = useState([]);\n  const [originValue, setoriginValue] = useState(\"\");\n  const [destinationValue, setdestinationValue] = useState(\"\");\n  useEffect(() => {\n    if (flag == 0) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //console.log(\"Latitude is :\", position.coords.latitude);\n        //console.log(\"Longitude is :\", position.coords.longitude);\n        setcenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n      setflag(1);\n    }\n\n    if (getflag > 0) {\n      setTimeout(() => {\n        //console.log(\"Teting ++++++++\" + getflag)\n        getTopicData();\n        setgetflag(getflag + 1);\n      }, 5000);\n    }\n  }, [flag, getflag]);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\",\n    libraries: [\"places\"]\n  });\n  const [map, setMap] = useState(\n  /** @type google.maps.Map */\n  null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [topic_name, settopic_name] = useState(\"\");\n  const [car_alert, setcar_alert] = useState(0);\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const originRef = useRef();\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const destiantionRef = useRef();\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(SkeletonText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }\n    });\n  }\n\n  async function getTopicData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/publish\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        topic: topic_name\n      })\n    };\n    axios(getStocksData).then(response => {\n      //console.log(\"+++++++++++++++\");\n      //console.log(response.data);\n      //console.log(\"+++++++++++++++\");\n      // setcarDetails(response.data.data)\n      try {\n        if (response.data.data.speed >= response.data.threshold) {\n          // alert(\"Correct\" + response.data.data.speed)\n          setcar_alert(1);\n        } else if (google.maps.geometry.poly.isLocationOnEdge(new google.maps.LatLng(response.data.data.lat, response.data.data.lon, polyline, 0.1))) {\n          console.log(\"Not follwong the path\");\n        } else {\n          // alert(\"error\" + response.data.data.speed)\n          console.log(\"Not working\");\n          setcar_alert(0);\n        }\n      } catch {\n        setcar_alert(0); // alert(\"catch\" + response.data.data.speed)\n      }\n\n      let new_location = {\n        \"lat\": response.data.data.lat,\n        \"lng\": response.data.data.lon\n      };\n      setcenter(new_location);\n      setcenter2(new_location);\n      Geocode.fromLatLng(response.data.data.lat, response.data.data.lon).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address)\n\n        setcaraddress(address);\n      }, error => {//console.error(error);\n      });\n    }).catch(function (e) {\n      //console.log(e.message);\n      if (e.message === \"Network Error\") {\n        alert(\"No Internet Found. Please check your internet connection\");\n      } else {\n        alert(\"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\");\n      }\n    });\n  }\n\n  async function calculateRoute() {\n    if (originRef.current.value === \"\" || destiantionRef.current.value === \"\" || topic_name === \"\") {\n      alert(\"Please Enter Required Details!\");\n    } // eslint-disable-next-line no-undef\n\n\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata\n    });\n    setDirectionsResponse(results); //console.log(\"Resultssssss 1: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  async function calculateRouteNew() {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originValue,\n      destination: destinationValue,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata\n    });\n    setDirectionsResponse(results); //console.log(\"Resultssssss 2: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n    originRef.current.value = \"\";\n    destiantionRef.current.value = \"\";\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    position: \"relative\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    h: \"98vh\" // w='100vw'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    h: \"100%\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    center: center,\n    zoom: 18,\n    mapContainerStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    options: {\n      zoomControl: false,\n      streetViewControl: false,\n      mapTypeControl: false,\n      fullscreenControl: false\n    },\n    onClick: async coord => {\n      if (originRef.current.value === \"\" || destiantionRef.current.value === \"\" || topic_name === \"\") {\n        const {\n          latLng\n        } = coord;\n        const lat = latLng.lat();\n        const lng = latLng.lng();\n        let newwaypoint = waypointsdata;\n        waypointsdata.push({\n          location: {\n            lat: lat,\n            lng: lng\n          }\n        });\n        const directionsService = new google.maps.DirectionsService();\n        const results = await directionsService.route({\n          origin: originValue,\n          destination: destinationValue,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          waypoints: newwaypoint\n        });\n        setDirectionsResponse(results); //console.log(\"Resultsssssss 3: \",results)\n\n        setflag(flag + 1);\n        setgetflag(getflag + 1);\n      } else {\n        const {\n          latLng\n        } = coord;\n        const lat = latLng.lat();\n        const lng = latLng.lng();\n        let newwaypoint = waypointsdata;\n        waypointsdata.push({\n          location: {\n            lat: lat,\n            lng: lng\n          }\n        });\n        const directionsService = new google.maps.DirectionsService();\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destiantionRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          waypoints: newwaypoint\n        });\n        console.log(results);\n        setDirectionsResponse(results);\n        setflag(flag + 1);\n        setgetflag(getflag + 1);\n      }\n    },\n    onLoad: map => setMap(map),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    draggable: true,\n    icon: {\n      url: require(\"./destination.png\"),\n      scaledSize: {\n        width: 60,\n        height: 60\n      }\n    },\n    onDragEnd: coord => {\n      const {\n        latLng\n      } = coord;\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      Geocode.fromLatLng(lat, lng).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address);\n\n        setoriginValue(address);\n      }, error => {\n        console.error(error);\n      });\n    },\n    onDblClick: calculateRouteNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    draggable: true,\n    icon: {\n      url: require(\"./orgin.png\"),\n      scaledSize: {\n        width: 50,\n        height: 60\n      }\n    },\n    onDragEnd: coord => {\n      const {\n        latLng\n      } = coord;\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      Geocode.fromLatLng(lat, lng).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address);\n\n        setdestinationValue(address);\n      }, error => {\n        console.error(error);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: center2,\n    icon: {\n      url: require(car_alert == 0 ? \"./cargreen.png\" : \"./carred.png\"),\n      scaledSize: {\n        width: 60,\n        height: 60\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoWindow, {\n    position: center2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, \"Address: \" + caraddress + \", Azimuth - \" + carDetails.azimuth + \", DevId - \" + carDetails.devId + \", Satelites - \" + carDetails.satelites + \", SatelitesError - \" + carDetails.satelitesError + \", SoftVersion\" + carDetails.softVersion + \", Time - \" + carDetails.time + \", Speed - \" + carDetails.speed)))), directionsResponse && /*#__PURE__*/React.createElement(DirectionsRenderer, {\n    directions: directionsResponse,\n    options: {\n      draggable: true,\n      polylineOptions: {\n        strokeOpacity: 12,\n        strokeColor: \"#1641a6\",\n        strokeWeight: 12\n      }\n    },\n    onDirectionsChanged: () => {\n      if (polyline) {\n        // if polyline already exists, remove it from the map.\n        polyline.setMap(null);\n      }\n\n      if (directionsResponse) {\n        var path = google.maps.geometry.encoding.decodePath(directionsResponse.routes[0].overview_polyline);\n        polyline = new google.maps.Polyline({\n          path: path,\n          map: map\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    borderRadius: \"lg\",\n    m: 4,\n    bgColor: \"#348feb\",\n    shadow: \"base\",\n    minW: \"container.md\",\n    zIndex: \"2\",\n    style: {\n      padding: 20,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HStack, {\n    spacing: 2,\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 400\n    },\n    type: \"text\",\n    placeholder: \"Origin\",\n    ref: originRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 400\n    },\n    type: \"text\",\n    placeholder: \"Destination\",\n    ref: destiantionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 200\n    },\n    type: \"text\",\n    placeholder: \"Topic Name\",\n    value: topic_name,\n    onChange: e => settopic_name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: calculateRoute,\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"green\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, \"SUBMIT\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: async () => {\n      let newwaypoint = waypointsdata;\n      waypointsdata.pop();\n      const directionsService = new google.maps.DirectionsService();\n      const results = await directionsService.route({\n        origin: originValue,\n        destination: destinationValue,\n        // eslint-disable-next-line no-undef\n        travelMode: google.maps.TravelMode.DRIVING,\n        waypoints: newwaypoint\n      });\n      setDirectionsResponse(results);\n      setflag(flag + 1);\n      setgetflag(getflag + 1);\n    },\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"orange\",\n      color: \"white\",\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, \"W-DEL\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: () => setcar_alert(0),\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"darkblue\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }\n  }, \"RESET\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: () => window.location.reload(),\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"red\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }, \"CLEAR ALL\")))));\n}\n\nexport default App;","map":{"version":3,"names":["Box","Button","ButtonGroup","Flex","HStack","IconButton","Input","SkeletonText","Text","FaLocationArrow","FaTimes","React","Component","useEffect","axios","useJsApiLoader","GoogleMap","Marker","Autocomplete","DirectionsRenderer","InfoWindow","useRef","useState","Geocode","setApiKey","enableDebug","polyline","App","caraddress","setcaraddress","flag","setflag","getflag","setgetflag","center2","setcenter2","center","setcenter","lat","lng","carDetails","setcarDetails","waypointsdata","setwaypointsdata","originValue","setoriginValue","destinationValue","setdestinationValue","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setTimeout","getTopicData","isLoaded","googleMapsApiKey","libraries","map","setMap","directionsResponse","setDirectionsResponse","topic_name","settopic_name","car_alert","setcar_alert","originRef","destiantionRef","getStocksData","url","method","headers","data","JSON","stringify","topic","then","response","speed","threshold","google","maps","geometry","poly","isLocationOnEdge","LatLng","lon","console","log","new_location","fromLatLng","address","results","formatted_address","error","catch","e","message","alert","calculateRoute","current","value","directionsService","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","waypoints","calculateRouteNew","clearRoute","width","height","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","coord","latLng","newwaypoint","push","location","require","scaledSize","azimuth","devId","satelites","satelitesError","softVersion","time","draggable","polylineOptions","strokeOpacity","strokeColor","strokeWeight","path","encoding","decodePath","routes","overview_polyline","Polyline","padding","borderRadius","backgroundColor","color","target","pop","fontWeight","window","reload"],"sources":["/Users/hawuu/Desktop/frontend/CarMonitoring_V1.0/src/views/CarMonitoring/CarMonitoring.js"],"sourcesContent":["/*global google*/\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Flex,\n  HStack,\n  IconButton,\n  Input,\n  SkeletonText,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport React, { Component, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  useJsApiLoader,\n  GoogleMap,\n  Marker,\n  Autocomplete,\n  DirectionsRenderer,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { useRef, useState } from \"react\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\");\nGeocode.enableDebug();\n\nvar polyline;\nfunction App() {\n  const [caraddress, setcaraddress] = useState(\"Loading ...\");\n  const [flag, setflag] = useState(0);\n  const [getflag, setgetflag] = useState(0);\n  const [center2, setcenter2] = useState({});\n  const [center, setcenter] = useState({ lat: 12.9492, lng: 80.2547 });\n  const [carDetails, setcarDetails] = useState([]);\n  const [waypointsdata, setwaypointsdata] = useState([]);\n  const [originValue, setoriginValue] = useState(\"\");\n  const [destinationValue, setdestinationValue] = useState(\"\");\n  \n\n  useEffect(() => {\n    if (flag == 0) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //console.log(\"Latitude is :\", position.coords.latitude);\n        //console.log(\"Longitude is :\", position.coords.longitude);\n        setcenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n      setflag(1);\n    }\n\n    if (getflag > 0) {\n\n    setTimeout(() => {\n    \t//console.log(\"Teting ++++++++\" + getflag)\n    \tgetTopicData()\n    \tsetgetflag(getflag + 1)\n\n    }, 5000)\n\n    }\n  }, [flag, getflag]);\n\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\",\n    libraries: [\"places\"],\n  });\n\n  const [map, setMap] = useState(/** @type google.maps.Map */ (null));\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [topic_name, settopic_name] = useState(\"\");\n  const [car_alert, setcar_alert] = useState(0);\n\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const originRef = useRef();\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const destiantionRef = useRef();\n\n  if (!isLoaded) {\n    return <SkeletonText />;\n  }\n\n  async function getTopicData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/publish\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({\n        topic: topic_name,\n      }),\n    };\n    axios(getStocksData)\n      .then((response) => {\n        //console.log(\"+++++++++++++++\");\n        //console.log(response.data);\n        //console.log(\"+++++++++++++++\");\n        // setcarDetails(response.data.data)\n        try {\n\n        \tif (response.data.data.speed >= response.data.threshold) {\n        \t\t// alert(\"Correct\" + response.data.data.speed)\n        \t\tsetcar_alert(1)\n        \t}\n          else if (google.maps.geometry.poly.isLocationOnEdge(new google.maps.LatLng(response.data.data.lat,response.data.data.lon, polyline, 0.1)))\n          {\n            \n            console.log(\"Not follwong the path\")\n\n          }\n        \telse {\n        \t\t// alert(\"error\" + response.data.data.speed)\n            console.log(\"Not working\")\n        \t\tsetcar_alert(0)\n\n        \t}\n        }\n\n        catch {\n        \tsetcar_alert(0)\n\n        \t// alert(\"catch\" + response.data.data.speed)\n\n        }\n\n        let new_location = {\n        \t\"lat\": response.data.data.lat,\n        \t\"lng\": response.data.data.lon\n\n        }\n        setcenter(new_location)\n        setcenter2(new_location)\n        Geocode.fromLatLng(response.data.data.lat, response.data.data.lon).then(\n        \tresponse => {\n        \t\tconst address = response.results[0].formatted_address\n\n        \t\t//console.log(address)\n        \t\tsetcaraddress(address)\n\n        \t},\n        \terror => {\n        \t\t//console.error(error);\n        \t}\n        );\n      })\n      .catch(function (e) {\n        //console.log(e.message);\n        if (e.message === \"Network Error\") {\n          alert(\"No Internet Found. Please check your internet connection\");\n        } else {\n          alert(\n            \"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\"\n          );\n        }\n      });\n  }\n  \n\n  async function calculateRoute() {\n    if (\n      originRef.current.value === \"\" ||\n      destiantionRef.current.value === \"\" ||\n      topic_name === \"\"\n    ) {\n      alert(\"Please Enter Required Details!\");\n    }\n\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata,\n    });\n    setDirectionsResponse(results);\n    //console.log(\"Resultssssss 1: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  async function calculateRouteNew() {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originValue,\n      destination: destinationValue,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata,\n    });\n    setDirectionsResponse(results);\n    //console.log(\"Resultssssss 2: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n\n    originRef.current.value = \"\";\n    destiantionRef.current.value = \"\";\n  }\n\n\n\n  return (\n    \n    <Flex\n      position=\"relative\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      h=\"98vh\"\n      // w='100vw'\n    >\n      <Box position=\"absolute\" left={0} top={0} h=\"100%\" w=\"100%\">\n        {/* Google Map Box */}\n        <GoogleMap\n          center={center}\n          zoom={18}\n          mapContainerStyle={{ width: \"100%\", height: \"100%\" }}\n          options={{\n            zoomControl: false,\n            streetViewControl: false,\n            mapTypeControl: false,\n            fullscreenControl: false,\n          }}\n          onClick={async (coord) => {\n            if (\n              originRef.current.value === \"\" ||\n              destiantionRef.current.value === \"\" ||\n              topic_name === \"\"\n            ) {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n\n              let newwaypoint = waypointsdata;\n             \n              waypointsdata.push({\n                location: { lat: lat, lng: lng }\n                \n              });\n              \n              const directionsService = new google.maps.DirectionsService();\n              const results = await directionsService.route({\n                origin: originValue,\n                destination: destinationValue,\n                // eslint-disable-next-line no-undef\n                travelMode: google.maps.TravelMode.DRIVING,\n                waypoints: newwaypoint,\n              });\n              \n              setDirectionsResponse(results);\n              //console.log(\"Resultsssssss 3: \",results)\n\n              setflag(flag + 1);\n              setgetflag(getflag + 1);\n            } \n             else {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n\n              let newwaypoint = waypointsdata;\n              waypointsdata.push({\n                location: { lat: lat, lng: lng }\n               \n              });\n              \n              const directionsService = new google.maps.DirectionsService();\n              const results = await directionsService.route({\n                origin: originRef.current.value,\n                destination: destiantionRef.current.value,\n                // eslint-disable-next-line no-undef\n                travelMode: google.maps.TravelMode.DRIVING,\n                waypoints: newwaypoint,\n              })\n\n              console.log(results)\n              \n              setDirectionsResponse(results);\n              \n              \n              setflag(flag + 1);\n              setgetflag(getflag + 1);\n            }\n          }}\n          \n          onLoad={(map) => setMap(map)}\n        >\n          <Marker\n            position={center}\n            draggable={true}\n            icon={{\n              url: require(\"./destination.png\"),\n              scaledSize: { width: 60, height: 60 },\n            }}\n            onDragEnd={(coord) => {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n              Geocode.fromLatLng(lat, lng).then(\n                (response) => {\n                  const address = response.results[0].formatted_address;\n                  //console.log(address);\n                  setoriginValue(address);\n                },\n                (error) => {\n                  console.error(error);\n                }\n              );\n            }}\n            onDblClick={calculateRouteNew}\n          />\n\n          <Marker\n            position={center}\n            draggable={true}\n            icon={{\n              url: require(\"./orgin.png\"),\n              scaledSize: { width: 50, height: 60 },\n            }}\n            onDragEnd={(coord) => {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n              Geocode.fromLatLng(lat, lng).then(\n                (response) => {\n                  const address = response.results[0].formatted_address;\n                  //console.log(address);\n                  setdestinationValue(address);\n                },\n                (error) => {\n                  console.error(error);\n                }\n              );\n            }}\n          />\n\n          <Marker\n            position={center2}\n            icon={{\n              url: require(car_alert == 0 ? \"./cargreen.png\" : \"./carred.png\"),\n              scaledSize: { width: 60, height: 60 },\n            }}\n          >\n            <InfoWindow position={center2}>\n              <div>\n                <span>\n                  {\"Address: \" +\n                    caraddress +\n                    \", Azimuth - \" +\n                    carDetails.azimuth +\n                    \", DevId - \" +\n                    carDetails.devId +\n                    \", Satelites - \" +\n                    carDetails.satelites +\n                    \", SatelitesError - \" +\n                    carDetails.satelitesError +\n                    \", SoftVersion\" +\n                    carDetails.softVersion +\n                    \", Time - \" +\n                    carDetails.time +\n                    \", Speed - \" +\n                    carDetails.speed}\n                </span>\n              </div>\n            </InfoWindow>\n          </Marker>\n          {/* {\n\t\t\t\t\t\tcaraddress != \"Loading ...\" ?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Marker position={center2}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\turl: (require(car_alert == 0 ? './cargreen.png' : './carred.png')),\n\t\t\t\t\t\t\t\t\tscaledSize: { width: 100, height: 100 }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InfoWindow position={center2}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>{\"Address: \"+caraddress+\n\t\t\t\t\t\t\t\t\t\", Azimuth - \"+carDetails.azimuth+\n\t\t\t\t\t\t\t\t\t\", DevId - \"+carDetails.devId+\n\t\t\t\t\t\t\t\t\t\", Satelites - \"+carDetails.satelites+\n\t\t\t\t\t\t\t\t\t\", SatelitesError - \"+carDetails.satelitesError+\n\t\t\t\t\t\t\t\t\t\", SoftVersion\"+carDetails.softVersion+\", Time - \"+\n\t\t\t\t\t\t\t\t\tcarDetails.time+\n\t\t\t\t\t\t\t\t\t\", Speed - \"+carDetails.speed}</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</InfoWindow>\n\n\n\t\t\t\t\t\t\t</Marker> </>: null\n\t\t\t\t\t} */}\n\n          {directionsResponse && (\n            <DirectionsRenderer\n              directions={directionsResponse}\n              options={{\n                draggable:true,\n                polylineOptions: {\n                  strokeOpacity: 12,\n                  strokeColor: \"#1641a6\",\n                  strokeWeight: 12,\n                },\n              }}\n              onDirectionsChanged = {() => {\n                if (polyline) {\n                  // if polyline already exists, remove it from the map.\n                  polyline.setMap(null)\n                }\n\n                if(directionsResponse)\n                {\n                  \n                   var path = google.maps.geometry.encoding.decodePath(directionsResponse.routes[0].overview_polyline)\n  \n                    polyline = new google.maps.Polyline(\n                        {\n                          path:path,\n                          map : map\n                        }\n                      )\n                  \n                }\n                \n\n              }}\n\n            />\n          )}\n        </GoogleMap>\n      </Box>\n      <Box\n        p={2}\n        borderRadius=\"lg\"\n        m={4}\n        bgColor=\"#348feb\"\n        shadow=\"base\"\n        minW=\"container.md\"\n        zIndex=\"2\"\n        style={{ padding: 20, borderRadius: 20 }}\n      >\n        <HStack spacing={2} justifyContent=\"space-between\">\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input\n                style={{\n                  padding: 10,\n                  borderRadius: 8,\n                  backgroundColor: \"white\",\n                  color: \"darkblue\",\n                  width: 400,\n                }}\n                type=\"text\"\n                placeholder=\"Origin\"\n                ref={originRef}\n              />\n            </Autocomplete>\n          </Box>\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input\n                style={{\n                  padding: 10,\n                  borderRadius: 8,\n                  backgroundColor: \"white\",\n                  color: \"darkblue\",\n                  width: 400,\n                }}\n                type=\"text\"\n                placeholder=\"Destination\"\n                ref={destiantionRef}\n              />\n            </Autocomplete>\n          </Box>\n\n          <Box flexGrow={1}>\n            <Input\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"white\",\n                color: \"darkblue\",\n                width: 200,\n              }}\n              type=\"text\"\n              placeholder=\"Topic Name\"\n              value={topic_name}\n              onChange={(e) => settopic_name(e.target.value)}\n            />\n          </Box>\n\n          <ButtonGroup>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={calculateRoute}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"green\",\n                color: \"white\",\n              }}\n            >\n              SUBMIT\n            </Button>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={async() => {       \n                let newwaypoint = waypointsdata;\n                waypointsdata.pop()\n                \n                const directionsService = new google.maps.DirectionsService();\n                const results = await directionsService.route({\n                  origin: originValue,\n                  destination: destinationValue,\n                  // eslint-disable-next-line no-undef\n                  travelMode: google.maps.TravelMode.DRIVING,\n                  waypoints: newwaypoint,\n                });\n                setDirectionsResponse(results);\n                setflag(flag + 1);\n                setgetflag(getflag + 1);\n              }\n              }\n\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"orange\",\n                color: \"white\",\n                fontWeight:'bold'\n              }}\n            >\n              W-DEL\n            </Button>\n\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={() => setcar_alert(0)}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"darkblue\",\n                color: \"white\",\n              }}\n            >\n              RESET\n            </Button>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n            >\n              CLEAR ALL\n            </Button>\n          </ButtonGroup>\n        </HStack>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}