{"ast":null,"code":"var _jsxFileName = \"/Users/hawuu/Desktop/frontend 2/CarMonitoring_V1.0/src/views/CarMonitoring/CarMonitoring.js\";\n\n/*global google*/\nimport { Box, Button, ButtonGroup, Flex, HStack, IconButton, Input, SkeletonText, Text } from \"@chakra-ui/react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport React, { Component, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport { useJsApiLoader, GoogleMap, Marker, Autocomplete, DirectionsRenderer, InfoWindow } from \"@react-google-maps/api\";\nimport { useRef, useState } from \"react\";\nimport Geocode from \"react-geocode\";\nimport { NoEncryptionRounded } from \"@material-ui/icons\";\nGeocode.setApiKey(\"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\");\nGeocode.enableDebug();\nvar polyline;\n\nfunction App() {\n  const [caraddress, setcaraddress] = useState(\"Loading ...\");\n  const [flag, setflag] = useState(0);\n  const [getflag, setgetflag] = useState(0);\n  const [center2, setcenter2] = useState({});\n  const [center, setcenter] = useState({\n    lat: 12.9492,\n    lng: 80.2547\n  });\n  const [carDetails, setcarDetails] = useState([]);\n  const [waypointsdata, setwaypointsdata] = useState([]);\n  const [originValue, setoriginValue] = useState(\"\");\n  const [destinationValue, setdestinationValue] = useState(\"\");\n  const [isFollowing, setisFollowing] = useState(false);\n  const [locationStoredData, setlocationStoredData] = useState(['option 1']);\n  useEffect(() => {\n    if (flag == 0) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //console.log(\"Latitude is :\", position.coords.latitude);\n        //console.log(\"Longitude is :\", position.coords.longitude);\n        setcenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n      setflag(1);\n    }\n\n    if (getflag > 0) {\n      setTimeout(() => {\n        //console.log(\"Teting ++++++++\" + getflag)\n        getTopicData();\n        setgetflag(getflag + 1);\n      }, 5000);\n    }\n\n    getLocationData();\n  }, [flag, getflag]);\n\n  async function getLocationData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/location\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios(getStocksData).then(response => {\n      console.log(response.data.data);\n      setlocationStoredData(response.data.data);\n    }).catch(function (e) {\n      console.log(e.message);\n\n      if (e.message === \"Network Error\") {\n        alert(\"No Internet Found. Please check your internet connection\");\n      } else {\n        alert(\"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\");\n      }\n    });\n  }\n\n  async function encodeLocationData() {\n    var path = polyline.getPath();\n    let encoded = google.maps.geometry.encoding.encodePath(path);\n    const getStocksData = {\n      url: \"http://localhost:5000/location\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        location: encoded\n      })\n    };\n    axios(getStocksData).then(response => {\n      console.log(response.data);\n    }).catch(function (e) {\n      console.log(e.message);\n\n      if (e.message === \"Network Error\") {\n        alert(\"No Internet Found. Please check your internet connection\");\n      } else {\n        alert(\"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\");\n      }\n    });\n  }\n\n  async function decodeLocationData(encoded) {\n    console.log(encoded);\n    var path = google.maps.geometry.encoding.decodePath(encoded);\n    polyline = new google.maps.Polyline({\n      path: path,\n      map: map\n    });\n  }\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\",\n    libraries: [\"places\"]\n  });\n  const [map, setMap] = useState(\n  /** @type google.maps.Map */\n  null);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [directionInstance, setDirectionInstance] = useState(null);\n  const [topic_name, settopic_name] = useState(\"\");\n  const [car_alert, setcar_alert] = useState(0);\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const originRef = useRef();\n  /** @type React.MutableRefObject<HTMLInputElement> */\n\n  const destiantionRef = useRef();\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(SkeletonText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 12\n      }\n    });\n  }\n\n  function onDirectionLoad(directionRendererInstance) {\n    setDirectionInstance(directionRendererInstance);\n  }\n\n  async function getTopicData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/publish\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        topic: topic_name\n      })\n    };\n    axios(getStocksData).then(response => {\n      //console.log(\"+++++++++++++++\");\n      //console.log(response.data);\n      //console.log(\"+++++++++++++++\");\n      // setcarDetails(response.data.data)\n      try {\n        if (response.data.data.speed >= response.data.threshold) {\n          // alert(\"Correct\" + response.data.data.speed)\n          setcar_alert(1);\n        } else {\n          // alert(\"error\" + response.data.data.speed)\n          setcar_alert(0);\n        }\n      } catch {\n        setcar_alert(0); // alert(\"catch\" + response.data.data.speed)\n      }\n\n      let new_location = {\n        \"lat\": response.data.data.lat,\n        \"lng\": response.data.data.lon\n      };\n      setcenter(new_location);\n      setcenter2(new_location);\n      var myPosition = new google.maps.LatLng(new_location.lat, new_location.lng);\n      var isFollowing = google.maps.geometry.poly.isLocationOnEdge(myPosition, polyline, 0.00001);\n      setisFollowing(isFollowing);\n      console.log(isFollowing);\n      Geocode.fromLatLng(response.data.data.lat, response.data.data.lon).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address)\n\n        setcaraddress(address);\n      }, error => {//console.error(error);\n      });\n    }).catch(function (e) {\n      //console.log(e.message);\n      if (e.message === \"Network Error\") {\n        alert(\"No Internet Found. Please check your internet connection\");\n      } else {\n        alert(\"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\");\n      }\n    });\n  }\n\n  async function calculateRoute() {\n    if (originRef.current.value === \"\" || destiantionRef.current.value === \"\" || topic_name === \"\") {\n      alert(\"Please Enter Required Details!\");\n    } // eslint-disable-next-line no-undef\n\n\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata\n    });\n    setDirectionsResponse(results); //console.log(\"Resultssssss 1: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  async function calculateRouteNew() {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originValue,\n      destination: destinationValue,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata\n    });\n    setDirectionsResponse(results); //console.log(\"Resultssssss 2: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n    originRef.current.value = \"\";\n    destiantionRef.current.value = \"\";\n  }\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    position: \"relative\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    h: \"98vh\" // w='100vw'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    h: \"100%\",\n    w: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    center: center,\n    zoom: 18,\n    mapContainerStyle: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    options: {\n      zoomControl: false,\n      streetViewControl: false,\n      mapTypeControl: false,\n      fullscreenControl: false\n    },\n    onClick: async coord => {\n      if (originRef.current.value === \"\" || destiantionRef.current.value === \"\" || topic_name === \"\") {\n        const {\n          latLng\n        } = coord;\n        const lat = latLng.lat();\n        const lng = latLng.lng();\n        let newwaypoint = waypointsdata;\n        waypointsdata.push({\n          location: {\n            lat: lat,\n            lng: lng\n          }\n        });\n        const directionsService = new google.maps.DirectionsService();\n        const results = await directionsService.route({\n          origin: originValue,\n          destination: destinationValue,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          waypoints: newwaypoint\n        });\n        setDirectionsResponse(results); //console.log(\"Resultsssssss 3: \",results)\n\n        setflag(flag + 1);\n        setgetflag(getflag + 1);\n      } else {\n        const {\n          latLng\n        } = coord;\n        const lat = latLng.lat();\n        const lng = latLng.lng();\n        let newwaypoint = waypointsdata;\n        waypointsdata.push({\n          location: {\n            lat: lat,\n            lng: lng\n          }\n        });\n        const directionsService = new google.maps.DirectionsService();\n        const results = await directionsService.route({\n          origin: originRef.current.value,\n          destination: destiantionRef.current.value,\n          // eslint-disable-next-line no-undef\n          travelMode: google.maps.TravelMode.DRIVING,\n          waypoints: newwaypoint\n        });\n        console.log(results);\n        setDirectionsResponse(results);\n        setflag(flag + 1);\n        setgetflag(getflag + 1);\n      }\n    },\n    onLoad: map => setMap(map),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    draggable: true,\n    icon: {\n      url: require(\"./destination.png\"),\n      scaledSize: {\n        width: 60,\n        height: 60\n      }\n    },\n    onDragEnd: coord => {\n      const {\n        latLng\n      } = coord;\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      Geocode.fromLatLng(lat, lng).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address);\n\n        setoriginValue(address);\n      }, error => {\n        console.error(error);\n      });\n    },\n    onDblClick: calculateRouteNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: center,\n    draggable: true,\n    icon: {\n      url: require(\"./orgin.png\"),\n      scaledSize: {\n        width: 50,\n        height: 60\n      }\n    },\n    onDragEnd: coord => {\n      const {\n        latLng\n      } = coord;\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      Geocode.fromLatLng(lat, lng).then(response => {\n        const address = response.results[0].formatted_address; //console.log(address);\n\n        setdestinationValue(address);\n      }, error => {\n        console.error(error);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: center2,\n    icon: {\n      url: require(car_alert == 0 ? \"./cargreen.png\" : \"./carred.png\"),\n      scaledSize: {\n        width: 60,\n        height: 60\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoWindow, {\n    position: center2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, \"Address: \" + caraddress + \", Azimuth - \" + carDetails.azimuth + \", DevId - \" + carDetails.devId + \", Satelites - \" + carDetails.satelites + \", SatelitesError - \" + carDetails.satelitesError + \", SoftVersion\" + carDetails.softVersion + \", Time - \" + carDetails.time + \", Speed - \" + carDetails.speed)))), directionsResponse && /*#__PURE__*/React.createElement(DirectionsRenderer, {\n    directions: directionsResponse,\n    onLoad: onDirectionLoad,\n    options: {\n      draggable: true,\n      polylineOptions: {\n        strokeOpacity: 12,\n        strokeColor: \"#1641a6\",\n        strokeWeight: 12\n      }\n    },\n    onDirectionsChanged: () => {\n      if (directionInstance) {\n        let response = directionInstance === null || directionInstance === void 0 ? void 0 : directionInstance.getDirections();\n        console.log(\"Start latitiude Response1:\", response.routes[0].legs[0].end_location.lat());\n        console.log(\"Start longitude Response1:\", response.routes[0].legs[0].end_location.lng());\n\n        if (polyline) {\n          // if polyline already exists, remove it from the map.\n          polyline.setMap(null);\n        }\n\n        if (response) {\n          var path = google.maps.geometry.encoding.decodePath(response.routes[0].overview_polyline);\n          polyline = new google.maps.Polyline({\n            path: path,\n            map: map\n          });\n        }\n      } else {\n        console.log(\"Start latitiude2 \", directionsResponse.routes[0].legs[0].end_location.lat());\n        console.log(\"Start longitude2 \", directionsResponse.routes[0].legs[0].end_location.lng());\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    borderRadius: \"lg\",\n    m: 4,\n    bgColor: \"#348feb\",\n    shadow: \"base\",\n    minW: \"container.md\",\n    zIndex: \"2\",\n    style: {\n      padding: 20,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HStack, {\n    spacing: 2,\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 400\n    },\n    type: \"text\",\n    placeholder: \"Origin\",\n    ref: originRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 400\n    },\n    type: \"text\",\n    placeholder: \"Destination\",\n    ref: destiantionRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"white\",\n      color: \"darkblue\",\n      width: 200\n    },\n    type: \"text\",\n    placeholder: \"Topic Name\",\n    value: topic_name,\n    onChange: e => settopic_name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: calculateRoute,\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"green\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }\n  }, \"SUBMIT\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: async () => {\n      let newwaypoint = waypointsdata;\n      waypointsdata.pop();\n      const directionsService = new google.maps.DirectionsService();\n      const results = await directionsService.route({\n        origin: originValue,\n        destination: destinationValue,\n        // eslint-disable-next-line no-undef\n        travelMode: google.maps.TravelMode.DRIVING,\n        waypoints: newwaypoint\n      });\n      setDirectionsResponse(results);\n      setflag(flag + 1);\n      setgetflag(getflag + 1);\n    },\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"orange\",\n      color: \"white\",\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, \"W-DEL\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: () => setcar_alert(0),\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"darkblue\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 13\n    }\n  }, \"RESET\"), /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: () => window.location.reload(),\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"red\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, \"CLEAR ALL\"))), /*#__PURE__*/React.createElement(HStack, {\n    spacing: 3,\n    justifyContent: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }\n  }, locationStoredData.length > 0 ? /*#__PURE__*/React.createElement(Dropdown, {\n    options: locationStoredData,\n    onChange: e => {\n      decodeLocationData(e.value);\n    } //  value={defaultOption}\n    ,\n    placeholder: \"SELECT LOCATION\",\n    style: {\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    colorScheme: \"pink\",\n    type: \"submit\",\n    onClick: () => {\n      confirmAlert({\n        title: \"Save Location\",\n        message: \"Are you sure to do this.\",\n        buttons: [{\n          label: \"Yes\",\n          onClick: async () => {\n            encodeLocationData();\n          }\n        }, {\n          label: \"No\",\n          onClick: () => console.log(\"Click No\")\n        }]\n      });\n    },\n    style: {\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: \"red\",\n      color: \"white\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 11\n    }\n  }, \"SAVE LOCATION\"))));\n}\n\nexport default App;","map":{"version":3,"names":["Box","Button","ButtonGroup","Flex","HStack","IconButton","Input","SkeletonText","Text","Dropdown","FaLocationArrow","FaTimes","React","Component","useEffect","axios","confirmAlert","useJsApiLoader","GoogleMap","Marker","Autocomplete","DirectionsRenderer","InfoWindow","useRef","useState","Geocode","NoEncryptionRounded","setApiKey","enableDebug","polyline","App","caraddress","setcaraddress","flag","setflag","getflag","setgetflag","center2","setcenter2","center","setcenter","lat","lng","carDetails","setcarDetails","waypointsdata","setwaypointsdata","originValue","setoriginValue","destinationValue","setdestinationValue","isFollowing","setisFollowing","locationStoredData","setlocationStoredData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setTimeout","getTopicData","getLocationData","getStocksData","url","method","headers","then","response","console","log","data","catch","e","message","alert","encodeLocationData","path","getPath","encoded","google","maps","geometry","encoding","encodePath","JSON","stringify","location","decodeLocationData","decodePath","Polyline","map","isLoaded","googleMapsApiKey","libraries","setMap","directionsResponse","setDirectionsResponse","directionInstance","setDirectionInstance","topic_name","settopic_name","car_alert","setcar_alert","originRef","destiantionRef","onDirectionLoad","directionRendererInstance","topic","speed","threshold","new_location","lon","myPosition","LatLng","poly","isLocationOnEdge","fromLatLng","address","results","formatted_address","error","calculateRoute","current","value","directionsService","DirectionsService","route","origin","destination","travelMode","TravelMode","DRIVING","waypoints","calculateRouteNew","clearRoute","width","height","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","coord","latLng","newwaypoint","push","require","scaledSize","azimuth","devId","satelites","satelitesError","softVersion","time","draggable","polylineOptions","strokeOpacity","strokeColor","strokeWeight","getDirections","routes","legs","end_location","overview_polyline","padding","borderRadius","backgroundColor","color","target","pop","fontWeight","window","reload","length","title","buttons","label","onClick"],"sources":["/Users/hawuu/Desktop/frontend 2/CarMonitoring_V1.0/src/views/CarMonitoring/CarMonitoring.js"],"sourcesContent":["/*global google*/\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Flex,\n  HStack,\n  IconButton,\n  Input,\n  SkeletonText,\n  Text,\n} from \"@chakra-ui/react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { FaLocationArrow, FaTimes } from \"react-icons/fa\";\nimport React, { Component, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport {\n  useJsApiLoader,\n  GoogleMap,\n  Marker,\n  Autocomplete,\n  DirectionsRenderer,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport { useRef, useState } from \"react\";\nimport Geocode from \"react-geocode\";\nimport { NoEncryptionRounded } from \"@material-ui/icons\";\n\nGeocode.setApiKey(\"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\");\nGeocode.enableDebug();\n\nvar polyline;\nfunction App() {\n  const [caraddress, setcaraddress] = useState(\"Loading ...\");\n  const [flag, setflag] = useState(0);\n  const [getflag, setgetflag] = useState(0);\n  const [center2, setcenter2] = useState({});\n  const [center, setcenter] = useState({ lat: 12.9492, lng: 80.2547 });\n  const [carDetails, setcarDetails] = useState([]);\n  const [waypointsdata, setwaypointsdata] = useState([]);\n  const [originValue, setoriginValue] = useState(\"\");\n  const [destinationValue, setdestinationValue] = useState(\"\");\n  const [isFollowing, setisFollowing] = useState(false);\n  const [locationStoredData, setlocationStoredData] = useState(['option 1']);\n  \n\n  useEffect(() => {\n    if (flag == 0) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        //console.log(\"Latitude is :\", position.coords.latitude);\n        //console.log(\"Longitude is :\", position.coords.longitude);\n        setcenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n      setflag(1);\n    }\n\n    if (getflag > 0) {\n\n    setTimeout(() => {\n    \t//console.log(\"Teting ++++++++\" + getflag)\n    \tgetTopicData()\n    \tsetgetflag(getflag + 1)\n\n    }, 5000)\n\n    }\n\n    getLocationData();\n  }, [flag, getflag]);\n\n  async function getLocationData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/location\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios(getStocksData)\n      .then((response) => {\n        console.log(response.data.data);\n        setlocationStoredData(response.data.data);\n      })\n      .catch(function (e) {\n        console.log(e.message);\n        if (e.message === \"Network Error\") {\n          alert(\"No Internet Found. Please check your internet connection\");\n        } else {\n          alert(\n            \"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\"\n          );\n        }\n      });\n  }\n\n  async function encodeLocationData() {\n           var path = polyline.getPath()\n\n            let encoded = google.maps.geometry.encoding.encodePath(path);\n\n            const getStocksData = {\n              url: \"http://localhost:5000/location\",\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              data: JSON.stringify({\n                location: encoded,\n              }),\n            };\n            axios(getStocksData)\n              .then((response) => {\n                console.log(response.data);\n              })\n              .catch(function (e) {\n                console.log(e.message);\n                if (e.message === \"Network Error\") {\n                  alert(\n                    \"No Internet Found. Please check your internet connection\"\n                  );\n                } else {\n                  alert(\n                    \"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\"\n                  );\n                }\n              });\n  }\n\n\n  async function decodeLocationData(encoded) {\n    console.log(encoded)\n    var path = google.maps.geometry.encoding.decodePath(encoded)\n    polyline = new google.maps.Polyline(\n      {\n        path:path,\n        map : map\n      }\n    )\n  }\n\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyB4703oaX3tg6VcgRVVot_6WPs_-E-auco\",\n    libraries: [\"places\"],\n  });\n\n  const [map, setMap] = useState(/** @type google.maps.Map */ (null));\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [directionInstance, setDirectionInstance] = useState(null);\n  const [topic_name, settopic_name] = useState(\"\");\n  const [car_alert, setcar_alert] = useState(0);\n\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const originRef = useRef();\n  /** @type React.MutableRefObject<HTMLInputElement> */\n  const destiantionRef = useRef();\n\n  if (!isLoaded) {\n    return <SkeletonText />;\n  }\n\n  function onDirectionLoad (directionRendererInstance){\n    setDirectionInstance(directionRendererInstance);\n  }\n\n  async function getTopicData() {\n    const getStocksData = {\n      url: \"http://localhost:5000/publish\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({\n        topic: topic_name,\n      }),\n    };\n    axios(getStocksData)\n      .then((response) => {\n        //console.log(\"+++++++++++++++\");\n        //console.log(response.data);\n        //console.log(\"+++++++++++++++\");\n        // setcarDetails(response.data.data)\n        try {\n\n        \tif (response.data.data.speed >= response.data.threshold) {\n        \t\t// alert(\"Correct\" + response.data.data.speed)\n        \t\tsetcar_alert(1)\n        \t}\n          \n        \telse {\n        \t\t// alert(\"error\" + response.data.data.speed)\n            \n        \t\tsetcar_alert(0)\n\n        \t}\n        }\n\n        catch {\n        \tsetcar_alert(0)\n\n        \t// alert(\"catch\" + response.data.data.speed)\n\n        }\n\n        let new_location = {\n        \t\"lat\": response.data.data.lat,\n        \t\"lng\": response.data.data.lon\n\n        }\n        setcenter(new_location)\n        setcenter2(new_location)\n        var myPosition = new google.maps.LatLng(new_location.lat, new_location.lng)\n        var isFollowing = google.maps.geometry.poly.isLocationOnEdge(myPosition, polyline, 0.00001)\n        setisFollowing(isFollowing)\n        console.log(isFollowing)\n        Geocode.fromLatLng(response.data.data.lat, response.data.data.lon).then(\n        \tresponse => {\n        \t\tconst address = response.results[0].formatted_address\n        \t\t//console.log(address)\n        \t\tsetcaraddress(address)\n\n        \t},\n        \terror => {\n        \t\t//console.error(error);\n        \t}\n        );\n      })\n      .catch(function (e) {\n        //console.log(e.message);\n        if (e.message === \"Network Error\") {\n          alert(\"No Internet Found. Please check your internet connection\");\n        } else {\n          alert(\n            \"Sorry, something went wrong. Please try again after sometime. If the issue still persists contact support.\"\n          );\n        }\n      });\n  }\n  \n\n  async function calculateRoute() {\n    if (\n      originRef.current.value === \"\" ||\n      destiantionRef.current.value === \"\" ||\n      topic_name === \"\"\n    ) {\n      alert(\"Please Enter Required Details!\");\n    }\n\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originRef.current.value,\n      destination: destiantionRef.current.value,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata,\n    });\n    setDirectionsResponse(results);\n    //console.log(\"Resultssssss 1: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  async function calculateRouteNew() {\n    // eslint-disable-next-line no-undef\n    const directionsService = new google.maps.DirectionsService();\n    const results = await directionsService.route({\n      origin: originValue,\n      destination: destinationValue,\n      // eslint-disable-next-line no-undef\n      travelMode: google.maps.TravelMode.DRIVING,\n      waypoints: waypointsdata,\n    });\n    setDirectionsResponse(results);\n    //console.log(\"Resultssssss 2: \",results)\n\n    setflag(flag + 1);\n    setgetflag(getflag + 1);\n  }\n\n  function clearRoute() {\n    setDirectionsResponse(null);\n\n    originRef.current.value = \"\";\n    destiantionRef.current.value = \"\";\n  }\n\n\n\n  return (\n    \n    <Flex\n      position=\"relative\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      h=\"98vh\"\n      // w='100vw'\n    >\n      <Box position=\"absolute\" left={0} top={0} h=\"100%\" w=\"100%\">\n        {/* Google Map Box */}\n        <GoogleMap\n          center={center}\n          zoom={18}\n          mapContainerStyle={{ width: \"100%\", height: \"100%\" }}\n          options={{\n            zoomControl: false,\n            streetViewControl: false,\n            mapTypeControl: false,\n            fullscreenControl: false,\n          }}\n          onClick={async (coord) => {\n            if (\n              originRef.current.value === \"\" ||\n              destiantionRef.current.value === \"\" ||\n              topic_name === \"\"\n            ) {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n\n              let newwaypoint = waypointsdata;\n             \n              waypointsdata.push({\n                location: { lat: lat, lng: lng }\n                \n              });\n              \n              const directionsService = new google.maps.DirectionsService();\n              const results = await directionsService.route({\n                origin: originValue,\n                destination: destinationValue,\n                // eslint-disable-next-line no-undef\n                travelMode: google.maps.TravelMode.DRIVING,\n                waypoints: newwaypoint,\n              });\n              \n              setDirectionsResponse(results);\n              //console.log(\"Resultsssssss 3: \",results)\n\n              setflag(flag + 1);\n              setgetflag(getflag + 1);\n            } \n             else {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n\n              let newwaypoint = waypointsdata;\n              waypointsdata.push({\n                location: { lat: lat, lng: lng }\n               \n              });\n              \n              const directionsService = new google.maps.DirectionsService();\n              const results = await directionsService.route({\n                origin: originRef.current.value,\n                destination: destiantionRef.current.value,\n                // eslint-disable-next-line no-undef\n                travelMode: google.maps.TravelMode.DRIVING,\n                waypoints: newwaypoint,\n              })\n\n              console.log(results)\n              \n              setDirectionsResponse(results);\n              \n              \n              setflag(flag + 1);\n              setgetflag(getflag + 1);\n            }\n          }}\n          \n          onLoad={(map) => setMap(map)}\n        >\n          <Marker\n            position={center}\n            draggable={true}\n            icon={{\n              url: require(\"./destination.png\"),\n              scaledSize: { width: 60, height: 60 },\n            }}\n            onDragEnd={(coord) => {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n              Geocode.fromLatLng(lat, lng).then(\n                (response) => {\n                  const address = response.results[0].formatted_address;\n                  //console.log(address);\n                  setoriginValue(address);\n                },\n                (error) => {\n                  console.error(error);\n                }\n              );\n            }}\n            onDblClick={calculateRouteNew}\n          />\n\n          <Marker\n            position={center}\n            draggable={true}\n            icon={{\n              url: require(\"./orgin.png\"),\n              scaledSize: { width: 50, height: 60 },\n            }}\n            onDragEnd={(coord) => {\n              const { latLng } = coord;\n              const lat = latLng.lat();\n              const lng = latLng.lng();\n              Geocode.fromLatLng(lat, lng).then(\n                (response) => {\n                  const address = response.results[0].formatted_address;\n                  //console.log(address);\n                  setdestinationValue(address);\n                },\n                (error) => {\n                  console.error(error);\n                }\n              );\n            }}\n          />\n\n          <Marker\n            position={center2}\n            icon={{\n              url: require(car_alert == 0 ? \"./cargreen.png\" : \"./carred.png\"),\n              scaledSize: { width: 60, height: 60 },\n            }}\n          >\n            <InfoWindow position={center2}>\n              <div>\n                <span>\n                  {\"Address: \" +\n                    caraddress +\n                    \", Azimuth - \" +\n                    carDetails.azimuth +\n                    \", DevId - \" +\n                    carDetails.devId +\n                    \", Satelites - \" +\n                    carDetails.satelites +\n                    \", SatelitesError - \" +\n                    carDetails.satelitesError +\n                    \", SoftVersion\" +\n                    carDetails.softVersion +\n                    \", Time - \" +\n                    carDetails.time +\n                    \", Speed - \" +\n                    carDetails.speed}\n                </span>\n              </div>\n            </InfoWindow>\n          </Marker>\n          {/* {\n\t\t\t\t\t\tcaraddress != \"Loading ...\" ?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Marker position={center2}\n\t\t\t\t\t\t\t\ticon={{\n\t\t\t\t\t\t\t\t\turl: (require(car_alert == 0 ? './cargreen.png' : './carred.png')),\n\t\t\t\t\t\t\t\t\tscaledSize: { width: 100, height: 100 }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InfoWindow position={center2}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span>{\"Address: \"+caraddress+\n\t\t\t\t\t\t\t\t\t\", Azimuth - \"+carDetails.azimuth+\n\t\t\t\t\t\t\t\t\t\", DevId - \"+carDetails.devId+\n\t\t\t\t\t\t\t\t\t\", Satelites - \"+carDetails.satelites+\n\t\t\t\t\t\t\t\t\t\", SatelitesError - \"+carDetails.satelitesError+\n\t\t\t\t\t\t\t\t\t\", SoftVersion\"+carDetails.softVersion+\", Time - \"+\n\t\t\t\t\t\t\t\t\tcarDetails.time+\n\t\t\t\t\t\t\t\t\t\", Speed - \"+carDetails.speed}</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</InfoWindow>\n\n\n\t\t\t\t\t\t\t</Marker> </>: null\n\t\t\t\t\t} */}\n\n          {directionsResponse && (\n            <DirectionsRenderer\n              directions={directionsResponse}\n              onLoad={onDirectionLoad}\n              options={{\n                draggable:true,\n                polylineOptions: {\n                  strokeOpacity: 12,\n                  strokeColor: \"#1641a6\",\n                  strokeWeight: 12,\n                },\n              }}\n              onDirectionsChanged = {() => {\n                if(directionInstance){\n                  let response =directionInstance?.getDirections();\n                  console.log(\"Start latitiude Response1:\",response.routes[0].legs[0].end_location.lat())\n                  console.log(\"Start longitude Response1:\",response.routes[0].legs[0].end_location.lng())\n                  if (polyline) {\n                    // if polyline already exists, remove it from the map.\n                    polyline.setMap(null)\n                  }\n  \n                  if(response)\n                  {\n                    \n                     var path = google.maps.geometry.encoding.decodePath(response.routes[0].overview_polyline)\n    \n                      polyline = new google.maps.Polyline(\n                          {\n                            path:path,\n                            map : map\n                          }\n                        )\n                    \n                  }\n                }else{\n                  console.log(\"Start latitiude2 \",directionsResponse.routes[0].legs[0].end_location.lat())\n                  console.log(\"Start longitude2 \",directionsResponse.routes[0].legs[0].end_location.lng())\n                }\n                \n\n              }}\n\n            />\n          )}\n        </GoogleMap>\n      </Box>\n      <Box\n        p={2}\n        borderRadius=\"lg\"\n        m={4}\n        bgColor=\"#348feb\"\n        shadow=\"base\"\n        minW=\"container.md\"\n        zIndex=\"2\"\n        style={{ padding: 20, borderRadius: 20 }}\n      >\n        <HStack spacing={2} justifyContent=\"space-between\">\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input\n                style={{\n                  padding: 10,\n                  borderRadius: 8,\n                  backgroundColor: \"white\",\n                  color: \"darkblue\",\n                  width: 400,\n                }}\n                type=\"text\"\n                placeholder=\"Origin\"\n                ref={originRef}\n              />\n            </Autocomplete>\n          </Box>\n          <Box flexGrow={1}>\n            <Autocomplete>\n              <Input\n                style={{\n                  padding: 10,\n                  borderRadius: 8,\n                  backgroundColor: \"white\",\n                  color: \"darkblue\",\n                  width: 400,\n                }}\n                type=\"text\"\n                placeholder=\"Destination\"\n                ref={destiantionRef}\n              />\n            </Autocomplete>\n          </Box>\n\n          <Box flexGrow={1}>\n            <Input\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"white\",\n                color: \"darkblue\",\n                width: 200,\n              }}\n              type=\"text\"\n              placeholder=\"Topic Name\"\n              value={topic_name}\n              onChange={(e) => settopic_name(e.target.value)}\n            />\n          </Box>\n\n          <ButtonGroup>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={calculateRoute}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"green\",\n                color: \"white\",\n              }}\n            >\n              SUBMIT\n            </Button>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={async() => {       \n                let newwaypoint = waypointsdata;\n                waypointsdata.pop()\n                \n                const directionsService = new google.maps.DirectionsService();\n                const results = await directionsService.route({\n                  origin: originValue,\n                  destination: destinationValue,\n                  // eslint-disable-next-line no-undef\n                  travelMode: google.maps.TravelMode.DRIVING,\n                  waypoints: newwaypoint,\n                });\n                setDirectionsResponse(results);\n                setflag(flag + 1);\n                setgetflag(getflag + 1);\n              }\n              }\n\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"orange\",\n                color: \"white\",\n                fontWeight:'bold'\n              }}\n            >\n              W-DEL\n            </Button>\n\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={() => setcar_alert(0)}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"darkblue\",\n                color: \"white\",\n              }}\n            >\n              RESET\n            </Button>\n            <Button\n              colorScheme=\"pink\"\n              type=\"submit\"\n              onClick={() => window.location.reload()}\n              style={{\n                padding: 10,\n                borderRadius: 8,\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n            >\n              CLEAR ALL\n            </Button>\n          </ButtonGroup>\n        </HStack>\n        <HStack spacing={3} justifyContent=\"flex-start\">\n        {locationStoredData.length > 0 ? (\n            <Dropdown\n              options={locationStoredData}\n              onChange={(e) => {\n                decodeLocationData(e.value);\n              }}\n              //  value={defaultOption}\n              placeholder=\"SELECT LOCATION\"\n              style={{ borderRadius: 20 }}\n            />\n          ) : null}\n\n\n          <Button\n            colorScheme=\"pink\"\n            type=\"submit\"\n            onClick={() => {\n              confirmAlert({\n                title: \"Save Location\",\n                message: \"Are you sure to do this.\",\n                buttons: [\n                  {\n                    label: \"Yes\",\n                    onClick: async () => {\n                      encodeLocationData();\n                    },\n                  },\n                  {\n                    label: \"No\",\n                    onClick: () => console.log(\"Click No\"),\n                  },\n                ],\n              });\n            }}\n            style={{\n              padding: 10,\n              borderRadius: 8,\n              backgroundColor: \"red\",\n              color: \"white\",\n              fontWeight: \"bold\",\n            }}\n          >\n            SAVE LOCATION\n          </Button>\n        </HStack>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SACEA,GADF,EAEEC,MAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,KAPF,EAQEC,YARF,EASEC,IATF,QAUO,kBAVP;AAWA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,0BAAP;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,gBAAzC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,qBAA7B,C,CAAoD;;AACpD,OAAO,iDAAP,C,CAA0D;;AAE1D,SACEC,cADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,UANF,QAOO,wBAPP;AAQA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AAEAD,OAAO,CAACE,SAAR,CAAkB,yCAAlB;AACAF,OAAO,CAACG,WAAR;AAEA,IAAIC,QAAJ;;AACA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,aAAD,CAA5C;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC;IAAEiB,GAAG,EAAE,OAAP;IAAgBC,GAAG,EAAE;EAArB,CAAD,CAApC;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,EAAD,CAAxD;EACA,MAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAAC6B,kBAAD,EAAqBC,qBAArB,IAA8C9B,QAAQ,CAAC,CAAC,UAAD,CAAD,CAA5D;EAGAV,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,IAAI,CAAZ,EAAe;MACbsB,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;QAC3D;QACA;QACAlB,SAAS,CAAC;UACRC,GAAG,EAAEiB,QAAQ,CAACC,MAAT,CAAgBC,QADb;UAERlB,GAAG,EAAEgB,QAAQ,CAACC,MAAT,CAAgBE;QAFb,CAAD,CAAT;MAID,CAPD;MAQA3B,OAAO,CAAC,CAAD,CAAP;IACD;;IAED,IAAIC,OAAO,GAAG,CAAd,EAAiB;MAEjB2B,UAAU,CAAC,MAAM;QAChB;QACAC,YAAY;QACZ3B,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;MAEA,CALS,EAKP,IALO,CAAV;IAOC;;IAED6B,eAAe;EAChB,CAzBQ,EAyBN,CAAC/B,IAAD,EAAOE,OAAP,CAzBM,CAAT;;EA2BA,eAAe6B,eAAf,GAAiC;IAC/B,MAAMC,aAAa,GAAG;MACpBC,GAAG,EAAE,gCADe;MAEpBC,MAAM,EAAE,KAFY;MAGpBC,OAAO,EAAE;QACP,gBAAgB;MADT;IAHW,CAAtB;IAOArD,KAAK,CAACkD,aAAD,CAAL,CACGI,IADH,CACSC,QAAD,IAAc;MAClBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcA,IAA1B;MACAnB,qBAAqB,CAACgB,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAArB;IACD,CAJH,EAKGC,KALH,CAKS,UAAUC,CAAV,EAAa;MAClBJ,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,OAAd;;MACA,IAAID,CAAC,CAACC,OAAF,KAAc,eAAlB,EAAmC;QACjCC,KAAK,CAAC,0DAAD,CAAL;MACD,CAFD,MAEO;QACLA,KAAK,CACH,4GADG,CAAL;MAGD;IACF,CAdH;EAeD;;EAED,eAAeC,kBAAf,GAAoC;IAC3B,IAAIC,IAAI,GAAGlD,QAAQ,CAACmD,OAAT,EAAX;IAEC,IAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BC,UAA9B,CAAyCP,IAAzC,CAAd;IAEA,MAAMd,aAAa,GAAG;MACpBC,GAAG,EAAE,gCADe;MAEpBC,MAAM,EAAE,MAFY;MAGpBC,OAAO,EAAE;QACP,gBAAgB;MADT,CAHW;MAMpBK,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAe;QACnBC,QAAQ,EAAER;MADS,CAAf;IANc,CAAtB;IAUAlE,KAAK,CAACkD,aAAD,CAAL,CACGI,IADH,CACSC,QAAD,IAAc;MAClBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;IACD,CAHH,EAIGC,KAJH,CAIS,UAAUC,CAAV,EAAa;MAClBJ,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,OAAd;;MACA,IAAID,CAAC,CAACC,OAAF,KAAc,eAAlB,EAAmC;QACjCC,KAAK,CACH,0DADG,CAAL;MAGD,CAJD,MAIO;QACLA,KAAK,CACH,4GADG,CAAL;MAGD;IACF,CAfH;EAgBT;;EAGD,eAAea,kBAAf,CAAkCT,OAAlC,EAA2C;IACzCV,OAAO,CAACC,GAAR,CAAYS,OAAZ;IACA,IAAIF,IAAI,GAAGG,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BM,UAA9B,CAAyCV,OAAzC,CAAX;IACApD,QAAQ,GAAG,IAAIqD,MAAM,CAACC,IAAP,CAAYS,QAAhB,CACT;MACEb,IAAI,EAACA,IADP;MAEEc,GAAG,EAAGA;IAFR,CADS,CAAX;EAMD;;EAED,MAAM;IAAEC;EAAF,IAAe7E,cAAc,CAAC;IAClC8E,gBAAgB,EAAE,yCADgB;IAElCC,SAAS,EAAE,CAAC,QAAD;EAFuB,CAAD,CAAnC;EAKA,MAAM,CAACH,GAAD,EAAMI,MAAN,IAAgBzE,QAAQ;EAAC;EAA8B,IAA/B,CAA9B;EACA,MAAM,CAAC0E,kBAAD,EAAqBC,qBAArB,IAA8C3E,QAAQ,CAAC,IAAD,CAA5D;EACA,MAAM,CAAC4E,iBAAD,EAAoBC,oBAApB,IAA4C7E,QAAQ,CAAC,IAAD,CAA1D;EACA,MAAM,CAAC8E,UAAD,EAAaC,aAAb,IAA8B/E,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACgF,SAAD,EAAYC,YAAZ,IAA4BjF,QAAQ,CAAC,CAAD,CAA1C;EAEA;;EACA,MAAMkF,SAAS,GAAGnF,MAAM,EAAxB;EACA;;EACA,MAAMoF,cAAc,GAAGpF,MAAM,EAA7B;;EAEA,IAAI,CAACuE,QAAL,EAAe;IACb,oBAAO,oBAAC,YAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACD;;EAED,SAASc,eAAT,CAA0BC,yBAA1B,EAAoD;IAClDR,oBAAoB,CAACQ,yBAAD,CAApB;EACD;;EAED,eAAe9C,YAAf,GAA8B;IAC5B,MAAME,aAAa,GAAG;MACpBC,GAAG,EAAE,+BADe;MAEpBC,MAAM,EAAE,MAFY;MAGpBC,OAAO,EAAE;QACP,gBAAgB;MADT,CAHW;MAMpBK,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAe;QACnBsB,KAAK,EAAER;MADY,CAAf;IANc,CAAtB;IAUAvF,KAAK,CAACkD,aAAD,CAAL,CACGI,IADH,CACSC,QAAD,IAAc;MAClB;MACA;MACA;MACA;MACA,IAAI;QAEH,IAAIA,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBsC,KAAnB,IAA4BzC,QAAQ,CAACG,IAAT,CAAcuC,SAA9C,EAAyD;UACxD;UACAP,YAAY,CAAC,CAAD,CAAZ;QACA,CAHD,MAKK;UACJ;UAEAA,YAAY,CAAC,CAAD,CAAZ;QAEA;MACD,CAbD,CAeA,MAAM;QACLA,YAAY,CAAC,CAAD,CAAZ,CADK,CAGL;MAEA;;MAED,IAAIQ,YAAY,GAAG;QAClB,OAAO3C,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBhC,GADR;QAElB,OAAO6B,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmByC;MAFR,CAAnB;MAKA1E,SAAS,CAACyE,YAAD,CAAT;MACA3E,UAAU,CAAC2E,YAAD,CAAV;MACA,IAAIE,UAAU,GAAG,IAAIjC,MAAM,CAACC,IAAP,CAAYiC,MAAhB,CAAuBH,YAAY,CAACxE,GAApC,EAAyCwE,YAAY,CAACvE,GAAtD,CAAjB;MACA,IAAIS,WAAW,GAAG+B,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBiC,IAArB,CAA0BC,gBAA1B,CAA2CH,UAA3C,EAAuDtF,QAAvD,EAAiE,OAAjE,CAAlB;MACAuB,cAAc,CAACD,WAAD,CAAd;MACAoB,OAAO,CAACC,GAAR,CAAYrB,WAAZ;MACA1B,OAAO,CAAC8F,UAAR,CAAmBjD,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmBhC,GAAtC,EAA2C6B,QAAQ,CAACG,IAAT,CAAcA,IAAd,CAAmByC,GAA9D,EAAmE7C,IAAnE,CACCC,QAAQ,IAAI;QACX,MAAMkD,OAAO,GAAGlD,QAAQ,CAACmD,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC,CADW,CAEX;;QACA1F,aAAa,CAACwF,OAAD,CAAb;MAEA,CANF,EAOCG,KAAK,IAAI,CACR;MACA,CATF;IAWD,CAlDH,EAmDGjD,KAnDH,CAmDS,UAAUC,CAAV,EAAa;MAClB;MACA,IAAIA,CAAC,CAACC,OAAF,KAAc,eAAlB,EAAmC;QACjCC,KAAK,CAAC,0DAAD,CAAL;MACD,CAFD,MAEO;QACLA,KAAK,CACH,4GADG,CAAL;MAGD;IACF,CA5DH;EA6DD;;EAGD,eAAe+C,cAAf,GAAgC;IAC9B,IACElB,SAAS,CAACmB,OAAV,CAAkBC,KAAlB,KAA4B,EAA5B,IACAnB,cAAc,CAACkB,OAAf,CAAuBC,KAAvB,KAAiC,EADjC,IAEAxB,UAAU,KAAK,EAHjB,EAIE;MACAzB,KAAK,CAAC,gCAAD,CAAL;IACD,CAP6B,CAS9B;;;IACA,MAAMkD,iBAAiB,GAAG,IAAI7C,MAAM,CAACC,IAAP,CAAY6C,iBAAhB,EAA1B;IACA,MAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,KAAlB,CAAwB;MAC5CC,MAAM,EAAExB,SAAS,CAACmB,OAAV,CAAkBC,KADkB;MAE5CK,WAAW,EAAExB,cAAc,CAACkB,OAAf,CAAuBC,KAFQ;MAG5C;MACAM,UAAU,EAAElD,MAAM,CAACC,IAAP,CAAYkD,UAAZ,CAAuBC,OAJS;MAK5CC,SAAS,EAAE1F;IALiC,CAAxB,CAAtB;IAOAsD,qBAAqB,CAACsB,OAAD,CAArB,CAlB8B,CAmB9B;;IAEAvF,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;IACAG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;EACD;;EAED,eAAeqG,iBAAf,GAAmC;IACjC;IACA,MAAMT,iBAAiB,GAAG,IAAI7C,MAAM,CAACC,IAAP,CAAY6C,iBAAhB,EAA1B;IACA,MAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,KAAlB,CAAwB;MAC5CC,MAAM,EAAEnF,WADoC;MAE5CoF,WAAW,EAAElF,gBAF+B;MAG5C;MACAmF,UAAU,EAAElD,MAAM,CAACC,IAAP,CAAYkD,UAAZ,CAAuBC,OAJS;MAK5CC,SAAS,EAAE1F;IALiC,CAAxB,CAAtB;IAOAsD,qBAAqB,CAACsB,OAAD,CAArB,CAViC,CAWjC;;IAEAvF,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;IACAG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;EACD;;EAED,SAASsG,UAAT,GAAsB;IACpBtC,qBAAqB,CAAC,IAAD,CAArB;IAEAO,SAAS,CAACmB,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;IACAnB,cAAc,CAACkB,OAAf,CAAuBC,KAAvB,GAA+B,EAA/B;EACD;;EAID,oBAEE,oBAAC,IAAD;IACE,QAAQ,EAAC,UADX;IAEE,aAAa,EAAC,QAFhB;IAGE,UAAU,EAAC,QAHb;IAIE,CAAC,EAAC,MAJJ,CAKE;IALF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOE,oBAAC,GAAD;IAAK,QAAQ,EAAC,UAAd;IAAyB,IAAI,EAAE,CAA/B;IAAkC,GAAG,EAAE,CAAvC;IAA0C,CAAC,EAAC,MAA5C;IAAmD,CAAC,EAAC,MAArD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE,oBAAC,SAAD;IACE,MAAM,EAAEvF,MADV;IAEE,IAAI,EAAE,EAFR;IAGE,iBAAiB,EAAE;MAAEmG,KAAK,EAAE,MAAT;MAAiBC,MAAM,EAAE;IAAzB,CAHrB;IAIE,OAAO,EAAE;MACPC,WAAW,EAAE,KADN;MAEPC,iBAAiB,EAAE,KAFZ;MAGPC,cAAc,EAAE,KAHT;MAIPC,iBAAiB,EAAE;IAJZ,CAJX;IAUE,OAAO,EAAE,MAAOC,KAAP,IAAiB;MACxB,IACEtC,SAAS,CAACmB,OAAV,CAAkBC,KAAlB,KAA4B,EAA5B,IACAnB,cAAc,CAACkB,OAAf,CAAuBC,KAAvB,KAAiC,EADjC,IAEAxB,UAAU,KAAK,EAHjB,EAIE;QACA,MAAM;UAAE2C;QAAF,IAAaD,KAAnB;QACA,MAAMvG,GAAG,GAAGwG,MAAM,CAACxG,GAAP,EAAZ;QACA,MAAMC,GAAG,GAAGuG,MAAM,CAACvG,GAAP,EAAZ;QAEA,IAAIwG,WAAW,GAAGrG,aAAlB;QAEAA,aAAa,CAACsG,IAAd,CAAmB;UACjB1D,QAAQ,EAAE;YAAEhD,GAAG,EAAEA,GAAP;YAAYC,GAAG,EAAEA;UAAjB;QADO,CAAnB;QAKA,MAAMqF,iBAAiB,GAAG,IAAI7C,MAAM,CAACC,IAAP,CAAY6C,iBAAhB,EAA1B;QACA,MAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,KAAlB,CAAwB;UAC5CC,MAAM,EAAEnF,WADoC;UAE5CoF,WAAW,EAAElF,gBAF+B;UAG5C;UACAmF,UAAU,EAAElD,MAAM,CAACC,IAAP,CAAYkD,UAAZ,CAAuBC,OAJS;UAK5CC,SAAS,EAAEW;QALiC,CAAxB,CAAtB;QAQA/C,qBAAqB,CAACsB,OAAD,CAArB,CArBA,CAsBA;;QAEAvF,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;QACAG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;MACD,CA9BD,MA+BM;QACJ,MAAM;UAAE8G;QAAF,IAAaD,KAAnB;QACA,MAAMvG,GAAG,GAAGwG,MAAM,CAACxG,GAAP,EAAZ;QACA,MAAMC,GAAG,GAAGuG,MAAM,CAACvG,GAAP,EAAZ;QAEA,IAAIwG,WAAW,GAAGrG,aAAlB;QACAA,aAAa,CAACsG,IAAd,CAAmB;UACjB1D,QAAQ,EAAE;YAAEhD,GAAG,EAAEA,GAAP;YAAYC,GAAG,EAAEA;UAAjB;QADO,CAAnB;QAKA,MAAMqF,iBAAiB,GAAG,IAAI7C,MAAM,CAACC,IAAP,CAAY6C,iBAAhB,EAA1B;QACA,MAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,KAAlB,CAAwB;UAC5CC,MAAM,EAAExB,SAAS,CAACmB,OAAV,CAAkBC,KADkB;UAE5CK,WAAW,EAAExB,cAAc,CAACkB,OAAf,CAAuBC,KAFQ;UAG5C;UACAM,UAAU,EAAElD,MAAM,CAACC,IAAP,CAAYkD,UAAZ,CAAuBC,OAJS;UAK5CC,SAAS,EAAEW;QALiC,CAAxB,CAAtB;QAQA3E,OAAO,CAACC,GAAR,CAAYiD,OAAZ;QAEAtB,qBAAqB,CAACsB,OAAD,CAArB;QAGAvF,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;QACAG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;MACD;IACF,CAtEH;IAwEE,MAAM,EAAG0D,GAAD,IAASI,MAAM,CAACJ,GAAD,CAxEzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBA0EE,oBAAC,MAAD;IACE,QAAQ,EAAEtD,MADZ;IAEE,SAAS,EAAE,IAFb;IAGE,IAAI,EAAE;MACJ2B,GAAG,EAAEkF,OAAO,CAAC,mBAAD,CADR;MAEJC,UAAU,EAAE;QAAEX,KAAK,EAAE,EAAT;QAAaC,MAAM,EAAE;MAArB;IAFR,CAHR;IAOE,SAAS,EAAGK,KAAD,IAAW;MACpB,MAAM;QAAEC;MAAF,IAAaD,KAAnB;MACA,MAAMvG,GAAG,GAAGwG,MAAM,CAACxG,GAAP,EAAZ;MACA,MAAMC,GAAG,GAAGuG,MAAM,CAACvG,GAAP,EAAZ;MACAjB,OAAO,CAAC8F,UAAR,CAAmB9E,GAAnB,EAAwBC,GAAxB,EAA6B2B,IAA7B,CACGC,QAAD,IAAc;QACZ,MAAMkD,OAAO,GAAGlD,QAAQ,CAACmD,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC,CADY,CAEZ;;QACA1E,cAAc,CAACwE,OAAD,CAAd;MACD,CALH,EAMGG,KAAD,IAAW;QACTpD,OAAO,CAACoD,KAAR,CAAcA,KAAd;MACD,CARH;IAUD,CArBH;IAsBE,UAAU,EAAEa,iBAtBd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA1EF,eAmGE,oBAAC,MAAD;IACE,QAAQ,EAAEjG,MADZ;IAEE,SAAS,EAAE,IAFb;IAGE,IAAI,EAAE;MACJ2B,GAAG,EAAEkF,OAAO,CAAC,aAAD,CADR;MAEJC,UAAU,EAAE;QAAEX,KAAK,EAAE,EAAT;QAAaC,MAAM,EAAE;MAArB;IAFR,CAHR;IAOE,SAAS,EAAGK,KAAD,IAAW;MACpB,MAAM;QAAEC;MAAF,IAAaD,KAAnB;MACA,MAAMvG,GAAG,GAAGwG,MAAM,CAACxG,GAAP,EAAZ;MACA,MAAMC,GAAG,GAAGuG,MAAM,CAACvG,GAAP,EAAZ;MACAjB,OAAO,CAAC8F,UAAR,CAAmB9E,GAAnB,EAAwBC,GAAxB,EAA6B2B,IAA7B,CACGC,QAAD,IAAc;QACZ,MAAMkD,OAAO,GAAGlD,QAAQ,CAACmD,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC,CADY,CAEZ;;QACAxE,mBAAmB,CAACsE,OAAD,CAAnB;MACD,CALH,EAMGG,KAAD,IAAW;QACTpD,OAAO,CAACoD,KAAR,CAAcA,KAAd;MACD,CARH;IAUD,CArBH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAnGF,eA2HE,oBAAC,MAAD;IACE,QAAQ,EAAEtF,OADZ;IAEE,IAAI,EAAE;MACJ6B,GAAG,EAAEkF,OAAO,CAAC5C,SAAS,IAAI,CAAb,GAAiB,gBAAjB,GAAoC,cAArC,CADR;MAEJ6C,UAAU,EAAE;QAAEX,KAAK,EAAE,EAAT;QAAaC,MAAM,EAAE;MAArB;IAFR,CAFR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOE,oBAAC,UAAD;IAAY,QAAQ,EAAEtG,OAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,cACCN,UADD,GAEC,cAFD,GAGCY,UAAU,CAAC2G,OAHZ,GAIC,YAJD,GAKC3G,UAAU,CAAC4G,KALZ,GAMC,gBAND,GAOC5G,UAAU,CAAC6G,SAPZ,GAQC,qBARD,GASC7G,UAAU,CAAC8G,cATZ,GAUC,eAVD,GAWC9G,UAAU,CAAC+G,WAXZ,GAYC,WAZD,GAaC/G,UAAU,CAACgH,IAbZ,GAcC,YAdD,GAeChH,UAAU,CAACoE,KAhBf,CADF,CADF,CAPF,CA3HF,EAuLGb,kBAAkB,iBACjB,oBAAC,kBAAD;IACE,UAAU,EAAEA,kBADd;IAEE,MAAM,EAAEU,eAFV;IAGE,OAAO,EAAE;MACPgD,SAAS,EAAC,IADH;MAEPC,eAAe,EAAE;QACfC,aAAa,EAAE,EADA;QAEfC,WAAW,EAAE,SAFE;QAGfC,YAAY,EAAE;MAHC;IAFV,CAHX;IAWE,mBAAmB,EAAI,MAAM;MAC3B,IAAG5D,iBAAH,EAAqB;QACnB,IAAI9B,QAAQ,GAAE8B,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE6D,aAAnB,EAAd;QACA1F,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCF,QAAQ,CAAC4F,MAAT,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwB,CAAxB,EAA2BC,YAA3B,CAAwC3H,GAAxC,EAAzC;QACA8B,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCF,QAAQ,CAAC4F,MAAT,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwB,CAAxB,EAA2BC,YAA3B,CAAwC1H,GAAxC,EAAzC;;QACA,IAAIb,QAAJ,EAAc;UACZ;UACAA,QAAQ,CAACoE,MAAT,CAAgB,IAAhB;QACD;;QAED,IAAG3B,QAAH,EACA;UAEG,IAAIS,IAAI,GAAGG,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBC,QAArB,CAA8BM,UAA9B,CAAyCrB,QAAQ,CAAC4F,MAAT,CAAgB,CAAhB,EAAmBG,iBAA5D,CAAX;UAECxI,QAAQ,GAAG,IAAIqD,MAAM,CAACC,IAAP,CAAYS,QAAhB,CACP;YACEb,IAAI,EAACA,IADP;YAEEc,GAAG,EAAGA;UAFR,CADO,CAAX;QAOH;MACF,CAtBD,MAsBK;QACHtB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC0B,kBAAkB,CAACgE,MAAnB,CAA0B,CAA1B,EAA6BC,IAA7B,CAAkC,CAAlC,EAAqCC,YAArC,CAAkD3H,GAAlD,EAAhC;QACA8B,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgC0B,kBAAkB,CAACgE,MAAnB,CAA0B,CAA1B,EAA6BC,IAA7B,CAAkC,CAAlC,EAAqCC,YAArC,CAAkD1H,GAAlD,EAAhC;MACD;IAGF,CAxCH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAxLJ,CAFF,CAPF,eA+OE,oBAAC,GAAD;IACE,CAAC,EAAE,CADL;IAEE,YAAY,EAAC,IAFf;IAGE,CAAC,EAAE,CAHL;IAIE,OAAO,EAAC,SAJV;IAKE,MAAM,EAAC,MALT;IAME,IAAI,EAAC,cANP;IAOE,MAAM,EAAC,GAPT;IAQE,KAAK,EAAE;MAAE4H,OAAO,EAAE,EAAX;MAAeC,YAAY,EAAE;IAA7B,CART;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAUE,oBAAC,MAAD;IAAQ,OAAO,EAAE,CAAjB;IAAoB,cAAc,EAAC,eAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IAAK,QAAQ,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,KAAK,EAAE;MACLD,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,OAHZ;MAILC,KAAK,EAAE,UAJF;MAKL/B,KAAK,EAAE;IALF,CADT;IAQE,IAAI,EAAC,MARP;IASE,WAAW,EAAC,QATd;IAUE,GAAG,EAAEhC,SAVP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CADF,eAiBE,oBAAC,GAAD;IAAK,QAAQ,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,KAAK,EAAE;MACL4D,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,OAHZ;MAILC,KAAK,EAAE,UAJF;MAKL/B,KAAK,EAAE;IALF,CADT;IAQE,IAAI,EAAC,MARP;IASE,WAAW,EAAC,aATd;IAUE,GAAG,EAAE/B,cAVP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CAjBF,eAkCE,oBAAC,GAAD;IAAK,QAAQ,EAAE,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD;IACE,KAAK,EAAE;MACL2D,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,OAHZ;MAILC,KAAK,EAAE,UAJF;MAKL/B,KAAK,EAAE;IALF,CADT;IAQE,IAAI,EAAC,MARP;IASE,WAAW,EAAC,YATd;IAUE,KAAK,EAAEpC,UAVT;IAWE,QAAQ,EAAG3B,CAAD,IAAO4B,aAAa,CAAC5B,CAAC,CAAC+F,MAAF,CAAS5C,KAAV,CAXhC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAlCF,eAkDE,oBAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,QAFP;IAGE,OAAO,EAAEF,cAHX;IAIE,KAAK,EAAE;MACL0C,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,OAHZ;MAILC,KAAK,EAAE;IAJF,CAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADF,eAcE,oBAAC,MAAD;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,QAFP;IAGE,OAAO,EAAE,YAAW;MAClB,IAAIvB,WAAW,GAAGrG,aAAlB;MACAA,aAAa,CAAC8H,GAAd;MAEA,MAAM5C,iBAAiB,GAAG,IAAI7C,MAAM,CAACC,IAAP,CAAY6C,iBAAhB,EAA1B;MACA,MAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,KAAlB,CAAwB;QAC5CC,MAAM,EAAEnF,WADoC;QAE5CoF,WAAW,EAAElF,gBAF+B;QAG5C;QACAmF,UAAU,EAAElD,MAAM,CAACC,IAAP,CAAYkD,UAAZ,CAAuBC,OAJS;QAK5CC,SAAS,EAAEW;MALiC,CAAxB,CAAtB;MAOA/C,qBAAqB,CAACsB,OAAD,CAArB;MACAvF,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;MACAG,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;IACD,CAlBH;IAqBE,KAAK,EAAE;MACLmI,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,QAHZ;MAILC,KAAK,EAAE,OAJF;MAKLG,UAAU,EAAC;IALN,CArBT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAdF,eA8CE,oBAAC,MAAD;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,QAFP;IAGE,OAAO,EAAE,MAAMnE,YAAY,CAAC,CAAD,CAH7B;IAIE,KAAK,EAAE;MACL6D,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,UAHZ;MAILC,KAAK,EAAE;IAJF,CAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WA9CF,eA2DE,oBAAC,MAAD;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,QAFP;IAGE,OAAO,EAAE,MAAMI,MAAM,CAACpF,QAAP,CAAgBqF,MAAhB,EAHjB;IAIE,KAAK,EAAE;MACLR,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,KAHZ;MAILC,KAAK,EAAE;IAJF,CAJT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eA3DF,CAlDF,CAVF,eAsIE,oBAAC,MAAD;IAAQ,OAAO,EAAE,CAAjB;IAAoB,cAAc,EAAC,YAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACCpH,kBAAkB,CAAC0H,MAAnB,GAA4B,CAA5B,gBACG,oBAAC,QAAD;IACE,OAAO,EAAE1H,kBADX;IAEE,QAAQ,EAAGsB,CAAD,IAAO;MACfe,kBAAkB,CAACf,CAAC,CAACmD,KAAH,CAAlB;IACD,CAJH,CAKE;IALF;IAME,WAAW,EAAC,iBANd;IAOE,KAAK,EAAE;MAAEyC,YAAY,EAAE;IAAhB,CAPT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADH,GAUK,IAXN,eAcE,oBAAC,MAAD;IACE,WAAW,EAAC,MADd;IAEE,IAAI,EAAC,QAFP;IAGE,OAAO,EAAE,MAAM;MACbvJ,YAAY,CAAC;QACXgK,KAAK,EAAE,eADI;QAEXpG,OAAO,EAAE,0BAFE;QAGXqG,OAAO,EAAE,CACP;UACEC,KAAK,EAAE,KADT;UAEEC,OAAO,EAAE,YAAY;YACnBrG,kBAAkB;UACnB;QAJH,CADO,EAOP;UACEoG,KAAK,EAAE,IADT;UAEEC,OAAO,EAAE,MAAM5G,OAAO,CAACC,GAAR,CAAY,UAAZ;QAFjB,CAPO;MAHE,CAAD,CAAZ;IAgBD,CApBH;IAqBE,KAAK,EAAE;MACL8F,OAAO,EAAE,EADJ;MAELC,YAAY,EAAE,CAFT;MAGLC,eAAe,EAAE,KAHZ;MAILC,KAAK,EAAE,OAJF;MAKLG,UAAU,EAAE;IALP,CArBT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBAdF,CAtIF,CA/OF,CAFF;AAwaD;;AAED,eAAe9I,GAAf"},"metadata":{},"sourceType":"module"}