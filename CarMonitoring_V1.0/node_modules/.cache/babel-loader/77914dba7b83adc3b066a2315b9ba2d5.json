{"ast":null,"code":"/*!\n * validate.js 0.13.1\n *\n * (c) 2013-2019 Nicklas Ansman, 2013 Wrapp\n * Validate.js may be freely distributed under the MIT license.\n * For all details and documentation:\n * http://validatejs.org/\n */\n(function (exports, module, define) {\n  \"use strict\"; // The main function that calls the validators specified by the constraints.\n  // The options are the following:\n  //   - format (string) - An option that controls how the returned value is formatted\n  //     * flat - Returns a flat array of just the error messages\n  //     * grouped - Returns the messages grouped by attribute (default)\n  //     * detailed - Returns an array of the raw validation data\n  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.\n  //\n  // Please note that the options are also passed to each validator.\n\n  var validate = function (attributes, constraints, options) {\n    options = v.extend({}, v.options, options);\n    var results = v.runValidations(attributes, constraints, options),\n        attr,\n        validator;\n\n    if (results.some(function (r) {\n      return v.isPromise(r.error);\n    })) {\n      throw new Error(\"Use validate.async if you want support for promises\");\n    }\n\n    return validate.processValidationResults(results, options);\n  };\n\n  var v = validate; // Copies over attributes from one or more sources to a single destination.\n  // Very much similar to underscore's extend.\n  // The first argument is the target object and the remaining arguments will be\n  // used as sources.\n\n  v.extend = function (obj) {\n    [].slice.call(arguments, 1).forEach(function (source) {\n      for (var attr in source) {\n        obj[attr] = source[attr];\n      }\n    });\n    return obj;\n  };\n\n  v.extend(validate, {\n    // This is the version of the library as a semver.\n    // The toString function will allow it to be coerced into a string\n    version: {\n      major: 0,\n      minor: 13,\n      patch: 1,\n      metadata: null,\n      toString: function () {\n        var version = v.format(\"%{major}.%{minor}.%{patch}\", v.version);\n\n        if (!v.isEmpty(v.version.metadata)) {\n          version += \"+\" + v.version.metadata;\n        }\n\n        return version;\n      }\n    },\n    // Below is the dependencies that are used in validate.js\n    // The constructor of the Promise implementation.\n    // If you are using Q.js, RSVP or any other A+ compatible implementation\n    // override this attribute to be the constructor of that promise.\n    // Since jQuery promises aren't A+ compatible they won't work.\n    Promise: typeof Promise !== \"undefined\" ? Promise :\n    /* istanbul ignore next */\n    null,\n    EMPTY_STRING_REGEXP: /^\\s*$/,\n    // Runs the validators specified by the constraints object.\n    // Will return an array of the format:\n    //     [{attribute: \"<attribute name>\", error: \"<validation result>\"}, ...]\n    runValidations: function (attributes, constraints, options) {\n      var results = [],\n          attr,\n          validatorName,\n          value,\n          validators,\n          validator,\n          validatorOptions,\n          error;\n\n      if (v.isDomElement(attributes) || v.isJqueryElement(attributes)) {\n        attributes = v.collectFormValues(attributes);\n      } // Loops through each constraints, finds the correct validator and run it.\n\n\n      for (attr in constraints) {\n        value = v.getDeepObjectValue(attributes, attr); // This allows the constraints for an attribute to be a function.\n        // The function will be called with the value, attribute name, the complete dict of\n        // attributes as well as the options and constraints passed in.\n        // This is useful when you want to have different\n        // validations depending on the attribute value.\n\n        validators = v.result(constraints[attr], value, attributes, attr, options, constraints);\n\n        for (validatorName in validators) {\n          validator = v.validators[validatorName];\n\n          if (!validator) {\n            error = v.format(\"Unknown validator %{name}\", {\n              name: validatorName\n            });\n            throw new Error(error);\n          }\n\n          validatorOptions = validators[validatorName]; // This allows the options to be a function. The function will be\n          // called with the value, attribute name, the complete dict of\n          // attributes as well as the options and constraints passed in.\n          // This is useful when you want to have different\n          // validations depending on the attribute value.\n\n          validatorOptions = v.result(validatorOptions, value, attributes, attr, options, constraints);\n\n          if (!validatorOptions) {\n            continue;\n          }\n\n          results.push({\n            attribute: attr,\n            value: value,\n            validator: validatorName,\n            globalOptions: options,\n            attributes: attributes,\n            options: validatorOptions,\n            error: validator.call(validator, value, validatorOptions, attr, attributes, options)\n          });\n        }\n      }\n\n      return results;\n    },\n    // Takes the output from runValidations and converts it to the correct\n    // output format.\n    processValidationResults: function (errors, options) {\n      errors = v.pruneEmptyErrors(errors, options);\n      errors = v.expandMultipleErrors(errors, options);\n      errors = v.convertErrorMessages(errors, options);\n      var format = options.format || \"grouped\";\n\n      if (typeof v.formatters[format] === 'function') {\n        errors = v.formatters[format](errors);\n      } else {\n        throw new Error(v.format(\"Unknown format %{format}\", options));\n      }\n\n      return v.isEmpty(errors) ? undefined : errors;\n    },\n    // Runs the validations with support for promises.\n    // This function will return a promise that is settled when all the\n    // validation promises have been completed.\n    // It can be called even if no validations returned a promise.\n    async: function (attributes, constraints, options) {\n      options = v.extend({}, v.async.options, options);\n\n      var WrapErrors = options.wrapErrors || function (errors) {\n        return errors;\n      }; // Removes unknown attributes\n\n\n      if (options.cleanAttributes !== false) {\n        attributes = v.cleanAttributes(attributes, constraints);\n      }\n\n      var results = v.runValidations(attributes, constraints, options);\n      return new v.Promise(function (resolve, reject) {\n        v.waitForResults(results).then(function () {\n          var errors = v.processValidationResults(results, options);\n\n          if (errors) {\n            reject(new WrapErrors(errors, options, attributes, constraints));\n          } else {\n            resolve(attributes);\n          }\n        }, function (err) {\n          reject(err);\n        });\n      });\n    },\n    single: function (value, constraints, options) {\n      options = v.extend({}, v.single.options, options, {\n        format: \"flat\",\n        fullMessages: false\n      });\n      return v({\n        single: value\n      }, {\n        single: constraints\n      }, options);\n    },\n    // Returns a promise that is resolved when all promises in the results array\n    // are settled. The promise returned from this function is always resolved,\n    // never rejected.\n    // This function modifies the input argument, it replaces the promises\n    // with the value returned from the promise.\n    waitForResults: function (results) {\n      // Create a sequence of all the results starting with a resolved promise.\n      return results.reduce(function (memo, result) {\n        // If this result isn't a promise skip it in the sequence.\n        if (!v.isPromise(result.error)) {\n          return memo;\n        }\n\n        return memo.then(function () {\n          return result.error.then(function (error) {\n            result.error = error || null;\n          });\n        });\n      }, new v.Promise(function (r) {\n        r();\n      })); // A resolved promise\n    },\n    // If the given argument is a call: function the and: function return the value\n    // otherwise just return the value. Additional arguments will be passed as\n    // arguments to the function.\n    // Example:\n    // ```\n    // result('foo') // 'foo'\n    // result(Math.max, 1, 2) // 2\n    // ```\n    result: function (value) {\n      var args = [].slice.call(arguments, 1);\n\n      if (typeof value === 'function') {\n        value = value.apply(null, args);\n      }\n\n      return value;\n    },\n    // Checks if the value is a number. This function does not consider NaN a\n    // number like many other `isNumber` functions do.\n    isNumber: function (value) {\n      return typeof value === 'number' && !isNaN(value);\n    },\n    // Returns false if the object is not a function\n    isFunction: function (value) {\n      return typeof value === 'function';\n    },\n    // A simple check to verify that the value is an integer. Uses `isNumber`\n    // and a simple modulo check.\n    isInteger: function (value) {\n      return v.isNumber(value) && value % 1 === 0;\n    },\n    // Checks if the value is a boolean\n    isBoolean: function (value) {\n      return typeof value === 'boolean';\n    },\n    // Uses the `Object` function to check if the given argument is an object.\n    isObject: function (obj) {\n      return obj === Object(obj);\n    },\n    // Simply checks if the object is an instance of a date\n    isDate: function (obj) {\n      return obj instanceof Date;\n    },\n    // Returns false if the object is `null` of `undefined`\n    isDefined: function (obj) {\n      return obj !== null && obj !== undefined;\n    },\n    // Checks if the given argument is a promise. Anything with a `then`\n    // function is considered a promise.\n    isPromise: function (p) {\n      return !!p && v.isFunction(p.then);\n    },\n    isJqueryElement: function (o) {\n      return o && v.isString(o.jquery);\n    },\n    isDomElement: function (o) {\n      if (!o) {\n        return false;\n      }\n\n      if (!o.querySelectorAll || !o.querySelector) {\n        return false;\n      }\n\n      if (v.isObject(document) && o === document) {\n        return true;\n      } // http://stackoverflow.com/a/384380/699304\n\n      /* istanbul ignore else */\n\n\n      if (typeof HTMLElement === \"object\") {\n        return o instanceof HTMLElement;\n      } else {\n        return o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\";\n      }\n    },\n    isEmpty: function (value) {\n      var attr; // Null and undefined are empty\n\n      if (!v.isDefined(value)) {\n        return true;\n      } // functions are non empty\n\n\n      if (v.isFunction(value)) {\n        return false;\n      } // Whitespace only strings are empty\n\n\n      if (v.isString(value)) {\n        return v.EMPTY_STRING_REGEXP.test(value);\n      } // For arrays we use the length property\n\n\n      if (v.isArray(value)) {\n        return value.length === 0;\n      } // Dates have no attributes but aren't empty\n\n\n      if (v.isDate(value)) {\n        return false;\n      } // If we find at least one property we consider it non empty\n\n\n      if (v.isObject(value)) {\n        for (attr in value) {\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    // Formats the specified strings with the given values like so:\n    // ```\n    // format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n    // ```\n    // If you want to write %{...} without having it replaced simply\n    // prefix it with % like this `Foo: %%{foo}` and it will be returned\n    // as `\"Foo: %{foo}\"`\n    format: v.extend(function (str, vals) {\n      if (!v.isString(str)) {\n        return str;\n      }\n\n      return str.replace(v.format.FORMAT_REGEXP, function (m0, m1, m2) {\n        if (m1 === '%') {\n          return \"%{\" + m2 + \"}\";\n        } else {\n          return String(vals[m2]);\n        }\n      });\n    }, {\n      // Finds %{key} style patterns in the given string\n      FORMAT_REGEXP: /(%?)%\\{([^\\}]+)\\}/g\n    }),\n    // \"Prettifies\" the given string.\n    // Prettifying means replacing [.\\_-] with spaces as well as splitting\n    // camel case words.\n    prettify: function (str) {\n      if (v.isNumber(str)) {\n        // If there are more than 2 decimals round it to two\n        if (str * 100 % 1 === 0) {\n          return \"\" + str;\n        } else {\n          return parseFloat(Math.round(str * 100) / 100).toFixed(2);\n        }\n      }\n\n      if (v.isArray(str)) {\n        return str.map(function (s) {\n          return v.prettify(s);\n        }).join(\", \");\n      }\n\n      if (v.isObject(str)) {\n        if (!v.isDefined(str.toString)) {\n          return JSON.stringify(str);\n        }\n\n        return str.toString();\n      } // Ensure the string is actually a string\n\n\n      str = \"\" + str;\n      return str // Splits keys separated by periods\n      .replace(/([^\\s])\\.([^\\s])/g, '$1 $2') // Removes backslashes\n      .replace(/\\\\+/g, '') // Replaces - and - with space\n      .replace(/[_-]/g, ' ') // Splits camel cased words\n      .replace(/([a-z])([A-Z])/g, function (m0, m1, m2) {\n        return \"\" + m1 + \" \" + m2.toLowerCase();\n      }).toLowerCase();\n    },\n    stringifyValue: function (value, options) {\n      var prettify = options && options.prettify || v.prettify;\n      return prettify(value);\n    },\n    isString: function (value) {\n      return typeof value === 'string';\n    },\n    isArray: function (value) {\n      return {}.toString.call(value) === '[object Array]';\n    },\n    // Checks if the object is a hash, which is equivalent to an object that\n    // is neither an array nor a function.\n    isHash: function (value) {\n      return v.isObject(value) && !v.isArray(value) && !v.isFunction(value);\n    },\n    contains: function (obj, value) {\n      if (!v.isDefined(obj)) {\n        return false;\n      }\n\n      if (v.isArray(obj)) {\n        return obj.indexOf(value) !== -1;\n      }\n\n      return value in obj;\n    },\n    unique: function (array) {\n      if (!v.isArray(array)) {\n        return array;\n      }\n\n      return array.filter(function (el, index, array) {\n        return array.indexOf(el) == index;\n      });\n    },\n    forEachKeyInKeypath: function (object, keypath, callback) {\n      if (!v.isString(keypath)) {\n        return undefined;\n      }\n\n      var key = \"\",\n          i,\n          escape = false;\n\n      for (i = 0; i < keypath.length; ++i) {\n        switch (keypath[i]) {\n          case '.':\n            if (escape) {\n              escape = false;\n              key += '.';\n            } else {\n              object = callback(object, key, false);\n              key = \"\";\n            }\n\n            break;\n\n          case '\\\\':\n            if (escape) {\n              escape = false;\n              key += '\\\\';\n            } else {\n              escape = true;\n            }\n\n            break;\n\n          default:\n            escape = false;\n            key += keypath[i];\n            break;\n        }\n      }\n\n      return callback(object, key, true);\n    },\n    getDeepObjectValue: function (obj, keypath) {\n      if (!v.isObject(obj)) {\n        return undefined;\n      }\n\n      return v.forEachKeyInKeypath(obj, keypath, function (obj, key) {\n        if (v.isObject(obj)) {\n          return obj[key];\n        }\n      });\n    },\n    // This returns an object with all the values of the form.\n    // It uses the input name as key and the value as value\n    // So for example this:\n    // <input type=\"text\" name=\"email\" value=\"foo@bar.com\" />\n    // would return:\n    // {email: \"foo@bar.com\"}\n    collectFormValues: function (form, options) {\n      var values = {},\n          i,\n          j,\n          input,\n          inputs,\n          option,\n          value;\n\n      if (v.isJqueryElement(form)) {\n        form = form[0];\n      }\n\n      if (!form) {\n        return values;\n      }\n\n      options = options || {};\n      inputs = form.querySelectorAll(\"input[name], textarea[name]\");\n\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        var name = input.name.replace(/\\./g, \"\\\\\\\\.\");\n        value = v.sanitizeFormValue(input.value, options);\n\n        if (input.type === \"number\") {\n          value = value ? +value : null;\n        } else if (input.type === \"checkbox\") {\n          if (input.attributes.value) {\n            if (!input.checked) {\n              value = values[name] || null;\n            }\n          } else {\n            value = input.checked;\n          }\n        } else if (input.type === \"radio\") {\n          if (!input.checked) {\n            value = values[name] || null;\n          }\n        }\n\n        values[name] = value;\n      }\n\n      inputs = form.querySelectorAll(\"select[name]\");\n\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        if (input.multiple) {\n          value = [];\n\n          for (j in input.options) {\n            option = input.options[j];\n\n            if (option && option.selected) {\n              value.push(v.sanitizeFormValue(option.value, options));\n            }\n          }\n        } else {\n          var _val = typeof input.options[input.selectedIndex] !== 'undefined' ? input.options[input.selectedIndex].value :\n          /* istanbul ignore next */\n          '';\n\n          value = v.sanitizeFormValue(_val, options);\n        }\n\n        values[input.name] = value;\n      }\n\n      return values;\n    },\n    sanitizeFormValue: function (value, options) {\n      if (options.trim && v.isString(value)) {\n        value = value.trim();\n      }\n\n      if (options.nullify !== false && value === \"\") {\n        return null;\n      }\n\n      return value;\n    },\n    capitalize: function (str) {\n      if (!v.isString(str)) {\n        return str;\n      }\n\n      return str[0].toUpperCase() + str.slice(1);\n    },\n    // Remove all errors who's error attribute is empty (null or undefined)\n    pruneEmptyErrors: function (errors) {\n      return errors.filter(function (error) {\n        return !v.isEmpty(error.error);\n      });\n    },\n    // In\n    // [{error: [\"err1\", \"err2\"], ...}]\n    // Out\n    // [{error: \"err1\", ...}, {error: \"err2\", ...}]\n    //\n    // All attributes in an error with multiple messages are duplicated\n    // when expanding the errors.\n    expandMultipleErrors: function (errors) {\n      var ret = [];\n      errors.forEach(function (error) {\n        // Removes errors without a message\n        if (v.isArray(error.error)) {\n          error.error.forEach(function (msg) {\n            ret.push(v.extend({}, error, {\n              error: msg\n            }));\n          });\n        } else {\n          ret.push(error);\n        }\n      });\n      return ret;\n    },\n    // Converts the error mesages by prepending the attribute name unless the\n    // message is prefixed by ^\n    convertErrorMessages: function (errors, options) {\n      options = options || {};\n      var ret = [],\n          prettify = options.prettify || v.prettify;\n      errors.forEach(function (errorInfo) {\n        var error = v.result(errorInfo.error, errorInfo.value, errorInfo.attribute, errorInfo.options, errorInfo.attributes, errorInfo.globalOptions);\n\n        if (!v.isString(error)) {\n          ret.push(errorInfo);\n          return;\n        }\n\n        if (error[0] === '^') {\n          error = error.slice(1);\n        } else if (options.fullMessages !== false) {\n          error = v.capitalize(prettify(errorInfo.attribute)) + \" \" + error;\n        }\n\n        error = error.replace(/\\\\\\^/g, \"^\");\n        error = v.format(error, {\n          value: v.stringifyValue(errorInfo.value, options)\n        });\n        ret.push(v.extend({}, errorInfo, {\n          error: error\n        }));\n      });\n      return ret;\n    },\n    // In:\n    // [{attribute: \"<attributeName>\", ...}]\n    // Out:\n    // {\"<attributeName>\": [{attribute: \"<attributeName>\", ...}]}\n    groupErrorsByAttribute: function (errors) {\n      var ret = {};\n      errors.forEach(function (error) {\n        var list = ret[error.attribute];\n\n        if (list) {\n          list.push(error);\n        } else {\n          ret[error.attribute] = [error];\n        }\n      });\n      return ret;\n    },\n    // In:\n    // [{error: \"<message 1>\", ...}, {error: \"<message 2>\", ...}]\n    // Out:\n    // [\"<message 1>\", \"<message 2>\"]\n    flattenErrorsToArray: function (errors) {\n      return errors.map(function (error) {\n        return error.error;\n      }).filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      });\n    },\n    cleanAttributes: function (attributes, whitelist) {\n      function whitelistCreator(obj, key, last) {\n        if (v.isObject(obj[key])) {\n          return obj[key];\n        }\n\n        return obj[key] = last ? true : {};\n      }\n\n      function buildObjectWhitelist(whitelist) {\n        var ow = {},\n            lastObject,\n            attr;\n\n        for (attr in whitelist) {\n          if (!whitelist[attr]) {\n            continue;\n          }\n\n          v.forEachKeyInKeypath(ow, attr, whitelistCreator);\n        }\n\n        return ow;\n      }\n\n      function cleanRecursive(attributes, whitelist) {\n        if (!v.isObject(attributes)) {\n          return attributes;\n        }\n\n        var ret = v.extend({}, attributes),\n            w,\n            attribute;\n\n        for (attribute in attributes) {\n          w = whitelist[attribute];\n\n          if (v.isObject(w)) {\n            ret[attribute] = cleanRecursive(ret[attribute], w);\n          } else if (!w) {\n            delete ret[attribute];\n          }\n        }\n\n        return ret;\n      }\n\n      if (!v.isObject(whitelist) || !v.isObject(attributes)) {\n        return {};\n      }\n\n      whitelist = buildObjectWhitelist(whitelist);\n      return cleanRecursive(attributes, whitelist);\n    },\n    exposeModule: function (validate, root, exports, module, define) {\n      if (exports) {\n        if (module && module.exports) {\n          exports = module.exports = validate;\n        }\n\n        exports.validate = validate;\n      } else {\n        root.validate = validate;\n\n        if (validate.isFunction(define) && define.amd) {\n          define([], function () {\n            return validate;\n          });\n        }\n      }\n    },\n    warn: function (msg) {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"[validate.js] \" + msg);\n      }\n    },\n    error: function (msg) {\n      if (typeof console !== \"undefined\" && console.error) {\n        console.error(\"[validate.js] \" + msg);\n      }\n    }\n  });\n  validate.validators = {\n    // Presence validates that the value isn't empty\n    presence: function (value, options) {\n      options = v.extend({}, this.options, options);\n\n      if (options.allowEmpty !== false ? !v.isDefined(value) : v.isEmpty(value)) {\n        return options.message || this.message || \"can't be blank\";\n      }\n    },\n    length: function (value, options, attribute) {\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var is = options.is,\n          maximum = options.maximum,\n          minimum = options.minimum,\n          tokenizer = options.tokenizer || function (val) {\n        return val;\n      },\n          err,\n          errors = [];\n\n      value = tokenizer(value);\n      var length = value.length;\n\n      if (!v.isNumber(length)) {\n        return options.message || this.notValid || \"has an incorrect length\";\n      } // Is checks\n\n\n      if (v.isNumber(is) && length !== is) {\n        err = options.wrongLength || this.wrongLength || \"is the wrong length (should be %{count} characters)\";\n        errors.push(v.format(err, {\n          count: is\n        }));\n      }\n\n      if (v.isNumber(minimum) && length < minimum) {\n        err = options.tooShort || this.tooShort || \"is too short (minimum is %{count} characters)\";\n        errors.push(v.format(err, {\n          count: minimum\n        }));\n      }\n\n      if (v.isNumber(maximum) && length > maximum) {\n        err = options.tooLong || this.tooLong || \"is too long (maximum is %{count} characters)\";\n        errors.push(v.format(err, {\n          count: maximum\n        }));\n      }\n\n      if (errors.length > 0) {\n        return options.message || errors;\n      }\n    },\n    numericality: function (value, options, attribute, attributes, globalOptions) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n      var errors = [],\n          name,\n          count,\n          checks = {\n        greaterThan: function (v, c) {\n          return v > c;\n        },\n        greaterThanOrEqualTo: function (v, c) {\n          return v >= c;\n        },\n        equalTo: function (v, c) {\n          return v === c;\n        },\n        lessThan: function (v, c) {\n          return v < c;\n        },\n        lessThanOrEqualTo: function (v, c) {\n          return v <= c;\n        },\n        divisibleBy: function (v, c) {\n          return v % c === 0;\n        }\n      },\n          prettify = options.prettify || globalOptions && globalOptions.prettify || v.prettify; // Strict will check that it is a valid looking number\n\n      if (v.isString(value) && options.strict) {\n        var pattern = \"^-?(0|[1-9]\\\\d*)\";\n\n        if (!options.onlyInteger) {\n          pattern += \"(\\\\.\\\\d+)?\";\n        }\n\n        pattern += \"$\";\n\n        if (!new RegExp(pattern).test(value)) {\n          return options.message || options.notValid || this.notValid || this.message || \"must be a valid number\";\n        }\n      } // Coerce the value to a number unless we're being strict.\n\n\n      if (options.noStrings !== true && v.isString(value) && !v.isEmpty(value)) {\n        value = +value;\n      } // If it's not a number we shouldn't continue since it will compare it.\n\n\n      if (!v.isNumber(value)) {\n        return options.message || options.notValid || this.notValid || this.message || \"is not a number\";\n      } // Same logic as above, sort of. Don't bother with comparisons if this\n      // doesn't pass.\n\n\n      if (options.onlyInteger && !v.isInteger(value)) {\n        return options.message || options.notInteger || this.notInteger || this.message || \"must be an integer\";\n      }\n\n      for (name in checks) {\n        count = options[name];\n\n        if (v.isNumber(count) && !checks[name](value, count)) {\n          // This picks the default message if specified\n          // For example the greaterThan check uses the message from\n          // this.notGreaterThan so we capitalize the name and prepend \"not\"\n          var key = \"not\" + v.capitalize(name);\n          var msg = options[key] || this[key] || this.message || \"must be %{type} %{count}\";\n          errors.push(v.format(msg, {\n            count: count,\n            type: prettify(name)\n          }));\n        }\n      }\n\n      if (options.odd && value % 2 !== 1) {\n        errors.push(options.notOdd || this.notOdd || this.message || \"must be odd\");\n      }\n\n      if (options.even && value % 2 !== 0) {\n        errors.push(options.notEven || this.notEven || this.message || \"must be even\");\n      }\n\n      if (errors.length) {\n        return options.message || errors;\n      }\n    },\n    datetime: v.extend(function (value, options) {\n      if (!v.isFunction(this.parse) || !v.isFunction(this.format)) {\n        throw new Error(\"Both the parse and format functions needs to be set to use the datetime/date validator\");\n      } // Empty values are fine\n\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n      var err,\n          errors = [],\n          earliest = options.earliest ? this.parse(options.earliest, options) : NaN,\n          latest = options.latest ? this.parse(options.latest, options) : NaN;\n      value = this.parse(value, options); // 86400000 is the number of milliseconds in a day, this is used to remove\n      // the time from the date\n\n      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {\n        err = options.notValid || options.message || this.notValid || \"must be a valid date\";\n        return v.format(err, {\n          value: arguments[0]\n        });\n      }\n\n      if (!isNaN(earliest) && value < earliest) {\n        err = options.tooEarly || options.message || this.tooEarly || \"must be no earlier than %{date}\";\n        err = v.format(err, {\n          value: this.format(value, options),\n          date: this.format(earliest, options)\n        });\n        errors.push(err);\n      }\n\n      if (!isNaN(latest) && value > latest) {\n        err = options.tooLate || options.message || this.tooLate || \"must be no later than %{date}\";\n        err = v.format(err, {\n          date: this.format(latest, options),\n          value: this.format(value, options)\n        });\n        errors.push(err);\n      }\n\n      if (errors.length) {\n        return v.unique(errors);\n      }\n    }, {\n      parse: null,\n      format: null\n    }),\n    date: function (value, options) {\n      options = v.extend({}, options, {\n        dateOnly: true\n      });\n      return v.validators.datetime.call(v.validators.datetime, value, options);\n    },\n    format: function (value, options) {\n      if (v.isString(options) || options instanceof RegExp) {\n        options = {\n          pattern: options\n        };\n      }\n\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is invalid\",\n          pattern = options.pattern,\n          match; // Empty values are allowed\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      if (v.isString(pattern)) {\n        pattern = new RegExp(options.pattern, options.flags);\n      }\n\n      match = pattern.exec(value);\n\n      if (!match || match[0].length != value.length) {\n        return message;\n      }\n    },\n    inclusion: function (value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (v.isArray(options)) {\n        options = {\n          within: options\n        };\n      }\n\n      options = v.extend({}, this.options, options);\n\n      if (v.contains(options.within, value)) {\n        return;\n      }\n\n      var message = options.message || this.message || \"^%{value} is not included in the list\";\n      return v.format(message, {\n        value: value\n      });\n    },\n    exclusion: function (value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (v.isArray(options)) {\n        options = {\n          within: options\n        };\n      }\n\n      options = v.extend({}, this.options, options);\n\n      if (!v.contains(options.within, value)) {\n        return;\n      }\n\n      var message = options.message || this.message || \"^%{value} is restricted\";\n\n      if (v.isString(options.within[value])) {\n        value = options.within[value];\n      }\n\n      return v.format(message, {\n        value: value\n      });\n    },\n    email: v.extend(function (value, options) {\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid email\"; // Empty values are fine\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      if (!this.PATTERN.exec(value)) {\n        return message;\n      }\n    }, {\n      PATTERN: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i\n    }),\n    equality: function (value, options, attribute, attributes, globalOptions) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (v.isString(options)) {\n        options = {\n          attribute: options\n        };\n      }\n\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not equal to %{attribute}\";\n\n      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {\n        throw new Error(\"The attribute must be a non empty string\");\n      }\n\n      var otherValue = v.getDeepObjectValue(attributes, options.attribute),\n          comparator = options.comparator || function (v1, v2) {\n        return v1 === v2;\n      },\n          prettify = options.prettify || globalOptions && globalOptions.prettify || v.prettify;\n\n      if (!comparator(value, otherValue, options, attribute, attributes)) {\n        return v.format(message, {\n          attribute: prettify(options.attribute)\n        });\n      }\n    },\n    // A URL validator that is used to validate URLs with the ability to\n    // restrict schemes and some domains.\n    url: function (value, options) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid url\",\n          schemes = options.schemes || this.schemes || ['http', 'https'],\n          allowLocal = options.allowLocal || this.allowLocal || false,\n          allowDataUrl = options.allowDataUrl || this.allowDataUrl || false;\n\n      if (!v.isString(value)) {\n        return message;\n      } // https://gist.github.com/dperini/729294\n\n\n      var regex = \"^\" + // protocol identifier\n      \"(?:(?:\" + schemes.join(\"|\") + \")://)\" + // user:pass authentication\n      \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\";\n      var tld = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\";\n\n      if (allowLocal) {\n        tld += \"?\";\n      } else {\n        regex += // IP address exclusion\n        // private & local networks\n        \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" + \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" + \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\";\n      }\n\n      regex += // IP address dotted notation octets\n      // excludes loopback network 0.0.0.0\n      // excludes reserved space >= 224.0.0.0\n      // excludes network & broacast addresses\n      // (first & last IP address of each class)\n      \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" + // host name\n      \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" + // domain name\n      \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" + tld + \")\" + // port number\n      \"(?::\\\\d{2,5})?\" + // resource path\n      \"(?:[/?#]\\\\S*)?\" + \"$\";\n\n      if (allowDataUrl) {\n        // RFC 2397\n        var mediaType = \"\\\\w+\\\\/[-+.\\\\w]+(?:;[\\\\w=]+)*\";\n        var urlchar = \"[A-Za-z0-9-_.!~\\\\*'();\\\\/?:@&=+$,%]*\";\n        var dataurl = \"data:(?:\" + mediaType + \")?(?:;base64)?,\" + urlchar;\n        regex = \"(?:\" + regex + \")|(?:^\" + dataurl + \"$)\";\n      }\n\n      var PATTERN = new RegExp(regex, 'i');\n\n      if (!PATTERN.exec(value)) {\n        return message;\n      }\n    },\n    type: v.extend(function (value, originalOptions, attribute, attributes, globalOptions) {\n      if (v.isString(originalOptions)) {\n        originalOptions = {\n          type: originalOptions\n        };\n      }\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      var options = v.extend({}, this.options, originalOptions);\n      var type = options.type;\n\n      if (!v.isDefined(type)) {\n        throw new Error(\"No type was specified\");\n      }\n\n      var check;\n\n      if (v.isFunction(type)) {\n        check = type;\n      } else {\n        check = this.types[type];\n      }\n\n      if (!v.isFunction(check)) {\n        throw new Error(\"validate.validators.type.types.\" + type + \" must be a function.\");\n      }\n\n      if (!check(value, options, attribute, attributes, globalOptions)) {\n        var message = originalOptions.message || this.messages[type] || this.message || options.message || (v.isFunction(type) ? \"must be of the correct type\" : \"must be of type %{type}\");\n\n        if (v.isFunction(message)) {\n          message = message(value, originalOptions, attribute, attributes, globalOptions);\n        }\n\n        return v.format(message, {\n          attribute: v.prettify(attribute),\n          type: type\n        });\n      }\n    }, {\n      types: {\n        object: function (value) {\n          return v.isObject(value) && !v.isArray(value);\n        },\n        array: v.isArray,\n        integer: v.isInteger,\n        number: v.isNumber,\n        string: v.isString,\n        date: v.isDate,\n        boolean: v.isBoolean\n      },\n      messages: {}\n    })\n  };\n  validate.formatters = {\n    detailed: function (errors) {\n      return errors;\n    },\n    flat: v.flattenErrorsToArray,\n    grouped: function (errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n\n      for (attr in errors) {\n        errors[attr] = v.flattenErrorsToArray(errors[attr]);\n      }\n\n      return errors;\n    },\n    constraint: function (errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n\n      for (attr in errors) {\n        errors[attr] = errors[attr].map(function (result) {\n          return result.validator;\n        }).sort();\n      }\n\n      return errors;\n    }\n  };\n  validate.exposeModule(validate, this, exports, module, define);\n}).call(this, typeof exports !== 'undefined' ?\n/* istanbul ignore next */\nexports : null, typeof module !== 'undefined' ?\n/* istanbul ignore next */\nmodule : null, typeof define !== 'undefined' ?\n/* istanbul ignore next */\ndefine : null);","map":{"version":3,"names":["exports","module","define","validate","attributes","constraints","options","v","extend","results","runValidations","attr","validator","some","r","isPromise","error","Error","processValidationResults","obj","slice","call","arguments","forEach","source","version","major","minor","patch","metadata","toString","format","isEmpty","Promise","EMPTY_STRING_REGEXP","validatorName","value","validators","validatorOptions","isDomElement","isJqueryElement","collectFormValues","getDeepObjectValue","result","name","push","attribute","globalOptions","errors","pruneEmptyErrors","expandMultipleErrors","convertErrorMessages","formatters","undefined","async","WrapErrors","wrapErrors","cleanAttributes","resolve","reject","waitForResults","then","err","single","fullMessages","reduce","memo","args","apply","isNumber","isNaN","isFunction","isInteger","isBoolean","isObject","Object","isDate","Date","isDefined","p","o","isString","jquery","querySelectorAll","querySelector","document","HTMLElement","nodeType","nodeName","test","isArray","length","str","vals","replace","FORMAT_REGEXP","m0","m1","m2","String","prettify","parseFloat","Math","round","toFixed","map","s","join","JSON","stringify","toLowerCase","stringifyValue","isHash","contains","indexOf","unique","array","filter","el","index","forEachKeyInKeypath","object","keypath","callback","key","i","escape","form","values","j","input","inputs","option","item","getAttribute","sanitizeFormValue","type","checked","multiple","selected","_val","selectedIndex","trim","nullify","capitalize","toUpperCase","ret","msg","errorInfo","groupErrorsByAttribute","list","flattenErrorsToArray","self","whitelist","whitelistCreator","last","buildObjectWhitelist","ow","lastObject","cleanRecursive","w","exposeModule","root","amd","warn","console","presence","allowEmpty","message","is","maximum","minimum","tokenizer","val","notValid","wrongLength","count","tooShort","tooLong","numericality","checks","greaterThan","c","greaterThanOrEqualTo","equalTo","lessThan","lessThanOrEqualTo","divisibleBy","strict","pattern","onlyInteger","RegExp","noStrings","notInteger","odd","notOdd","even","notEven","datetime","parse","earliest","NaN","latest","dateOnly","tooEarly","date","tooLate","match","flags","exec","inclusion","within","exclusion","email","PATTERN","equality","otherValue","comparator","v1","v2","url","schemes","allowLocal","allowDataUrl","regex","tld","mediaType","urlchar","dataurl","originalOptions","check","types","messages","integer","number","string","boolean","detailed","flat","grouped","constraint","sort"],"sources":["/Users/hawuu/Desktop/frontend/CarMonitoring_V1.0/node_modules/validate.js/validate.js"],"sourcesContent":["/*!\n * validate.js 0.13.1\n *\n * (c) 2013-2019 Nicklas Ansman, 2013 Wrapp\n * Validate.js may be freely distributed under the MIT license.\n * For all details and documentation:\n * http://validatejs.org/\n */\n\n(function(exports, module, define) {\n  \"use strict\";\n\n  // The main function that calls the validators specified by the constraints.\n  // The options are the following:\n  //   - format (string) - An option that controls how the returned value is formatted\n  //     * flat - Returns a flat array of just the error messages\n  //     * grouped - Returns the messages grouped by attribute (default)\n  //     * detailed - Returns an array of the raw validation data\n  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.\n  //\n  // Please note that the options are also passed to each validator.\n  var validate = function(attributes, constraints, options) {\n    options = v.extend({}, v.options, options);\n\n    var results = v.runValidations(attributes, constraints, options)\n      , attr\n      , validator;\n\n    if (results.some(function(r) { return v.isPromise(r.error); })) {\n      throw new Error(\"Use validate.async if you want support for promises\");\n    }\n    return validate.processValidationResults(results, options);\n  };\n\n  var v = validate;\n\n  // Copies over attributes from one or more sources to a single destination.\n  // Very much similar to underscore's extend.\n  // The first argument is the target object and the remaining arguments will be\n  // used as sources.\n  v.extend = function(obj) {\n    [].slice.call(arguments, 1).forEach(function(source) {\n      for (var attr in source) {\n        obj[attr] = source[attr];\n      }\n    });\n    return obj;\n  };\n\n  v.extend(validate, {\n    // This is the version of the library as a semver.\n    // The toString function will allow it to be coerced into a string\n    version: {\n      major: 0,\n      minor: 13,\n      patch: 1,\n      metadata: null,\n      toString: function() {\n        var version = v.format(\"%{major}.%{minor}.%{patch}\", v.version);\n        if (!v.isEmpty(v.version.metadata)) {\n          version += \"+\" + v.version.metadata;\n        }\n        return version;\n      }\n    },\n\n    // Below is the dependencies that are used in validate.js\n\n    // The constructor of the Promise implementation.\n    // If you are using Q.js, RSVP or any other A+ compatible implementation\n    // override this attribute to be the constructor of that promise.\n    // Since jQuery promises aren't A+ compatible they won't work.\n    Promise: typeof Promise !== \"undefined\" ? Promise : /* istanbul ignore next */ null,\n\n    EMPTY_STRING_REGEXP: /^\\s*$/,\n\n    // Runs the validators specified by the constraints object.\n    // Will return an array of the format:\n    //     [{attribute: \"<attribute name>\", error: \"<validation result>\"}, ...]\n    runValidations: function(attributes, constraints, options) {\n      var results = []\n        , attr\n        , validatorName\n        , value\n        , validators\n        , validator\n        , validatorOptions\n        , error;\n\n      if (v.isDomElement(attributes) || v.isJqueryElement(attributes)) {\n        attributes = v.collectFormValues(attributes);\n      }\n\n      // Loops through each constraints, finds the correct validator and run it.\n      for (attr in constraints) {\n        value = v.getDeepObjectValue(attributes, attr);\n        // This allows the constraints for an attribute to be a function.\n        // The function will be called with the value, attribute name, the complete dict of\n        // attributes as well as the options and constraints passed in.\n        // This is useful when you want to have different\n        // validations depending on the attribute value.\n        validators = v.result(constraints[attr], value, attributes, attr, options, constraints);\n\n        for (validatorName in validators) {\n          validator = v.validators[validatorName];\n\n          if (!validator) {\n            error = v.format(\"Unknown validator %{name}\", {name: validatorName});\n            throw new Error(error);\n          }\n\n          validatorOptions = validators[validatorName];\n          // This allows the options to be a function. The function will be\n          // called with the value, attribute name, the complete dict of\n          // attributes as well as the options and constraints passed in.\n          // This is useful when you want to have different\n          // validations depending on the attribute value.\n          validatorOptions = v.result(validatorOptions, value, attributes, attr, options, constraints);\n          if (!validatorOptions) {\n            continue;\n          }\n          results.push({\n            attribute: attr,\n            value: value,\n            validator: validatorName,\n            globalOptions: options,\n            attributes: attributes,\n            options: validatorOptions,\n            error: validator.call(validator,\n                value,\n                validatorOptions,\n                attr,\n                attributes,\n                options)\n          });\n        }\n      }\n\n      return results;\n    },\n\n    // Takes the output from runValidations and converts it to the correct\n    // output format.\n    processValidationResults: function(errors, options) {\n      errors = v.pruneEmptyErrors(errors, options);\n      errors = v.expandMultipleErrors(errors, options);\n      errors = v.convertErrorMessages(errors, options);\n\n      var format = options.format || \"grouped\";\n\n      if (typeof v.formatters[format] === 'function') {\n        errors = v.formatters[format](errors);\n      } else {\n        throw new Error(v.format(\"Unknown format %{format}\", options));\n      }\n\n      return v.isEmpty(errors) ? undefined : errors;\n    },\n\n    // Runs the validations with support for promises.\n    // This function will return a promise that is settled when all the\n    // validation promises have been completed.\n    // It can be called even if no validations returned a promise.\n    async: function(attributes, constraints, options) {\n      options = v.extend({}, v.async.options, options);\n\n      var WrapErrors = options.wrapErrors || function(errors) {\n        return errors;\n      };\n\n      // Removes unknown attributes\n      if (options.cleanAttributes !== false) {\n        attributes = v.cleanAttributes(attributes, constraints);\n      }\n\n      var results = v.runValidations(attributes, constraints, options);\n\n      return new v.Promise(function(resolve, reject) {\n        v.waitForResults(results).then(function() {\n          var errors = v.processValidationResults(results, options);\n          if (errors) {\n            reject(new WrapErrors(errors, options, attributes, constraints));\n          } else {\n            resolve(attributes);\n          }\n        }, function(err) {\n          reject(err);\n        });\n      });\n    },\n\n    single: function(value, constraints, options) {\n      options = v.extend({}, v.single.options, options, {\n        format: \"flat\",\n        fullMessages: false\n      });\n      return v({single: value}, {single: constraints}, options);\n    },\n\n    // Returns a promise that is resolved when all promises in the results array\n    // are settled. The promise returned from this function is always resolved,\n    // never rejected.\n    // This function modifies the input argument, it replaces the promises\n    // with the value returned from the promise.\n    waitForResults: function(results) {\n      // Create a sequence of all the results starting with a resolved promise.\n      return results.reduce(function(memo, result) {\n        // If this result isn't a promise skip it in the sequence.\n        if (!v.isPromise(result.error)) {\n          return memo;\n        }\n\n        return memo.then(function() {\n          return result.error.then(function(error) {\n            result.error = error || null;\n          });\n        });\n      }, new v.Promise(function(r) { r(); })); // A resolved promise\n    },\n\n    // If the given argument is a call: function the and: function return the value\n    // otherwise just return the value. Additional arguments will be passed as\n    // arguments to the function.\n    // Example:\n    // ```\n    // result('foo') // 'foo'\n    // result(Math.max, 1, 2) // 2\n    // ```\n    result: function(value) {\n      var args = [].slice.call(arguments, 1);\n      if (typeof value === 'function') {\n        value = value.apply(null, args);\n      }\n      return value;\n    },\n\n    // Checks if the value is a number. This function does not consider NaN a\n    // number like many other `isNumber` functions do.\n    isNumber: function(value) {\n      return typeof value === 'number' && !isNaN(value);\n    },\n\n    // Returns false if the object is not a function\n    isFunction: function(value) {\n      return typeof value === 'function';\n    },\n\n    // A simple check to verify that the value is an integer. Uses `isNumber`\n    // and a simple modulo check.\n    isInteger: function(value) {\n      return v.isNumber(value) && value % 1 === 0;\n    },\n\n    // Checks if the value is a boolean\n    isBoolean: function(value) {\n      return typeof value === 'boolean';\n    },\n\n    // Uses the `Object` function to check if the given argument is an object.\n    isObject: function(obj) {\n      return obj === Object(obj);\n    },\n\n    // Simply checks if the object is an instance of a date\n    isDate: function(obj) {\n      return obj instanceof Date;\n    },\n\n    // Returns false if the object is `null` of `undefined`\n    isDefined: function(obj) {\n      return obj !== null && obj !== undefined;\n    },\n\n    // Checks if the given argument is a promise. Anything with a `then`\n    // function is considered a promise.\n    isPromise: function(p) {\n      return !!p && v.isFunction(p.then);\n    },\n\n    isJqueryElement: function(o) {\n      return o && v.isString(o.jquery);\n    },\n\n    isDomElement: function(o) {\n      if (!o) {\n        return false;\n      }\n\n      if (!o.querySelectorAll || !o.querySelector) {\n        return false;\n      }\n\n      if (v.isObject(document) && o === document) {\n        return true;\n      }\n\n      // http://stackoverflow.com/a/384380/699304\n      /* istanbul ignore else */\n      if (typeof HTMLElement === \"object\") {\n        return o instanceof HTMLElement;\n      } else {\n        return o &&\n          typeof o === \"object\" &&\n          o !== null &&\n          o.nodeType === 1 &&\n          typeof o.nodeName === \"string\";\n      }\n    },\n\n    isEmpty: function(value) {\n      var attr;\n\n      // Null and undefined are empty\n      if (!v.isDefined(value)) {\n        return true;\n      }\n\n      // functions are non empty\n      if (v.isFunction(value)) {\n        return false;\n      }\n\n      // Whitespace only strings are empty\n      if (v.isString(value)) {\n        return v.EMPTY_STRING_REGEXP.test(value);\n      }\n\n      // For arrays we use the length property\n      if (v.isArray(value)) {\n        return value.length === 0;\n      }\n\n      // Dates have no attributes but aren't empty\n      if (v.isDate(value)) {\n        return false;\n      }\n\n      // If we find at least one property we consider it non empty\n      if (v.isObject(value)) {\n        for (attr in value) {\n          return false;\n        }\n        return true;\n      }\n\n      return false;\n    },\n\n    // Formats the specified strings with the given values like so:\n    // ```\n    // format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n    // ```\n    // If you want to write %{...} without having it replaced simply\n    // prefix it with % like this `Foo: %%{foo}` and it will be returned\n    // as `\"Foo: %{foo}\"`\n    format: v.extend(function(str, vals) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str.replace(v.format.FORMAT_REGEXP, function(m0, m1, m2) {\n        if (m1 === '%') {\n          return \"%{\" + m2 + \"}\";\n        } else {\n          return String(vals[m2]);\n        }\n      });\n    }, {\n      // Finds %{key} style patterns in the given string\n      FORMAT_REGEXP: /(%?)%\\{([^\\}]+)\\}/g\n    }),\n\n    // \"Prettifies\" the given string.\n    // Prettifying means replacing [.\\_-] with spaces as well as splitting\n    // camel case words.\n    prettify: function(str) {\n      if (v.isNumber(str)) {\n        // If there are more than 2 decimals round it to two\n        if ((str * 100) % 1 === 0) {\n          return \"\" + str;\n        } else {\n          return parseFloat(Math.round(str * 100) / 100).toFixed(2);\n        }\n      }\n\n      if (v.isArray(str)) {\n        return str.map(function(s) { return v.prettify(s); }).join(\", \");\n      }\n\n      if (v.isObject(str)) {\n        if (!v.isDefined(str.toString)) {\n          return JSON.stringify(str);\n        }\n\n        return str.toString();\n      }\n\n      // Ensure the string is actually a string\n      str = \"\" + str;\n\n      return str\n        // Splits keys separated by periods\n        .replace(/([^\\s])\\.([^\\s])/g, '$1 $2')\n        // Removes backslashes\n        .replace(/\\\\+/g, '')\n        // Replaces - and - with space\n        .replace(/[_-]/g, ' ')\n        // Splits camel cased words\n        .replace(/([a-z])([A-Z])/g, function(m0, m1, m2) {\n          return \"\" + m1 + \" \" + m2.toLowerCase();\n        })\n        .toLowerCase();\n    },\n\n    stringifyValue: function(value, options) {\n      var prettify = options && options.prettify || v.prettify;\n      return prettify(value);\n    },\n\n    isString: function(value) {\n      return typeof value === 'string';\n    },\n\n    isArray: function(value) {\n      return {}.toString.call(value) === '[object Array]';\n    },\n\n    // Checks if the object is a hash, which is equivalent to an object that\n    // is neither an array nor a function.\n    isHash: function(value) {\n      return v.isObject(value) && !v.isArray(value) && !v.isFunction(value);\n    },\n\n    contains: function(obj, value) {\n      if (!v.isDefined(obj)) {\n        return false;\n      }\n      if (v.isArray(obj)) {\n        return obj.indexOf(value) !== -1;\n      }\n      return value in obj;\n    },\n\n    unique: function(array) {\n      if (!v.isArray(array)) {\n        return array;\n      }\n      return array.filter(function(el, index, array) {\n        return array.indexOf(el) == index;\n      });\n    },\n\n    forEachKeyInKeypath: function(object, keypath, callback) {\n      if (!v.isString(keypath)) {\n        return undefined;\n      }\n\n      var key = \"\"\n        , i\n        , escape = false;\n\n      for (i = 0; i < keypath.length; ++i) {\n        switch (keypath[i]) {\n          case '.':\n            if (escape) {\n              escape = false;\n              key += '.';\n            } else {\n              object = callback(object, key, false);\n              key = \"\";\n            }\n            break;\n\n          case '\\\\':\n            if (escape) {\n              escape = false;\n              key += '\\\\';\n            } else {\n              escape = true;\n            }\n            break;\n\n          default:\n            escape = false;\n            key += keypath[i];\n            break;\n        }\n      }\n\n      return callback(object, key, true);\n    },\n\n    getDeepObjectValue: function(obj, keypath) {\n      if (!v.isObject(obj)) {\n        return undefined;\n      }\n\n      return v.forEachKeyInKeypath(obj, keypath, function(obj, key) {\n        if (v.isObject(obj)) {\n          return obj[key];\n        }\n      });\n    },\n\n    // This returns an object with all the values of the form.\n    // It uses the input name as key and the value as value\n    // So for example this:\n    // <input type=\"text\" name=\"email\" value=\"foo@bar.com\" />\n    // would return:\n    // {email: \"foo@bar.com\"}\n    collectFormValues: function(form, options) {\n      var values = {}\n        , i\n        , j\n        , input\n        , inputs\n        , option\n        , value;\n\n      if (v.isJqueryElement(form)) {\n        form = form[0];\n      }\n\n      if (!form) {\n        return values;\n      }\n\n      options = options || {};\n\n      inputs = form.querySelectorAll(\"input[name], textarea[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        var name = input.name.replace(/\\./g, \"\\\\\\\\.\");\n        value = v.sanitizeFormValue(input.value, options);\n        if (input.type === \"number\") {\n          value = value ? +value : null;\n        } else if (input.type === \"checkbox\") {\n          if (input.attributes.value) {\n            if (!input.checked) {\n              value = values[name] || null;\n            }\n          } else {\n            value = input.checked;\n          }\n        } else if (input.type === \"radio\") {\n          if (!input.checked) {\n            value = values[name] || null;\n          }\n        }\n        values[name] = value;\n      }\n\n      inputs = form.querySelectorAll(\"select[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        if (input.multiple) {\n          value = [];\n          for (j in input.options) {\n            option = input.options[j];\n             if (option && option.selected) {\n              value.push(v.sanitizeFormValue(option.value, options));\n            }\n          }\n        } else {\n          var _val = typeof input.options[input.selectedIndex] !== 'undefined' ? input.options[input.selectedIndex].value : /* istanbul ignore next */ '';\n          value = v.sanitizeFormValue(_val, options);\n        }\n        values[input.name] = value;\n      }\n\n      return values;\n    },\n\n    sanitizeFormValue: function(value, options) {\n      if (options.trim && v.isString(value)) {\n        value = value.trim();\n      }\n\n      if (options.nullify !== false && value === \"\") {\n        return null;\n      }\n      return value;\n    },\n\n    capitalize: function(str) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str[0].toUpperCase() + str.slice(1);\n    },\n\n    // Remove all errors who's error attribute is empty (null or undefined)\n    pruneEmptyErrors: function(errors) {\n      return errors.filter(function(error) {\n        return !v.isEmpty(error.error);\n      });\n    },\n\n    // In\n    // [{error: [\"err1\", \"err2\"], ...}]\n    // Out\n    // [{error: \"err1\", ...}, {error: \"err2\", ...}]\n    //\n    // All attributes in an error with multiple messages are duplicated\n    // when expanding the errors.\n    expandMultipleErrors: function(errors) {\n      var ret = [];\n      errors.forEach(function(error) {\n        // Removes errors without a message\n        if (v.isArray(error.error)) {\n          error.error.forEach(function(msg) {\n            ret.push(v.extend({}, error, {error: msg}));\n          });\n        } else {\n          ret.push(error);\n        }\n      });\n      return ret;\n    },\n\n    // Converts the error mesages by prepending the attribute name unless the\n    // message is prefixed by ^\n    convertErrorMessages: function(errors, options) {\n      options = options || {};\n\n      var ret = []\n        , prettify = options.prettify || v.prettify;\n      errors.forEach(function(errorInfo) {\n        var error = v.result(errorInfo.error,\n            errorInfo.value,\n            errorInfo.attribute,\n            errorInfo.options,\n            errorInfo.attributes,\n            errorInfo.globalOptions);\n\n        if (!v.isString(error)) {\n          ret.push(errorInfo);\n          return;\n        }\n\n        if (error[0] === '^') {\n          error = error.slice(1);\n        } else if (options.fullMessages !== false) {\n          error = v.capitalize(prettify(errorInfo.attribute)) + \" \" + error;\n        }\n        error = error.replace(/\\\\\\^/g, \"^\");\n        error = v.format(error, {\n          value: v.stringifyValue(errorInfo.value, options)\n        });\n        ret.push(v.extend({}, errorInfo, {error: error}));\n      });\n      return ret;\n    },\n\n    // In:\n    // [{attribute: \"<attributeName>\", ...}]\n    // Out:\n    // {\"<attributeName>\": [{attribute: \"<attributeName>\", ...}]}\n    groupErrorsByAttribute: function(errors) {\n      var ret = {};\n      errors.forEach(function(error) {\n        var list = ret[error.attribute];\n        if (list) {\n          list.push(error);\n        } else {\n          ret[error.attribute] = [error];\n        }\n      });\n      return ret;\n    },\n\n    // In:\n    // [{error: \"<message 1>\", ...}, {error: \"<message 2>\", ...}]\n    // Out:\n    // [\"<message 1>\", \"<message 2>\"]\n    flattenErrorsToArray: function(errors) {\n      return errors\n        .map(function(error) { return error.error; })\n        .filter(function(value, index, self) {\n          return self.indexOf(value) === index;\n        });\n    },\n\n    cleanAttributes: function(attributes, whitelist) {\n      function whitelistCreator(obj, key, last) {\n        if (v.isObject(obj[key])) {\n          return obj[key];\n        }\n        return (obj[key] = last ? true : {});\n      }\n\n      function buildObjectWhitelist(whitelist) {\n        var ow = {}\n          , lastObject\n          , attr;\n        for (attr in whitelist) {\n          if (!whitelist[attr]) {\n            continue;\n          }\n          v.forEachKeyInKeypath(ow, attr, whitelistCreator);\n        }\n        return ow;\n      }\n\n      function cleanRecursive(attributes, whitelist) {\n        if (!v.isObject(attributes)) {\n          return attributes;\n        }\n\n        var ret = v.extend({}, attributes)\n          , w\n          , attribute;\n\n        for (attribute in attributes) {\n          w = whitelist[attribute];\n\n          if (v.isObject(w)) {\n            ret[attribute] = cleanRecursive(ret[attribute], w);\n          } else if (!w) {\n            delete ret[attribute];\n          }\n        }\n        return ret;\n      }\n\n      if (!v.isObject(whitelist) || !v.isObject(attributes)) {\n        return {};\n      }\n\n      whitelist = buildObjectWhitelist(whitelist);\n      return cleanRecursive(attributes, whitelist);\n    },\n\n    exposeModule: function(validate, root, exports, module, define) {\n      if (exports) {\n        if (module && module.exports) {\n          exports = module.exports = validate;\n        }\n        exports.validate = validate;\n      } else {\n        root.validate = validate;\n        if (validate.isFunction(define) && define.amd) {\n          define([], function () { return validate; });\n        }\n      }\n    },\n\n    warn: function(msg) {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"[validate.js] \" + msg);\n      }\n    },\n\n    error: function(msg) {\n      if (typeof console !== \"undefined\" && console.error) {\n        console.error(\"[validate.js] \" + msg);\n      }\n    }\n  });\n\n  validate.validators = {\n    // Presence validates that the value isn't empty\n    presence: function(value, options) {\n      options = v.extend({}, this.options, options);\n      if (options.allowEmpty !== false ? !v.isDefined(value) : v.isEmpty(value)) {\n        return options.message || this.message || \"can't be blank\";\n      }\n    },\n    length: function(value, options, attribute) {\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var is = options.is\n        , maximum = options.maximum\n        , minimum = options.minimum\n        , tokenizer = options.tokenizer || function(val) { return val; }\n        , err\n        , errors = [];\n\n      value = tokenizer(value);\n      var length = value.length;\n      if(!v.isNumber(length)) {\n        return options.message || this.notValid || \"has an incorrect length\";\n      }\n\n      // Is checks\n      if (v.isNumber(is) && length !== is) {\n        err = options.wrongLength ||\n          this.wrongLength ||\n          \"is the wrong length (should be %{count} characters)\";\n        errors.push(v.format(err, {count: is}));\n      }\n\n      if (v.isNumber(minimum) && length < minimum) {\n        err = options.tooShort ||\n          this.tooShort ||\n          \"is too short (minimum is %{count} characters)\";\n        errors.push(v.format(err, {count: minimum}));\n      }\n\n      if (v.isNumber(maximum) && length > maximum) {\n        err = options.tooLong ||\n          this.tooLong ||\n          \"is too long (maximum is %{count} characters)\";\n        errors.push(v.format(err, {count: maximum}));\n      }\n\n      if (errors.length > 0) {\n        return options.message || errors;\n      }\n    },\n    numericality: function(value, options, attribute, attributes, globalOptions) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var errors = []\n        , name\n        , count\n        , checks = {\n            greaterThan:          function(v, c) { return v > c; },\n            greaterThanOrEqualTo: function(v, c) { return v >= c; },\n            equalTo:              function(v, c) { return v === c; },\n            lessThan:             function(v, c) { return v < c; },\n            lessThanOrEqualTo:    function(v, c) { return v <= c; },\n            divisibleBy:          function(v, c) { return v % c === 0; }\n          }\n        , prettify = options.prettify ||\n          (globalOptions && globalOptions.prettify) ||\n          v.prettify;\n\n      // Strict will check that it is a valid looking number\n      if (v.isString(value) && options.strict) {\n        var pattern = \"^-?(0|[1-9]\\\\d*)\";\n        if (!options.onlyInteger) {\n          pattern += \"(\\\\.\\\\d+)?\";\n        }\n        pattern += \"$\";\n\n        if (!(new RegExp(pattern).test(value))) {\n          return options.message ||\n            options.notValid ||\n            this.notValid ||\n            this.message ||\n            \"must be a valid number\";\n        }\n      }\n\n      // Coerce the value to a number unless we're being strict.\n      if (options.noStrings !== true && v.isString(value) && !v.isEmpty(value)) {\n        value = +value;\n      }\n\n      // If it's not a number we shouldn't continue since it will compare it.\n      if (!v.isNumber(value)) {\n        return options.message ||\n          options.notValid ||\n          this.notValid ||\n          this.message ||\n          \"is not a number\";\n      }\n\n      // Same logic as above, sort of. Don't bother with comparisons if this\n      // doesn't pass.\n      if (options.onlyInteger && !v.isInteger(value)) {\n        return options.message ||\n          options.notInteger ||\n          this.notInteger ||\n          this.message ||\n          \"must be an integer\";\n      }\n\n      for (name in checks) {\n        count = options[name];\n        if (v.isNumber(count) && !checks[name](value, count)) {\n          // This picks the default message if specified\n          // For example the greaterThan check uses the message from\n          // this.notGreaterThan so we capitalize the name and prepend \"not\"\n          var key = \"not\" + v.capitalize(name);\n          var msg = options[key] ||\n            this[key] ||\n            this.message ||\n            \"must be %{type} %{count}\";\n\n          errors.push(v.format(msg, {\n            count: count,\n            type: prettify(name)\n          }));\n        }\n      }\n\n      if (options.odd && value % 2 !== 1) {\n        errors.push(options.notOdd ||\n            this.notOdd ||\n            this.message ||\n            \"must be odd\");\n      }\n      if (options.even && value % 2 !== 0) {\n        errors.push(options.notEven ||\n            this.notEven ||\n            this.message ||\n            \"must be even\");\n      }\n\n      if (errors.length) {\n        return options.message || errors;\n      }\n    },\n    datetime: v.extend(function(value, options) {\n      if (!v.isFunction(this.parse) || !v.isFunction(this.format)) {\n        throw new Error(\"Both the parse and format functions needs to be set to use the datetime/date validator\");\n      }\n\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var err\n        , errors = []\n        , earliest = options.earliest ? this.parse(options.earliest, options) : NaN\n        , latest = options.latest ? this.parse(options.latest, options) : NaN;\n\n      value = this.parse(value, options);\n\n      // 86400000 is the number of milliseconds in a day, this is used to remove\n      // the time from the date\n      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {\n        err = options.notValid ||\n          options.message ||\n          this.notValid ||\n          \"must be a valid date\";\n        return v.format(err, {value: arguments[0]});\n      }\n\n      if (!isNaN(earliest) && value < earliest) {\n        err = options.tooEarly ||\n          options.message ||\n          this.tooEarly ||\n          \"must be no earlier than %{date}\";\n        err = v.format(err, {\n          value: this.format(value, options),\n          date: this.format(earliest, options)\n        });\n        errors.push(err);\n      }\n\n      if (!isNaN(latest) && value > latest) {\n        err = options.tooLate ||\n          options.message ||\n          this.tooLate ||\n          \"must be no later than %{date}\";\n        err = v.format(err, {\n          date: this.format(latest, options),\n          value: this.format(value, options)\n        });\n        errors.push(err);\n      }\n\n      if (errors.length) {\n        return v.unique(errors);\n      }\n    }, {\n      parse: null,\n      format: null\n    }),\n    date: function(value, options) {\n      options = v.extend({}, options, {dateOnly: true});\n      return v.validators.datetime.call(v.validators.datetime, value, options);\n    },\n    format: function(value, options) {\n      if (v.isString(options) || (options instanceof RegExp)) {\n        options = {pattern: options};\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var message = options.message || this.message || \"is invalid\"\n        , pattern = options.pattern\n        , match;\n\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      if (v.isString(pattern)) {\n        pattern = new RegExp(options.pattern, options.flags);\n      }\n      match = pattern.exec(value);\n      if (!match || match[0].length != value.length) {\n        return message;\n      }\n    },\n    inclusion: function(value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message ||\n        this.message ||\n        \"^%{value} is not included in the list\";\n      return v.format(message, {value: value});\n    },\n    exclusion: function(value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (!v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message || this.message || \"^%{value} is restricted\";\n      if (v.isString(options.within[value])) {\n        value = options.within[value];\n      }\n      return v.format(message, {value: value});\n    },\n    email: v.extend(function(value, options) {\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid email\";\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n      if (!this.PATTERN.exec(value)) {\n        return message;\n      }\n    }, {\n      PATTERN: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i\n    }),\n    equality: function(value, options, attribute, attributes, globalOptions) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (v.isString(options)) {\n        options = {attribute: options};\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message ||\n        this.message ||\n        \"is not equal to %{attribute}\";\n\n      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {\n        throw new Error(\"The attribute must be a non empty string\");\n      }\n\n      var otherValue = v.getDeepObjectValue(attributes, options.attribute)\n        , comparator = options.comparator || function(v1, v2) {\n          return v1 === v2;\n        }\n        , prettify = options.prettify ||\n          (globalOptions && globalOptions.prettify) ||\n          v.prettify;\n\n      if (!comparator(value, otherValue, options, attribute, attributes)) {\n        return v.format(message, {attribute: prettify(options.attribute)});\n      }\n    },\n    // A URL validator that is used to validate URLs with the ability to\n    // restrict schemes and some domains.\n    url: function(value, options) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var message = options.message || this.message || \"is not a valid url\"\n        , schemes = options.schemes || this.schemes || ['http', 'https']\n        , allowLocal = options.allowLocal || this.allowLocal || false\n        , allowDataUrl = options.allowDataUrl || this.allowDataUrl || false;\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      // https://gist.github.com/dperini/729294\n      var regex =\n        \"^\" +\n        // protocol identifier\n        \"(?:(?:\" + schemes.join(\"|\") + \")://)\" +\n        // user:pass authentication\n        \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n        \"(?:\";\n\n      var tld = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\";\n\n      if (allowLocal) {\n        tld += \"?\";\n      } else {\n        regex +=\n          // IP address exclusion\n          // private & local networks\n          \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\n          \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\n          \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\";\n      }\n\n      regex +=\n          // IP address dotted notation octets\n          // excludes loopback network 0.0.0.0\n          // excludes reserved space >= 224.0.0.0\n          // excludes network & broacast addresses\n          // (first & last IP address of each class)\n          \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n          \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n          \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n        \"|\" +\n          // host name\n          \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n          // domain name\n          \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\n          tld +\n        \")\" +\n        // port number\n        \"(?::\\\\d{2,5})?\" +\n        // resource path\n        \"(?:[/?#]\\\\S*)?\" +\n      \"$\";\n\n      if (allowDataUrl) {\n        // RFC 2397\n        var mediaType = \"\\\\w+\\\\/[-+.\\\\w]+(?:;[\\\\w=]+)*\";\n        var urlchar = \"[A-Za-z0-9-_.!~\\\\*'();\\\\/?:@&=+$,%]*\";\n        var dataurl = \"data:(?:\"+mediaType+\")?(?:;base64)?,\"+urlchar;\n        regex = \"(?:\"+regex+\")|(?:^\"+dataurl+\"$)\";\n      }\n\n      var PATTERN = new RegExp(regex, 'i');\n      if (!PATTERN.exec(value)) {\n        return message;\n      }\n    },\n    type: v.extend(function(value, originalOptions, attribute, attributes, globalOptions) {\n      if (v.isString(originalOptions)) {\n        originalOptions = {type: originalOptions};\n      }\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      var options = v.extend({}, this.options, originalOptions);\n\n      var type = options.type;\n      if (!v.isDefined(type)) {\n        throw new Error(\"No type was specified\");\n      }\n\n      var check;\n      if (v.isFunction(type)) {\n        check = type;\n      } else {\n        check = this.types[type];\n      }\n\n      if (!v.isFunction(check)) {\n        throw new Error(\"validate.validators.type.types.\" + type + \" must be a function.\");\n      }\n\n      if (!check(value, options, attribute, attributes, globalOptions)) {\n        var message = originalOptions.message ||\n          this.messages[type] ||\n          this.message ||\n          options.message ||\n          (v.isFunction(type) ? \"must be of the correct type\" : \"must be of type %{type}\");\n\n        if (v.isFunction(message)) {\n          message = message(value, originalOptions, attribute, attributes, globalOptions);\n        }\n\n        return v.format(message, {attribute: v.prettify(attribute), type: type});\n      }\n    }, {\n      types: {\n        object: function(value) {\n          return v.isObject(value) && !v.isArray(value);\n        },\n        array: v.isArray,\n        integer: v.isInteger,\n        number: v.isNumber,\n        string: v.isString,\n        date: v.isDate,\n        boolean: v.isBoolean\n      },\n      messages: {}\n    })\n  };\n\n  validate.formatters = {\n    detailed: function(errors) {return errors;},\n    flat: v.flattenErrorsToArray,\n    grouped: function(errors) {\n      var attr;\n\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = v.flattenErrorsToArray(errors[attr]);\n      }\n      return errors;\n    },\n    constraint: function(errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = errors[attr].map(function(result) {\n          return result.validator;\n        }).sort();\n      }\n      return errors;\n    }\n  };\n\n  validate.exposeModule(validate, this, exports, module, define);\n}).call(this,\n        typeof exports !== 'undefined' ? /* istanbul ignore next */ exports : null,\n        typeof module !== 'undefined' ? /* istanbul ignore next */ module : null,\n        typeof define !== 'undefined' ? /* istanbul ignore next */ define : null);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}