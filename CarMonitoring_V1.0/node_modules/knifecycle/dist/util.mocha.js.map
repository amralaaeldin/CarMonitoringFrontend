{"version":3,"sources":["../src/util.mocha.js"],"names":["aProvider","describe","it","from","to","$name","$type","$inject","$options","singleton","$extra","httpHandler","newFn","assert","notEqual","equal","deepEqual","newFn2","baseInitializer","Promise","resolve","log","sinon","stub","newInitializer","service","args","SPECIAL_PROPS","INJECT","dependencies","throws","fromDependencies","fromInitializer","toDependencies","toInitializer","baseProvider","ENV","mysql","db","noop","debug","aDebug","userId","currentTime","Date","now","foo","bar","console","baseOptions","OPTIONS","rootOptions","yolo","baseName","NAME","hash","initHash","initializeHash","extraInformations","EXTRA","baseExtraInformations","additionalExtraInformations","baseType","TYPE","inject","options","type","name","baseValue","VALUE","aServiceBuilder","baseServiceBuilder","initializeMySQL","injectedServices","services","kikooo","lol","theInitializer","sampleHandler","theHandler","result","deps","serviceName","mappedName","optional"],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport sinon from 'sinon';\nimport {\n  reuseSpecialProps,\n  wrapInitializer,\n  parseDependencyDeclaration,\n  name,\n  autoName,\n  type,\n  inject,\n  autoInject,\n  alsoInject,\n  useInject,\n  mergeInject,\n  parseInjections,\n  options,\n  extra,\n  initializer,\n  constant,\n  service,\n  autoService,\n  provider,\n  autoProvider,\n  handler,\n  autoHandler,\n  SPECIAL_PROPS,\n} from './util';\n\nfunction aProvider() {}\n\ndescribe('reuseSpecialProps', () => {\n  it('should work', () => {\n    // We can safely ignore coverage here since the\n    // function are here just as placeholders\n    /* istanbul ignore next */\n    function from() {\n      return 'from';\n    }\n    /* istanbul ignore next */\n    function to() {\n      return 'to';\n    }\n\n    from.$name = 'from';\n    from.$type = 'service';\n    from.$inject = ['ki', 'kooo', 'lol'];\n    from.$options = { singleton: false };\n    from.$extra = { httpHandler: true };\n\n    const newFn = reuseSpecialProps(from, to);\n\n    assert.notEqual(newFn, to);\n    assert.equal(newFn.$name, from.$name);\n    assert.equal(newFn.$type, from.$type);\n    assert.notEqual(newFn.$inject, from.$inject);\n    assert.deepEqual(newFn.$inject, from.$inject);\n    assert.notEqual(newFn.$options, from.$options);\n    assert.deepEqual(newFn.$options, from.$options);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n\n    const newFn2 = reuseSpecialProps(from, to, {\n      $name: 'yolo',\n    });\n\n    assert.notEqual(newFn2, to);\n    assert.equal(newFn2.$name, 'yolo');\n    assert.equal(newFn2.$type, from.$type);\n    assert.notEqual(newFn2.$inject, from.$inject);\n    assert.deepEqual(newFn2.$inject, from.$inject);\n    assert.notEqual(newFn2.$options, from.$options);\n    assert.deepEqual(newFn2.$options, from.$options);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n  });\n});\n\ndescribe('wrapInitializer', () => {\n  it('should work', async () => {\n    function baseInitializer() {\n      return Promise.resolve(() => 'test');\n    }\n\n    baseInitializer.$name = 'baseInitializer';\n    baseInitializer.$type = 'service';\n    baseInitializer.$inject = ['log', '?test'];\n    baseInitializer.$options = { singleton: false };\n    baseInitializer.$extra = { httpHandler: false };\n\n    const log = sinon.stub();\n    const newInitializer = wrapInitializer(({ log }, service) => {\n      log('Wrapping...');\n      return () => service() + '-wrapped';\n    }, baseInitializer);\n\n    const service = await newInitializer({ log });\n    assert.equal(service(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n});\n\ndescribe('inject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject(dependencies, aProvider);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with mapped dependencies', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(dependencies, aProvider);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with a constant', () => {\n    assert.throws(() => {\n      inject(['test'], constant('test', 'test'));\n    }, /E_BAD_INJECT_IN_CONSTANT/);\n  });\n});\ndescribe('useInject', () => {\n  it('should set the right dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProvider);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProvider);\n    const newInitializer = useInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('mergeInject', () => {\n  it('should amend dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProvider);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProvider);\n    const newInitializer = mergeInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...toDependencies,\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('autoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const baseProvider = async ({ ENV, mysql: db }) => async () => ({\n      ENV,\n      db,\n    });\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with a function name', () => {\n    async function baseProvider({ ENV, mysql: db }) {\n      async () => ({\n        ENV,\n        db,\n      });\n    }\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with optional dependencies', () => {\n    const noop = () => {};\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with several arguments', () => {\n    const noop = () => {};\n    const baseProvider = async (\n      { ENV, log = noop, debug: aDebug = noop },\n      { userId },\n    ) => async () => ({\n      ENV,\n      log,\n      aDebug,\n      userId,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with complex arguments', () => {\n    const noop = () => {};\n    const baseProvider = async (\n      { ENV, log = noop, debug: aDebug = noop },\n      { userId, currentTime = Date.now() },\n    ) => async () => ({\n      ENV,\n      log,\n      aDebug,\n      userId,\n      currentTime,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with non async initializers', () => {\n    assert.throws(() => {\n      autoInject(({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_NON_ASYNC_INITIALIZER/);\n  });\n\n  it('should fail with too complex injections', () => {\n    assert.throws(() => {\n      autoInject(async ({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n\n  it('should fail with no injections', () => {\n    assert.throws(() => {\n      autoInject(async () => {});\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n});\n\ndescribe('alsoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], inject(['TEST'], aProvider));\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['TEST', 'ENV']);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProvider);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n\n  it('should dedupe dependencies', () => {\n    const baseProvider = inject(['?TEST'], aProvider);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'TEST2', 'db>mysql'],\n      alsoInject(['ENV', 'NODE_ENV', '?TEST', '?TEST2', 'mysql'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'TEST2',\n      'db>mysql',\n    ]);\n  });\n\n  it('should preserve single optional dependencies', () => {\n    const baseProvider = inject(['ENV', '?TEST'], aProvider);\n    const newInitializer = alsoInject(\n      ['ENV', '?TEST2'],\n      alsoInject(['ENV', '?TEST3'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      '?TEST',\n      '?TEST3',\n      'ENV',\n      '?TEST2',\n    ]);\n  });\n\n  it('should preserve mapped dependencies', () => {\n    const baseProvider = inject(['mysql', '?sftp'], aProvider);\n    const newInitializer = alsoInject(['db>mysql', '?ftp>sftp'], baseProvider);\n    console.log(newInitializer[SPECIAL_PROPS.INJECT]);\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      '?sftp',\n      'db>mysql',\n      '?ftp>sftp',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProvider);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProvider);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n});\n\ndescribe('parseInjections', () => {\n  it('should work with TypeScript dependencies', () => {\n    assert.deepEqual(\n      parseInjections(`async function initNexmo({\n      ENV,\n      NEXMO,\n      log = noop,\n    }: {\n      ENV: any;\n      NEXMO: any;\n      log: Function;\n    }): Promise<SMSService> {}`),\n      ['ENV', 'NEXMO', '?log'],\n    );\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProvider);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n});\n\ndescribe('options', () => {\n  it('should allow to decorate an initializer with options', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const newInitializer = inject(\n      dependencies,\n      options(baseOptions, aProvider, false),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n  });\n\n  it('should allow to decorate an initializer with options', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const rootOptions = { yolo: true, singleton: false };\n    const baseOptions = { singleton: true };\n    const newInitializer = inject(\n      dependencies,\n      options(baseOptions, options(rootOptions, aProvider), true),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], rootOptions);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], {\n      ...rootOptions,\n      ...baseOptions,\n    });\n  });\n});\n\ndescribe('name', () => {\n  it('should allow to decorate an initializer with a name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      options(baseOptions, name(baseName, aProvider)),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n});\n\ndescribe('autoName', () => {\n  it('should allow to decorate an initializer with its function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      options(\n        baseOptions,\n        autoName(async function hash() {}),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its init like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      options(\n        baseOptions,\n        autoName(async function initHash() {}),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its initialize like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      options(\n        baseOptions,\n        autoName(async function initializeHash() {}),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate a bounded initializer', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const newInitializer = autoName(\n      inject(\n        dependencies,\n        options(baseOptions, async function initializeHash() {}),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should fail with anonymous functions', () => {\n    assert.throws(() => {\n      autoName(async () => {});\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('extra', () => {\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProvider);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProvider, true);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with additional extra infos', () => {\n    const baseExtraInformations = { yolo: true, httpHandler: false };\n    const additionalExtraInformations = { httpHandler: true };\n    const newInitializer = extra(\n      baseExtraInformations,\n      extra(additionalExtraInformations, aProvider),\n      true,\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], {\n      ...baseExtraInformations,\n      ...baseExtraInformations,\n    });\n  });\n});\n\ndescribe('type', () => {\n  it('should allow to decorate an initializer with a type', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = inject(\n      dependencies,\n      options(baseOptions, name(baseName, type(baseType, aProvider))),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n});\n\ndescribe('initializer', () => {\n  it('should allow to decorate an initializer with every properties', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = initializer(\n      {\n        inject: dependencies,\n        options: baseOptions,\n        type: baseType,\n        name: baseName,\n      },\n      aProvider,\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with bad properties', () => {\n    assert.throws(() => {\n      initializer(\n        {\n          name: 'yolo',\n          yolo: '',\n        },\n        async () => {},\n      );\n    }, /E_BAD_PROPERTY/);\n  });\n});\n\ndescribe('constant', () => {\n  it('should allow to create an initializer from a constant', async () => {\n    const baseValue = 'THE_VALUE';\n    const baseName = 42;\n    const newInitializer = constant(baseName, baseValue);\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], {\n      singleton: true,\n    });\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'constant');\n    assert.equal(newInitializer[SPECIAL_PROPS.VALUE], baseValue);\n    assert.equal(await newInitializer(), baseValue);\n  });\n\n  it('should fail with dependencies since it makes no sense', () => {\n    assert.throws(() => {\n      constant(\n        'time',\n        inject(['hash3'], async () => {}),\n      );\n    }, /E_CONSTANT_INJECTION/);\n  });\n});\n\ndescribe('service', () => {\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async () => {};\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      baseOptions,\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async () => {};\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      name(\n        baseName,\n        inject(dependencies, options(baseOptions, aServiceBuilder)),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no service builder', () => {\n    assert.throws(() => {\n      service();\n    }, /E_NO_SERVICE_BUILDER/);\n  });\n});\n\ndescribe('autoService', () => {\n  it('should detect the service details', () => {\n    const baseServiceBuilder = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n\n  it('should detect the service details even with no dependencies', () => {\n    const baseServiceBuilder = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n});\n\ndescribe('provider', () => {\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async () => {};\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      baseOptions,\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async () => {};\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseOptions = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      name(\n        baseName,\n        inject(dependencies, options(baseOptions, aServiceBuilder)),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.OPTIONS], baseOptions);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no provider builder', () => {\n    assert.throws(() => {\n      provider();\n    }, /E_NO_PROVIDER_BUILDER/);\n  });\n});\n\ndescribe('autoProvider', () => {\n  it('should detect the provider details', () => {\n    const baseInitializer = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n\n  it('should detect the provider details even with no dependencies', () => {\n    const baseInitializer = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n});\n\ndescribe('handler', () => {\n  it('should work', async () => {\n    const baseName = 'sampleHandler';\n    const injectedServices = ['kikooo', 'lol'];\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = handler(sampleHandler, baseName, injectedServices);\n\n    assert.deepEqual(theInitializer.$name, baseName);\n    assert.deepEqual(theInitializer.$inject, injectedServices);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    function sampleHandler(deps, ...args) {\n      return Promise.resolve({ deps, args });\n    }\n  });\n\n  it('should fail with no name', () => {\n    assert.throws(() => {\n      handler(() => {});\n    }, /E_NO_HANDLER_NAME/);\n  });\n});\n\ndescribe('autoHandler', () => {\n  it('should work', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual(theInitializer.$name, sampleHandler.name);\n    assert.deepEqual(theInitializer.$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol }, ...args) {\n      return Promise.resolve({ deps: { kikooo, lol }, args });\n    }\n  });\n\n  it('should work with spread services', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual(theInitializer.$name, sampleHandler.name);\n    assert.deepEqual(theInitializer.$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol, ...services }, ...args) {\n      return Promise.resolve({ deps: { kikooo, lol, ...services }, args });\n    }\n  });\n\n  it('should fail for anonymous functions', () => {\n    assert.throws(() => {\n      autoHandler(() => {});\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('parseDependencyDeclaration', () => {\n  it('should work', () => {\n    assert.deepEqual(parseDependencyDeclaration('db>pgsql'), {\n      serviceName: 'db',\n      mappedName: 'pgsql',\n      optional: false,\n    });\n  });\n\n  it('should work with unmapped names', () => {\n    assert.deepEqual(parseDependencyDeclaration('?pgsql'), {\n      serviceName: 'pgsql',\n      mappedName: 'pgsql',\n      optional: true,\n    });\n  });\n});\n"],"file":"util.mocha.js"}