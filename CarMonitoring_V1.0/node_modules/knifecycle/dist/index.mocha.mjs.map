{"version":3,"sources":["../src/index.mocha.js"],"names":["assert","sinon","YError","SPECIAL_PROPS","Knifecycle","initializer","inject","constant","service","provider","ALLOWED_INITIALIZER_TYPES","describe","$","ENV","MY_ENV_VAR","time","Date","now","bind","timeService","Promise","resolve","hashProvider","hash","beforeEach","it","register","deepEqual","run","TEST","err","equal","code","test","type","name","options","singleton","throws","params","fn","NAME","TYPE","VALUE","undef","OPTIONS","NaN","dependencies","Object","keys","sampleService","sample","DEBUG","timeServiceStub","spy","args","providerStub","stub","returns","providerStub2","stub2","Error","dbProvider","processProvider","$fatalError","fatalErrorPromise","promise","reject","process","db","message","serviceName","path","toUpperCase","skip","log","injectDependencies","$injector","aHash","aTime","sameHash","all","notEqual","yaSameHash","hash2","sameHash2","destroy","$instance","dependenciesBuckets","map","dependencies1","dependencies2","$dispose","shutdownCallResolve","shutdownResolve","shutdownCallPromise","shutdownStub","dispose","finalPromise","then","servicesShutdownCalls","newDependencies","toMermaidGraph","shapes","pattern","template","classes","exotic","styles","className"],"mappings":"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","sourcesContent":["/* eslint max-nested-callbacks:0 */\n\nimport assert from 'assert';\nimport sinon from 'sinon';\nimport YError from 'yerror';\n\nimport {\n  SPECIAL_PROPS,\n  Knifecycle,\n  initializer,\n  inject,\n  constant,\n  service,\n  provider,\n} from './index';\nimport { ALLOWED_INITIALIZER_TYPES } from './util';\n\ndescribe('Knifecycle', () => {\n  let $;\n  const ENV = {\n    MY_ENV_VAR: 'plop',\n  };\n  const time = Date.now.bind(Date);\n\n  function timeService() {\n    return Promise.resolve(time);\n  }\n\n  function hashProvider(hash) {\n    return Promise.resolve({\n      service: hash,\n    });\n  }\n\n  beforeEach(() => {\n    $ = new Knifecycle();\n  });\n\n  describe('register', () => {\n    describe('with constants', () => {\n      it('should work with an object', () => {\n        $.register(constant('ENV', ENV));\n      });\n\n      it('should work with a function', () => {\n        $.register(constant('time', time));\n      });\n\n      it('should work when overriding a previously set constant', async () => {\n        $.register(constant('TEST', 1));\n        $.register(constant('TEST', 2));\n        assert.deepEqual(await $.run(['TEST']), { TEST: 2 });\n      });\n\n      it('should fail when overriding an initialized constant', async () => {\n        $.register(constant('TEST', 1));\n        assert.deepEqual(await $.run(['TEST']), { TEST: 1 });\n\n        try {\n          $.register(constant('TEST', 2));\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    describe('with services', () => {\n      it('should  work with a service', () => {\n        $.register(service(timeService, 'time'));\n      });\n\n      it('should work when overriding a previously set service', async () => {\n        $.register(service(async () => () => 1, 'test'));\n        $.register(service(async () => () => 2, 'test'));\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test(), 2);\n      });\n\n      it('should fail when overriding an initialized service', async () => {\n        $.register(service(async () => () => 1, 'test'));\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test(), 1);\n\n        try {\n          $.register(service(async () => () => 2, 'test'));\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    describe('with providers', () => {\n      it('should  work with a provider', () => {\n        $.register(service(hashProvider, 'hash'));\n      });\n\n      it('should work when overriding a previously set provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 2,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 2);\n      });\n\n      it('should work when overriding a previously set singleton provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n              options: { singleton: true },\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 2,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 2);\n      });\n\n      it('should fail when overriding an initialized provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n              options: { singleton: true },\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 1);\n\n        try {\n          $.register(\n            initializer(\n              {\n                type: 'provider',\n                name: 'test',\n                inject: [],\n              },\n              async () => ({\n                service: 2,\n              }),\n            ),\n          );\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    it('should fail when intitializer is no a function', () => {\n      assert.throws(\n        () => {\n          $.register('not_a_function');\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_INITIALIZER');\n          assert.deepEqual(err.params, ['not_a_function']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with no service name', () => {\n      assert.throws(\n        () => {\n          $.register(() => {});\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_ANONYMOUS_ANALYZER');\n          assert.deepEqual(err.params, []);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a bad service type', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'test';\n          fn[SPECIAL_PROPS.TYPE] = 'not_allowed_type';\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_INITIALIZER_TYPE');\n          assert.deepEqual(err.params, [\n            'test',\n            'not_allowed_type',\n            ALLOWED_INITIALIZER_TYPES,\n          ]);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with an undefined constant', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'THE_NUMBER';\n          fn[SPECIAL_PROPS.TYPE] = 'constant';\n          fn[SPECIAL_PROPS.VALUE] = {}.undef;\n          fn[SPECIAL_PROPS.OPTIONS] = { singleton: true };\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_UNDEFINED_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['THE_NUMBER']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a constant that is not a singleton', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'THE_NUMBER';\n          fn[SPECIAL_PROPS.TYPE] = 'constant';\n          fn[SPECIAL_PROPS.VALUE] = NaN;\n          fn[SPECIAL_PROPS.OPTIONS] = { singleton: false };\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_NON_SINGLETON_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['THE_NUMBER']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a non constant that has a value', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'myService';\n          fn[SPECIAL_PROPS.TYPE] = 'service';\n          fn[SPECIAL_PROPS.VALUE] = 42;\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_VALUED_NON_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['myService']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with special autoload intitializer that is not a singleton', () => {\n      assert.throws(\n        () => {\n          $.register(\n            initializer(\n              {\n                name: '$autoload',\n                type: 'provider',\n              },\n              () => {},\n            ),\n          );\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_AUTOLOADER');\n          assert.deepEqual(err.params, [{}]);\n          return true;\n        },\n      );\n    });\n  });\n\n  describe('provider', () => {\n    it('should register provider', () => {\n      $.register(provider(hashProvider, 'hash'));\n    });\n\n    it('should fail with direct circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(hashProvider, 'hash', ['hash']));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with direct circular dependencies on mapped services', () => {\n      assert.throws(\n        () => {\n          $.register(provider(hashProvider, 'hash', ['hash>lol']));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash3'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash1'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash3', 'hash', 'hash3']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with deeper circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash1'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash2'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash3'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, [\n            'hash3',\n            'hash',\n            'hash1',\n            'hash2',\n            'hash3',\n          ]);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with circular dependencies on mapped services', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash3>aHash3'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash>aHash'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash1>aHash1'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash>aHash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash3', 'hash>aHash', 'hash3>aHash3']);\n          return true;\n        },\n      );\n    });\n  });\n\n  describe('run', () => {\n    it('should work with no dependencies', async () => {\n      const dependencies = await $.run([]);\n\n      assert.deepEqual(dependencies, {});\n    });\n\n    it('should work with constant dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['time', 'ENV']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'ENV']);\n      assert.deepEqual(dependencies, {\n        ENV,\n        time,\n      });\n    });\n\n    it('should work with service dependencies', async () => {\n      $.register(\n        service(\n          inject(['time'], function sampleService({ time }) {\n            return Promise.resolve(typeof time);\n          }),\n          'sample',\n        ),\n      );\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['sample']);\n\n      assert.deepEqual(Object.keys(dependencies), ['sample']);\n      assert.deepEqual(dependencies, {\n        sample: 'function',\n      });\n    });\n\n    it('should work with simple dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should work with given optional dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('DEBUG', {}));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: {} },\n        time,\n      });\n    });\n\n    it('should work with lacking optional dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: {}.undef },\n        time,\n      });\n    });\n\n    it('should work with deeper dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n\n      const dependencies = await $.run(['hash5', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash5', 'time']);\n    });\n\n    it('should instanciate services once', async () => {\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'time'));\n      $.register(provider(hashProvider, 'hash', ['ENV', 'time']));\n      $.register(provider(hashProvider, 'hash2', ['ENV', 'time']));\n      $.register(provider(hashProvider, 'hash3', ['ENV', 'time']));\n\n      const dependencies = await $.run(['hash', 'hash2', 'hash3', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash',\n        'hash2',\n        'hash3',\n        'time',\n      ]);\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n    });\n\n    it('should instanciate a single mapped service', async () => {\n      const providerStub = sinon.stub().returns(\n        Promise.resolve({\n          service: 'stub',\n        }),\n      );\n      const providerStub2 = sinon.stub().returns(\n        Promise.resolve({\n          service: 'stub2',\n        }),\n      );\n\n      $.register(provider(providerStub, 'mappedStub', ['stub2>mappedStub2']));\n      $.register(provider(providerStub2, 'mappedStub2'));\n\n      const dependencies = await $.run(['stub>mappedStub']);\n\n      assert.deepEqual(dependencies, {\n        stub: 'stub',\n      });\n      assert.deepEqual(providerStub.args, [\n        [\n          {\n            stub2: 'stub2',\n          },\n        ],\n      ]);\n    });\n\n    it('should instanciate several services with mappings', async () => {\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'aTime'));\n      $.register(provider(hashProvider, 'aHash', ['ENV', 'time>aTime']));\n      $.register(provider(hashProvider, 'aHash2', ['ENV', 'hash>aHash']));\n      $.register(provider(hashProvider, 'aHash3', ['ENV', 'hash>aHash']));\n\n      const dependencies = await $.run([\n        'hash2>aHash2',\n        'hash3>aHash3',\n        'time>aTime',\n      ]);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash2', 'hash3', 'time']);\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n    });\n\n    it('should fail with bad service', async () => {\n      $.register(service(() => {}, 'lol'));\n\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROMISE');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with bad provider', async () => {\n      $.register(provider(() => {}, 'lol'));\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROVIDER');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with bad service in a provider', async () => {\n      $.register(provider(() => Promise.resolve(), 'lol'));\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROVIDER');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with undeclared dependencies', async () => {\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_UNMATCHED_DEPENDENCY');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with undeclared dependencies upstream', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', 'hash2']));\n      $.register(provider(hashProvider, 'hash2', ['ENV', 'lol']));\n\n      try {\n        await $.run(['time', 'hash']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_UNMATCHED_DEPENDENCY');\n        assert.deepEqual(err.params, ['hash', 'hash2', 'lol']);\n      }\n    });\n\n    it('should provide a fatal error handler', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(dbProvider, 'db', ['ENV']));\n      $.register(provider(processProvider, 'process', ['$fatalError']));\n\n      function processProvider({ $fatalError }) {\n        return Promise.resolve({\n          service: {\n            fatalErrorPromise: $fatalError.promise,\n          },\n        });\n      }\n\n      async function dbProvider({ ENV }) {\n        let service;\n        const fatalErrorPromise = new Promise((resolve, reject) => {\n          service = Promise.resolve({\n            resolve,\n            reject,\n            ENV,\n          });\n        });\n\n        return {\n          service,\n          fatalErrorPromise,\n        };\n      }\n\n      const { process, db } = await $.run(['time', 'hash', 'db', 'process']);\n\n      try {\n        db.reject(new Error('E_DB_ERROR'));\n        await process.fatalErrorPromise;\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.message, 'E_DB_ERROR');\n      }\n    });\n  });\n\n  describe('autoload', () => {\n    it('should work with lacking autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'DEBUG',\n                inject: [],\n              },\n              async () => 'THE_DEBUG:' + serviceName,\n            ),\n          }),\n        ),\n      );\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: 'THE_DEBUG:DEBUG' },\n        time,\n      });\n    });\n\n    it('should work with deeper several lacking dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            name: '$autoload',\n            type: 'service',\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/to/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'provider',\n                name: serviceName,\n                inject:\n                  'hash2' === serviceName\n                    ? ['hash1']\n                    : 'hash4' === serviceName\n                    ? ['hash3']\n                    : [],\n              },\n              hashProvider,\n            ),\n          }),\n        ),\n      );\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n\n      const dependencies = await $.run(['hash5', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash5', 'time']);\n    });\n\n    it('should work with various dependencies', async () => {\n      $.register(provider(hashProvider, 'hash', ['hash2']));\n      $.register(provider(hashProvider, 'hash3', ['?ENV']));\n      $.register(constant('DEBUG', 1));\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV', 'DEBUG'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => {\n            if ('ENV' === serviceName) {\n              throw new YError('E_UNMATCHED_DEPENDENCY');\n            }\n\n            return {\n              path: '/path/of/debug',\n              initializer: initializer(\n                {\n                  type: 'service',\n                  name: 'hash2',\n                  inject: ['hash3'],\n                },\n                async () => 'THE_HASH:' + serviceName,\n              ),\n            };\n          },\n        ),\n      );\n\n      const dependencies = await $.run(['hash', '?ENV']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash', 'ENV']);\n    });\n\n    it('should instanciate services once', async () => {\n      $.register(\n        initializer(\n          {\n            name: '$autoload',\n            type: 'service',\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/to/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'provider',\n                name: serviceName,\n                inject: ['ENV', 'time'],\n              },\n              hashProvider,\n            ),\n          }),\n        ),\n      );\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'time'));\n      $.register(provider(hashProvider, 'hash', ['hash1', 'hash2', 'hash3']));\n      $.register(provider(hashProvider, 'hash_', ['hash1', 'hash2', 'hash3']));\n\n      const dependencies = await $.run(['hash', 'hash_', 'hash3']);\n\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n      assert.deepEqual(Object.keys(dependencies), ['hash', 'hash_', 'hash3']);\n    });\n\n    it('should fail when autoload does not exists', async () => {\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_UNMATCHED_DEPENDENCY');\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not found', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => {\n            throw new YError('E_CANNOT_AUTOLOAD', serviceName);\n          },\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_CANNOT_AUTOLOAD');\n        assert.deepEqual(err.params, ['test']);\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not initializers', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async () => 'not_an_initializer',\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_BAD_AUTOLOADED_INITIALIZER');\n        assert.deepEqual(err.params, ['test', {}.undef]);\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not right initializers', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'not-' + serviceName,\n                inject: [],\n              },\n              async () => 'THE_TEST:' + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_AUTOLOADED_INITIALIZER_MISMATCH');\n        assert.deepEqual(err.params, ['test', 'not-test']);\n      }\n    });\n\n    it('should fail when autoload depends on existing autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['ENV'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'DEBUG',\n                inject: [],\n              },\n              async () => 'THE_DEBUG:' + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_AUTOLOADER_DYNAMIC_DEPENDENCY');\n        assert.deepEqual(err.params, ['ENV']);\n      }\n    });\n\n    it('should work when autoload depends on optional and unexisting autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/of/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'service',\n                name: serviceName,\n                inject: [],\n              },\n              async () => `THE_${serviceName.toUpperCase()}:` + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      const dependencies = await $.run(['test']);\n\n      assert.deepEqual(Object.keys(dependencies), ['test']);\n    });\n\n    it.skip('should work when autoload depends on deeper optional and unexisting autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: 'log',\n            inject: ['?LOG_ROUTING', '?LOGGER', '?debug'],\n          },\n          async () => {\n            return function log() {};\n          },\n        ),\n      );\n      $.register(constant('LOGGER', 'LOGGER_CONSTANT'));\n      $.register(constant('debug', 'debug_value'));\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV', '?log'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/of/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'service',\n                name: serviceName,\n                inject: [],\n              },\n              async () => `THE_${serviceName.toUpperCase()}:` + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      const dependencies = await $.run(['test', 'log']);\n\n      assert.deepEqual(Object.keys(dependencies), ['test', 'log']);\n    });\n  });\n\n  describe('$injector', () => {\n    it('should work with no dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n      const injectDependencies = await dependencies.$injector([]);\n\n      assert.deepEqual(Object.keys(injectDependencies), []);\n      assert.deepEqual(injectDependencies, {});\n    });\n\n    it('should work with same dependencies then the running silo', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n\n      const injectDependencies = await dependencies.$injector(['time', 'hash']);\n      assert.deepEqual(Object.keys(injectDependencies), ['time', 'hash']);\n      assert.deepEqual(injectDependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should work with name mapping', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n\n      const injectDependencies = await dependencies.$injector([\n        'aTime>time',\n        'aHash>hash',\n      ]);\n      assert.deepEqual(Object.keys(injectDependencies), ['aTime', 'aHash']);\n      assert.deepEqual(injectDependencies, {\n        aHash: { ENV },\n        aTime: time,\n      });\n    });\n\n    it('should work with non instanciated dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), ['time', '$injector']);\n\n      const injectDependencies = await dependencies.$injector(['time', 'hash']);\n      assert.deepEqual(Object.keys(injectDependencies), ['time', 'hash']);\n      assert.deepEqual(injectDependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should create dependencies when not declared as singletons', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const [{ hash }, { hash: sameHash }] = await Promise.all([\n        $.run(['hash']),\n        $.run(['hash']),\n      ]);\n\n      assert.notEqual(hash, sameHash);\n\n      const { hash: yaSameHash } = await $.run(['hash']);\n\n      assert.notEqual(hash, yaSameHash);\n    });\n\n    it('should reuse dependencies when declared as singletons', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n      $.register(\n        provider(hashProvider, 'hash2', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const [\n        { hash, hash2 },\n        { hash: sameHash, hash2: sameHash2 },\n      ] = await Promise.all([\n        $.run(['hash']),\n        $.run(['hash']),\n        $.run(['hash2']),\n        $.run(['hash2']),\n      ]);\n      assert.equal(hash, sameHash);\n      assert.equal(hash2, sameHash2);\n\n      const { hash: yaSameHash } = await $.run(['hash']);\n\n      assert.equal(hash, yaSameHash);\n    });\n  });\n\n  describe('destroy', () => {\n    it('should work even with one silo and no dependencies', async () => {\n      assert.equal(typeof $.destroy, 'function');\n      const dependencies = await $.run(['$instance']);\n\n      await dependencies.$instance.destroy();\n    });\n\n    it('should work with several silos and dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const [dependencies] = await Promise.all([\n        $.run(['$instance']),\n        $.run(['ENV', 'hash', 'hash1', 'time']),\n        $.run(['ENV', 'hash', 'hash2']),\n      ]);\n\n      assert.equal(typeof dependencies.$instance.destroy, 'function');\n\n      await $.destroy();\n    });\n\n    it('should work when trigered from several silos simultaneously', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const dependenciesBuckets = await Promise.all([\n        $.run(['$instance']),\n        $.run(['$instance', 'ENV', 'hash', 'hash1', 'time']),\n        $.run(['$instance', 'ENV', 'hash', 'hash2']),\n      ]);\n\n      await Promise.all(\n        dependenciesBuckets.map((dependencies) =>\n          dependencies.$instance.destroy(),\n        ),\n      );\n    });\n\n    it('should work when a silo shutdown is in progress', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const [dependencies1, dependencies2] = await Promise.all([\n        $.run(['$instance']),\n        $.run(['$dispose', 'ENV', 'hash', 'hash1', 'time']),\n        $.run(['ENV', 'hash', 'hash2']),\n      ]);\n      await Promise.all([\n        dependencies2.$dispose(),\n        dependencies1.$instance.destroy(),\n      ]);\n    });\n\n    it('should disallow new runs', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n\n      const dependencies = await $.run(['$instance']);\n\n      assert.equal(typeof dependencies.$instance.destroy, 'function');\n\n      await dependencies.$instance.destroy();\n\n      try {\n        await $.run(['ENV', 'hash', 'hash1']);\n        throw new YError('E_UNEXPECTED_SUCCES');\n      } catch (err) {\n        assert.equal(err.code, 'E_INSTANCE_DESTROYED');\n      }\n    });\n  });\n\n  describe('$dispose', () => {\n    it('should work with no dependencies', async () => {\n      const dependencies = await $.run(['$dispose']);\n      assert.equal(typeof dependencies.$dispose, 'function');\n\n      return dependencies.$dispose();\n    });\n\n    it('should work with constant dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['time', 'ENV', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['time', 'ENV', '$dispose']);\n\n      await dependencies.$dispose();\n    });\n\n    it('should work with simple dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash', '$dispose']);\n\n      await dependencies.$dispose();\n    });\n\n    it('should work with deeper dependencies', async () => {\n      let shutdownCallResolve;\n      let shutdownResolve;\n      const shutdownCallPromise = new Promise((resolve) => {\n        shutdownCallResolve = resolve;\n      });\n      const shutdownStub = sinon.spy(() => {\n        shutdownCallResolve();\n        return new Promise((resolve) => {\n          shutdownResolve = resolve;\n        });\n      });\n\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {\n                shutdownStub,\n                shutdownResolve,\n              },\n              dispose: shutdownStub,\n            }),\n          'shutdownChecker',\n          ['hash4'],\n        ),\n      );\n\n      const dependencies = await $.run([\n        'hash5',\n        'time',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash5',\n        'time',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n\n      const finalPromise = shutdownCallPromise.then(() => {\n        assert.deepEqual(shutdownStub.args, [[]]);\n        shutdownResolve();\n      });\n\n      await dependencies.$dispose();\n      await finalPromise;\n    });\n\n    it('should work with deeper multi used dependencies', async () => {\n      let shutdownCallResolve;\n      let shutdownResolve;\n      const shutdownCallPromise = new Promise((resolve) => {\n        shutdownCallResolve = resolve;\n      });\n      const shutdownStub = sinon.spy(() => {\n        shutdownCallResolve();\n        return new Promise((resolve) => {\n          shutdownResolve = resolve;\n        });\n      });\n\n      $.register(constant('ENV', ENV));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {\n                shutdownStub,\n                shutdownResolve,\n              },\n              dispose: shutdownStub,\n            }),\n          'shutdownChecker',\n          ['hash'],\n        ),\n      );\n      $.register(provider(hashProvider, 'hash1', ['shutdownChecker']));\n      $.register(provider(hashProvider, 'hash2', ['shutdownChecker']));\n\n      const dependencies = await $.run([\n        'hash1',\n        'hash2',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash1',\n        'hash2',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n\n      const finalPromise = shutdownCallPromise.then(() => {\n        assert.deepEqual(shutdownStub.args, [[]]);\n        shutdownResolve();\n      });\n\n      await dependencies.$dispose();\n      await finalPromise;\n    });\n\n    it('should delay service shutdown to their deeper dependencies', async () => {\n      const servicesShutdownCalls = sinon.spy(() => Promise.resolve());\n\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash'),\n            }),\n          'hash',\n        ),\n      );\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash1'),\n            }),\n          'hash1',\n          ['hash'],\n        ),\n      );\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash2'),\n            }),\n          'hash2',\n          ['hash1', 'hash'],\n        ),\n      );\n\n      const dependencies = await $.run(['hash2', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['hash2', '$dispose']);\n      await dependencies.$dispose();\n\n      assert.deepEqual(servicesShutdownCalls.args, [\n        ['hash2'],\n        ['hash1'],\n        ['hash'],\n      ]);\n    });\n\n    it('should not shutdown singleton dependencies if used elsewhere', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const { hash } = await $.run(['time', 'hash']);\n      const dependencies = await $.run(['time', 'hash', '$dispose']);\n\n      assert.equal(dependencies.hash, hash);\n\n      await dependencies.$dispose();\n\n      const newDependencies = await $.run(['time', 'hash']);\n      assert.equal(newDependencies.hash, hash);\n    });\n\n    it('should shutdown singleton dependencies if not used elsewhere', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const { hash, $dispose } = await $.run(['time', 'hash', '$dispose']);\n\n      await $dispose();\n\n      const dependencies = await $.run(['time', 'hash']);\n      assert.notEqual(dependencies.hash, hash);\n    });\n  });\n\n  describe('toMermaidGraph', () => {\n    it('should print nothing when no dependency', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      assert.equal($.toMermaidGraph(), '');\n    });\n\n    it('should print a dependency graph', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph(),\n        'graph TD\\n' +\n          '  hash-->ENV\\n' +\n          '  hash1-->hash\\n' +\n          '  hash2-->hash1\\n' +\n          '  hash3-->hash2\\n' +\n          '  hash4-->hash3\\n' +\n          '  hash5-->hash4',\n      );\n    });\n\n    it('should allow custom shapes', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph({\n          shapes: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              template: '$0(($1))',\n            },\n            {\n              pattern: /^[A-Z_]+$/,\n              template: '$0{$0}',\n            },\n            {\n              pattern: /^.+$/,\n              template: '$0[$0]',\n            },\n          ],\n        }),\n        'graph TD\\n' +\n          '  hash[hash]-->ENV{ENV}\\n' +\n          '  hash1((1))-->hash[hash]\\n' +\n          '  hash2((2))-->hash1((1))\\n' +\n          '  hash3((3))-->hash2((2))\\n' +\n          '  hash4((4))-->hash3((3))\\n' +\n          '  hash5((5))-->hash4((4))',\n      );\n    });\n\n    it('should allow custom styles', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph({\n          classes: {\n            exotic: 'fill:#f9f,stroke:#333,stroke-width:4px;',\n          },\n          styles: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              className: 'exotic',\n            },\n            {\n              pattern: /^hash([0-9]+)$/,\n              className: 'notapplied',\n            },\n          ],\n          shapes: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              template: '$0(($1))',\n            },\n            {\n              pattern: /^[A-Z_]+$/,\n              template: '$0{$0}',\n            },\n            {\n              pattern: /^.+$/,\n              template: '$0[$0]',\n            },\n          ],\n        }),\n        'graph TD\\n' +\n          '  hash[hash]-->ENV{ENV}\\n' +\n          '  hash1((1))-->hash[hash]\\n' +\n          '  hash2((2))-->hash1((1))\\n' +\n          '  hash3((3))-->hash2((2))\\n' +\n          '  hash4((4))-->hash3((3))\\n' +\n          '  hash5((5))-->hash4((4))\\n' +\n          '  classDef exotic fill:#f9f,stroke:#333,stroke-width:4px;\\n' +\n          '  class hash1 exotic;\\n' +\n          '  class hash2 exotic;\\n' +\n          '  class hash3 exotic;\\n' +\n          '  class hash4 exotic;\\n' +\n          '  class hash5 exotic;',\n      );\n    });\n  });\n});\n"],"file":"index.mocha.mjs"}