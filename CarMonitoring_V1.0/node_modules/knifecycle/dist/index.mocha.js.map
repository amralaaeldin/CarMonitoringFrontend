{"version":3,"sources":["../src/index.mocha.js"],"names":["describe","$","ENV","MY_ENV_VAR","time","Date","now","bind","timeService","Promise","resolve","hashProvider","hash","service","beforeEach","Knifecycle","it","register","assert","deepEqual","run","TEST","YError","err","equal","code","test","type","name","inject","options","singleton","throws","params","fn","SPECIAL_PROPS","NAME","TYPE","ALLOWED_INITIALIZER_TYPES","VALUE","undef","OPTIONS","NaN","dependencies","Object","keys","sampleService","sample","DEBUG","timeServiceStub","sinon","spy","args","providerStub","stub","returns","providerStub2","stub2","Error","dbProvider","processProvider","$fatalError","fatalErrorPromise","promise","reject","process","db","message","serviceName","path","initializer","toUpperCase","skip","log","injectDependencies","$injector","aHash","aTime","sameHash","all","notEqual","yaSameHash","hash2","sameHash2","destroy","$instance","dependenciesBuckets","map","dependencies1","dependencies2","$dispose","shutdownCallResolve","shutdownResolve","shutdownCallPromise","shutdownStub","dispose","finalPromise","then","servicesShutdownCalls","newDependencies","toMermaidGraph","shapes","pattern","template","classes","exotic","styles","className"],"mappings":"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","sourcesContent":["/* eslint max-nested-callbacks:0 */\n\nimport assert from 'assert';\nimport sinon from 'sinon';\nimport YError from 'yerror';\n\nimport {\n  SPECIAL_PROPS,\n  Knifecycle,\n  initializer,\n  inject,\n  constant,\n  service,\n  provider,\n} from './index';\nimport { ALLOWED_INITIALIZER_TYPES } from './util';\n\ndescribe('Knifecycle', () => {\n  let $;\n  const ENV = {\n    MY_ENV_VAR: 'plop',\n  };\n  const time = Date.now.bind(Date);\n\n  function timeService() {\n    return Promise.resolve(time);\n  }\n\n  function hashProvider(hash) {\n    return Promise.resolve({\n      service: hash,\n    });\n  }\n\n  beforeEach(() => {\n    $ = new Knifecycle();\n  });\n\n  describe('register', () => {\n    describe('with constants', () => {\n      it('should work with an object', () => {\n        $.register(constant('ENV', ENV));\n      });\n\n      it('should work with a function', () => {\n        $.register(constant('time', time));\n      });\n\n      it('should work when overriding a previously set constant', async () => {\n        $.register(constant('TEST', 1));\n        $.register(constant('TEST', 2));\n        assert.deepEqual(await $.run(['TEST']), { TEST: 2 });\n      });\n\n      it('should fail when overriding an initialized constant', async () => {\n        $.register(constant('TEST', 1));\n        assert.deepEqual(await $.run(['TEST']), { TEST: 1 });\n\n        try {\n          $.register(constant('TEST', 2));\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    describe('with services', () => {\n      it('should  work with a service', () => {\n        $.register(service(timeService, 'time'));\n      });\n\n      it('should work when overriding a previously set service', async () => {\n        $.register(service(async () => () => 1, 'test'));\n        $.register(service(async () => () => 2, 'test'));\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test(), 2);\n      });\n\n      it('should fail when overriding an initialized service', async () => {\n        $.register(service(async () => () => 1, 'test'));\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test(), 1);\n\n        try {\n          $.register(service(async () => () => 2, 'test'));\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    describe('with providers', () => {\n      it('should  work with a provider', () => {\n        $.register(service(hashProvider, 'hash'));\n      });\n\n      it('should work when overriding a previously set provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 2,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 2);\n      });\n\n      it('should work when overriding a previously set singleton provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n              options: { singleton: true },\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n            },\n            async () => ({\n              service: 2,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 2);\n      });\n\n      it('should fail when overriding an initialized provider', async () => {\n        $.register(\n          initializer(\n            {\n              type: 'provider',\n              name: 'test',\n              inject: [],\n              options: { singleton: true },\n            },\n            async () => ({\n              service: 1,\n            }),\n          ),\n        );\n\n        const { test } = await $.run(['test']);\n        assert.deepEqual(test, 1);\n\n        try {\n          $.register(\n            initializer(\n              {\n                type: 'provider',\n                name: 'test',\n                inject: [],\n              },\n              async () => ({\n                service: 2,\n              }),\n            ),\n          );\n          throw new YError('E_UNEXPECTED_SUCCESS');\n        } catch (err) {\n          assert.equal(err.code, 'E_INITIALIZER_ALREADY_INSTANCIATED');\n        }\n      });\n    });\n\n    it('should fail when intitializer is no a function', () => {\n      assert.throws(\n        () => {\n          $.register('not_a_function');\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_INITIALIZER');\n          assert.deepEqual(err.params, ['not_a_function']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with no service name', () => {\n      assert.throws(\n        () => {\n          $.register(() => {});\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_ANONYMOUS_ANALYZER');\n          assert.deepEqual(err.params, []);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a bad service type', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'test';\n          fn[SPECIAL_PROPS.TYPE] = 'not_allowed_type';\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_INITIALIZER_TYPE');\n          assert.deepEqual(err.params, [\n            'test',\n            'not_allowed_type',\n            ALLOWED_INITIALIZER_TYPES,\n          ]);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with an undefined constant', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'THE_NUMBER';\n          fn[SPECIAL_PROPS.TYPE] = 'constant';\n          fn[SPECIAL_PROPS.VALUE] = {}.undef;\n          fn[SPECIAL_PROPS.OPTIONS] = { singleton: true };\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_UNDEFINED_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['THE_NUMBER']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a constant that is not a singleton', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'THE_NUMBER';\n          fn[SPECIAL_PROPS.TYPE] = 'constant';\n          fn[SPECIAL_PROPS.VALUE] = NaN;\n          fn[SPECIAL_PROPS.OPTIONS] = { singleton: false };\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_NON_SINGLETON_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['THE_NUMBER']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with a non constant that has a value', () => {\n      assert.throws(\n        () => {\n          const fn = () => {};\n          fn[SPECIAL_PROPS.NAME] = 'myService';\n          fn[SPECIAL_PROPS.TYPE] = 'service';\n          fn[SPECIAL_PROPS.VALUE] = 42;\n          $.register(fn);\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_VALUED_NON_CONSTANT_INITIALIZER');\n          assert.deepEqual(err.params, ['myService']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with special autoload intitializer that is not a singleton', () => {\n      assert.throws(\n        () => {\n          $.register(\n            initializer(\n              {\n                name: '$autoload',\n                type: 'provider',\n              },\n              () => {},\n            ),\n          );\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_BAD_AUTOLOADER');\n          assert.deepEqual(err.params, [{}]);\n          return true;\n        },\n      );\n    });\n  });\n\n  describe('provider', () => {\n    it('should register provider', () => {\n      $.register(provider(hashProvider, 'hash'));\n    });\n\n    it('should fail with direct circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(hashProvider, 'hash', ['hash']));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with direct circular dependencies on mapped services', () => {\n      assert.throws(\n        () => {\n          $.register(provider(hashProvider, 'hash', ['hash>lol']));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash3'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash1'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash3', 'hash', 'hash3']);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with deeper circular dependencies', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash1'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash2'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash3'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, [\n            'hash3',\n            'hash',\n            'hash1',\n            'hash2',\n            'hash3',\n          ]);\n          return true;\n        },\n      );\n    });\n\n    it('should fail with circular dependencies on mapped services', () => {\n      assert.throws(\n        () => {\n          $.register(provider(inject(['hash3>aHash3'], hashProvider), 'hash'));\n          $.register(provider(inject(['hash>aHash'], hashProvider), 'hash1'));\n          $.register(provider(inject(['hash1>aHash1'], hashProvider), 'hash2'));\n          $.register(provider(inject(['hash>aHash'], hashProvider), 'hash3'));\n        },\n        (err) => {\n          assert.deepEqual(err.code, 'E_CIRCULAR_DEPENDENCY');\n          assert.deepEqual(err.params, ['hash3', 'hash>aHash', 'hash3>aHash3']);\n          return true;\n        },\n      );\n    });\n  });\n\n  describe('run', () => {\n    it('should work with no dependencies', async () => {\n      const dependencies = await $.run([]);\n\n      assert.deepEqual(dependencies, {});\n    });\n\n    it('should work with constant dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['time', 'ENV']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'ENV']);\n      assert.deepEqual(dependencies, {\n        ENV,\n        time,\n      });\n    });\n\n    it('should work with service dependencies', async () => {\n      $.register(\n        service(\n          inject(['time'], function sampleService({ time }) {\n            return Promise.resolve(typeof time);\n          }),\n          'sample',\n        ),\n      );\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['sample']);\n\n      assert.deepEqual(Object.keys(dependencies), ['sample']);\n      assert.deepEqual(dependencies, {\n        sample: 'function',\n      });\n    });\n\n    it('should work with simple dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should work with given optional dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('DEBUG', {}));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: {} },\n        time,\n      });\n    });\n\n    it('should work with lacking optional dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: {}.undef },\n        time,\n      });\n    });\n\n    it('should work with deeper dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n\n      const dependencies = await $.run(['hash5', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash5', 'time']);\n    });\n\n    it('should instanciate services once', async () => {\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'time'));\n      $.register(provider(hashProvider, 'hash', ['ENV', 'time']));\n      $.register(provider(hashProvider, 'hash2', ['ENV', 'time']));\n      $.register(provider(hashProvider, 'hash3', ['ENV', 'time']));\n\n      const dependencies = await $.run(['hash', 'hash2', 'hash3', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash',\n        'hash2',\n        'hash3',\n        'time',\n      ]);\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n    });\n\n    it('should instanciate a single mapped service', async () => {\n      const providerStub = sinon.stub().returns(\n        Promise.resolve({\n          service: 'stub',\n        }),\n      );\n      const providerStub2 = sinon.stub().returns(\n        Promise.resolve({\n          service: 'stub2',\n        }),\n      );\n\n      $.register(provider(providerStub, 'mappedStub', ['stub2>mappedStub2']));\n      $.register(provider(providerStub2, 'mappedStub2'));\n\n      const dependencies = await $.run(['stub>mappedStub']);\n\n      assert.deepEqual(dependencies, {\n        stub: 'stub',\n      });\n      assert.deepEqual(providerStub.args, [\n        [\n          {\n            stub2: 'stub2',\n          },\n        ],\n      ]);\n    });\n\n    it('should instanciate several services with mappings', async () => {\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'aTime'));\n      $.register(provider(hashProvider, 'aHash', ['ENV', 'time>aTime']));\n      $.register(provider(hashProvider, 'aHash2', ['ENV', 'hash>aHash']));\n      $.register(provider(hashProvider, 'aHash3', ['ENV', 'hash>aHash']));\n\n      const dependencies = await $.run([\n        'hash2>aHash2',\n        'hash3>aHash3',\n        'time>aTime',\n      ]);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash2', 'hash3', 'time']);\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n    });\n\n    it('should fail with bad service', async () => {\n      $.register(service(() => {}, 'lol'));\n\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROMISE');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with bad provider', async () => {\n      $.register(provider(() => {}, 'lol'));\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROVIDER');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with bad service in a provider', async () => {\n      $.register(provider(() => Promise.resolve(), 'lol'));\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_BAD_SERVICE_PROVIDER');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with undeclared dependencies', async () => {\n      try {\n        await $.run(['lol']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_UNMATCHED_DEPENDENCY');\n        assert.deepEqual(err.params, ['lol']);\n      }\n    });\n\n    it('should fail with undeclared dependencies upstream', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', 'hash2']));\n      $.register(provider(hashProvider, 'hash2', ['ENV', 'lol']));\n\n      try {\n        await $.run(['time', 'hash']);\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.code, 'E_UNMATCHED_DEPENDENCY');\n        assert.deepEqual(err.params, ['hash', 'hash2', 'lol']);\n      }\n    });\n\n    it('should provide a fatal error handler', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(dbProvider, 'db', ['ENV']));\n      $.register(provider(processProvider, 'process', ['$fatalError']));\n\n      function processProvider({ $fatalError }) {\n        return Promise.resolve({\n          service: {\n            fatalErrorPromise: $fatalError.promise,\n          },\n        });\n      }\n\n      async function dbProvider({ ENV }) {\n        let service;\n        const fatalErrorPromise = new Promise((resolve, reject) => {\n          service = Promise.resolve({\n            resolve,\n            reject,\n            ENV,\n          });\n        });\n\n        return {\n          service,\n          fatalErrorPromise,\n        };\n      }\n\n      const { process, db } = await $.run(['time', 'hash', 'db', 'process']);\n\n      try {\n        db.reject(new Error('E_DB_ERROR'));\n        await process.fatalErrorPromise;\n        throw new Error('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.deepEqual(err.message, 'E_DB_ERROR');\n      }\n    });\n  });\n\n  describe('autoload', () => {\n    it('should work with lacking autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'DEBUG',\n                inject: [],\n              },\n              async () => 'THE_DEBUG:' + serviceName,\n            ),\n          }),\n        ),\n      );\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV', '?DEBUG']));\n\n      const dependencies = await $.run(['time', 'hash']);\n\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash']);\n      assert.deepEqual(dependencies, {\n        hash: { ENV, DEBUG: 'THE_DEBUG:DEBUG' },\n        time,\n      });\n    });\n\n    it('should work with deeper several lacking dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            name: '$autoload',\n            type: 'service',\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/to/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'provider',\n                name: serviceName,\n                inject:\n                  'hash2' === serviceName\n                    ? ['hash1']\n                    : 'hash4' === serviceName\n                    ? ['hash3']\n                    : [],\n              },\n              hashProvider,\n            ),\n          }),\n        ),\n      );\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n\n      const dependencies = await $.run(['hash5', 'time']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash5', 'time']);\n    });\n\n    it('should work with various dependencies', async () => {\n      $.register(provider(hashProvider, 'hash', ['hash2']));\n      $.register(provider(hashProvider, 'hash3', ['?ENV']));\n      $.register(constant('DEBUG', 1));\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV', 'DEBUG'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => {\n            if ('ENV' === serviceName) {\n              throw new YError('E_UNMATCHED_DEPENDENCY');\n            }\n\n            return {\n              path: '/path/of/debug',\n              initializer: initializer(\n                {\n                  type: 'service',\n                  name: 'hash2',\n                  inject: ['hash3'],\n                },\n                async () => 'THE_HASH:' + serviceName,\n              ),\n            };\n          },\n        ),\n      );\n\n      const dependencies = await $.run(['hash', '?ENV']);\n\n      assert.deepEqual(Object.keys(dependencies), ['hash', 'ENV']);\n    });\n\n    it('should instanciate services once', async () => {\n      $.register(\n        initializer(\n          {\n            name: '$autoload',\n            type: 'service',\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/to/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'provider',\n                name: serviceName,\n                inject: ['ENV', 'time'],\n              },\n              hashProvider,\n            ),\n          }),\n        ),\n      );\n      const timeServiceStub = sinon.spy(timeService);\n\n      $.register(constant('ENV', ENV));\n      $.register(service(timeServiceStub, 'time'));\n      $.register(provider(hashProvider, 'hash', ['hash1', 'hash2', 'hash3']));\n      $.register(provider(hashProvider, 'hash_', ['hash1', 'hash2', 'hash3']));\n\n      const dependencies = await $.run(['hash', 'hash_', 'hash3']);\n\n      assert.deepEqual(timeServiceStub.args, [[{}]]);\n      assert.deepEqual(Object.keys(dependencies), ['hash', 'hash_', 'hash3']);\n    });\n\n    it('should fail when autoload does not exists', async () => {\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_UNMATCHED_DEPENDENCY');\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not found', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => {\n            throw new YError('E_CANNOT_AUTOLOAD', serviceName);\n          },\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_CANNOT_AUTOLOAD');\n        assert.deepEqual(err.params, ['test']);\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not initializers', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async () => 'not_an_initializer',\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_BAD_AUTOLOADED_INITIALIZER');\n        assert.deepEqual(err.params, ['test', {}.undef]);\n      }\n    });\n\n    it('should fail when autoloaded dependencies are not right initializers', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: [],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'not-' + serviceName,\n                inject: [],\n              },\n              async () => 'THE_TEST:' + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_AUTOLOADED_INITIALIZER_MISMATCH');\n        assert.deepEqual(err.params, ['test', 'not-test']);\n      }\n    });\n\n    it('should fail when autoload depends on existing autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['ENV'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: '/path/of/debug',\n            initializer: initializer(\n              {\n                type: 'service',\n                name: 'DEBUG',\n                inject: [],\n              },\n              async () => 'THE_DEBUG:' + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      try {\n        await $.run(['test']);\n        throw new YError('E_UNEXPECTED_SUCCESS');\n      } catch (err) {\n        assert.equal(err.code, 'E_AUTOLOADER_DYNAMIC_DEPENDENCY');\n        assert.deepEqual(err.params, ['ENV']);\n      }\n    });\n\n    it('should work when autoload depends on optional and unexisting autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/of/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'service',\n                name: serviceName,\n                inject: [],\n              },\n              async () => `THE_${serviceName.toUpperCase()}:` + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      const dependencies = await $.run(['test']);\n\n      assert.deepEqual(Object.keys(dependencies), ['test']);\n    });\n\n    it.skip('should work when autoload depends on deeper optional and unexisting autoloaded dependencies', async () => {\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: 'log',\n            inject: ['?LOG_ROUTING', '?LOGGER', '?debug'],\n          },\n          async () => {\n            return function log() {};\n          },\n        ),\n      );\n      $.register(constant('LOGGER', 'LOGGER_CONSTANT'));\n      $.register(constant('debug', 'debug_value'));\n      $.register(\n        initializer(\n          {\n            type: 'service',\n            name: '$autoload',\n            inject: ['?ENV', '?log'],\n            options: {\n              singleton: true,\n            },\n          },\n          async () => async (serviceName) => ({\n            path: `/path/of/${serviceName}`,\n            initializer: initializer(\n              {\n                type: 'service',\n                name: serviceName,\n                inject: [],\n              },\n              async () => `THE_${serviceName.toUpperCase()}:` + serviceName,\n            ),\n          }),\n        ),\n      );\n\n      const dependencies = await $.run(['test', 'log']);\n\n      assert.deepEqual(Object.keys(dependencies), ['test', 'log']);\n    });\n  });\n\n  describe('$injector', () => {\n    it('should work with no dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n      const injectDependencies = await dependencies.$injector([]);\n\n      assert.deepEqual(Object.keys(injectDependencies), []);\n      assert.deepEqual(injectDependencies, {});\n    });\n\n    it('should work with same dependencies then the running silo', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n\n      const injectDependencies = await dependencies.$injector(['time', 'hash']);\n      assert.deepEqual(Object.keys(injectDependencies), ['time', 'hash']);\n      assert.deepEqual(injectDependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should work with name mapping', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), [\n        'time',\n        'hash',\n        '$injector',\n      ]);\n\n      const injectDependencies = await dependencies.$injector([\n        'aTime>time',\n        'aHash>hash',\n      ]);\n      assert.deepEqual(Object.keys(injectDependencies), ['aTime', 'aHash']);\n      assert.deepEqual(injectDependencies, {\n        aHash: { ENV },\n        aTime: time,\n      });\n    });\n\n    it('should work with non instanciated dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', '$injector']);\n      assert.deepEqual(Object.keys(dependencies), ['time', '$injector']);\n\n      const injectDependencies = await dependencies.$injector(['time', 'hash']);\n      assert.deepEqual(Object.keys(injectDependencies), ['time', 'hash']);\n      assert.deepEqual(injectDependencies, {\n        hash: { ENV },\n        time,\n      });\n    });\n\n    it('should create dependencies when not declared as singletons', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const [{ hash }, { hash: sameHash }] = await Promise.all([\n        $.run(['hash']),\n        $.run(['hash']),\n      ]);\n\n      assert.notEqual(hash, sameHash);\n\n      const { hash: yaSameHash } = await $.run(['hash']);\n\n      assert.notEqual(hash, yaSameHash);\n    });\n\n    it('should reuse dependencies when declared as singletons', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n      $.register(\n        provider(hashProvider, 'hash2', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const [\n        { hash, hash2 },\n        { hash: sameHash, hash2: sameHash2 },\n      ] = await Promise.all([\n        $.run(['hash']),\n        $.run(['hash']),\n        $.run(['hash2']),\n        $.run(['hash2']),\n      ]);\n      assert.equal(hash, sameHash);\n      assert.equal(hash2, sameHash2);\n\n      const { hash: yaSameHash } = await $.run(['hash']);\n\n      assert.equal(hash, yaSameHash);\n    });\n  });\n\n  describe('destroy', () => {\n    it('should work even with one silo and no dependencies', async () => {\n      assert.equal(typeof $.destroy, 'function');\n      const dependencies = await $.run(['$instance']);\n\n      await dependencies.$instance.destroy();\n    });\n\n    it('should work with several silos and dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const [dependencies] = await Promise.all([\n        $.run(['$instance']),\n        $.run(['ENV', 'hash', 'hash1', 'time']),\n        $.run(['ENV', 'hash', 'hash2']),\n      ]);\n\n      assert.equal(typeof dependencies.$instance.destroy, 'function');\n\n      await $.destroy();\n    });\n\n    it('should work when trigered from several silos simultaneously', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const dependenciesBuckets = await Promise.all([\n        $.run(['$instance']),\n        $.run(['$instance', 'ENV', 'hash', 'hash1', 'time']),\n        $.run(['$instance', 'ENV', 'hash', 'hash2']),\n      ]);\n\n      await Promise.all(\n        dependenciesBuckets.map((dependencies) =>\n          dependencies.$instance.destroy(),\n        ),\n      );\n    });\n\n    it('should work when a silo shutdown is in progress', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n      $.register(provider(hashProvider, 'hash2', ['ENV']));\n\n      const [dependencies1, dependencies2] = await Promise.all([\n        $.run(['$instance']),\n        $.run(['$dispose', 'ENV', 'hash', 'hash1', 'time']),\n        $.run(['ENV', 'hash', 'hash2']),\n      ]);\n      await Promise.all([\n        dependencies2.$dispose(),\n        dependencies1.$instance.destroy(),\n      ]);\n    });\n\n    it('should disallow new runs', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['ENV']));\n\n      const dependencies = await $.run(['$instance']);\n\n      assert.equal(typeof dependencies.$instance.destroy, 'function');\n\n      await dependencies.$instance.destroy();\n\n      try {\n        await $.run(['ENV', 'hash', 'hash1']);\n        throw new YError('E_UNEXPECTED_SUCCES');\n      } catch (err) {\n        assert.equal(err.code, 'E_INSTANCE_DESTROYED');\n      }\n    });\n  });\n\n  describe('$dispose', () => {\n    it('should work with no dependencies', async () => {\n      const dependencies = await $.run(['$dispose']);\n      assert.equal(typeof dependencies.$dispose, 'function');\n\n      return dependencies.$dispose();\n    });\n\n    it('should work with constant dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n\n      const dependencies = await $.run(['time', 'ENV', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['time', 'ENV', '$dispose']);\n\n      await dependencies.$dispose();\n    });\n\n    it('should work with simple dependencies', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n\n      const dependencies = await $.run(['time', 'hash', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['time', 'hash', '$dispose']);\n\n      await dependencies.$dispose();\n    });\n\n    it('should work with deeper dependencies', async () => {\n      let shutdownCallResolve;\n      let shutdownResolve;\n      const shutdownCallPromise = new Promise((resolve) => {\n        shutdownCallResolve = resolve;\n      });\n      const shutdownStub = sinon.spy(() => {\n        shutdownCallResolve();\n        return new Promise((resolve) => {\n          shutdownResolve = resolve;\n        });\n      });\n\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {\n                shutdownStub,\n                shutdownResolve,\n              },\n              dispose: shutdownStub,\n            }),\n          'shutdownChecker',\n          ['hash4'],\n        ),\n      );\n\n      const dependencies = await $.run([\n        'hash5',\n        'time',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash5',\n        'time',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n\n      const finalPromise = shutdownCallPromise.then(() => {\n        assert.deepEqual(shutdownStub.args, [[]]);\n        shutdownResolve();\n      });\n\n      await dependencies.$dispose();\n      await finalPromise;\n    });\n\n    it('should work with deeper multi used dependencies', async () => {\n      let shutdownCallResolve;\n      let shutdownResolve;\n      const shutdownCallPromise = new Promise((resolve) => {\n        shutdownCallResolve = resolve;\n      });\n      const shutdownStub = sinon.spy(() => {\n        shutdownCallResolve();\n        return new Promise((resolve) => {\n          shutdownResolve = resolve;\n        });\n      });\n\n      $.register(constant('ENV', ENV));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {\n                shutdownStub,\n                shutdownResolve,\n              },\n              dispose: shutdownStub,\n            }),\n          'shutdownChecker',\n          ['hash'],\n        ),\n      );\n      $.register(provider(hashProvider, 'hash1', ['shutdownChecker']));\n      $.register(provider(hashProvider, 'hash2', ['shutdownChecker']));\n\n      const dependencies = await $.run([\n        'hash1',\n        'hash2',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n      assert.deepEqual(Object.keys(dependencies), [\n        'hash1',\n        'hash2',\n        '$dispose',\n        'shutdownChecker',\n      ]);\n\n      const finalPromise = shutdownCallPromise.then(() => {\n        assert.deepEqual(shutdownStub.args, [[]]);\n        shutdownResolve();\n      });\n\n      await dependencies.$dispose();\n      await finalPromise;\n    });\n\n    it('should delay service shutdown to their deeper dependencies', async () => {\n      const servicesShutdownCalls = sinon.spy(() => Promise.resolve());\n\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash'),\n            }),\n          'hash',\n        ),\n      );\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash1'),\n            }),\n          'hash1',\n          ['hash'],\n        ),\n      );\n      $.register(\n        provider(\n          () =>\n            Promise.resolve({\n              service: {},\n              dispose: servicesShutdownCalls.bind(null, 'hash2'),\n            }),\n          'hash2',\n          ['hash1', 'hash'],\n        ),\n      );\n\n      const dependencies = await $.run(['hash2', '$dispose']);\n      assert.deepEqual(Object.keys(dependencies), ['hash2', '$dispose']);\n      await dependencies.$dispose();\n\n      assert.deepEqual(servicesShutdownCalls.args, [\n        ['hash2'],\n        ['hash1'],\n        ['hash'],\n      ]);\n    });\n\n    it('should not shutdown singleton dependencies if used elsewhere', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const { hash } = await $.run(['time', 'hash']);\n      const dependencies = await $.run(['time', 'hash', '$dispose']);\n\n      assert.equal(dependencies.hash, hash);\n\n      await dependencies.$dispose();\n\n      const newDependencies = await $.run(['time', 'hash']);\n      assert.equal(newDependencies.hash, hash);\n    });\n\n    it('should shutdown singleton dependencies if not used elsewhere', async () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(\n        provider(hashProvider, 'hash', ['ENV'], {\n          singleton: true,\n        }),\n      );\n\n      const { hash, $dispose } = await $.run(['time', 'hash', '$dispose']);\n\n      await $dispose();\n\n      const dependencies = await $.run(['time', 'hash']);\n      assert.notEqual(dependencies.hash, hash);\n    });\n  });\n\n  describe('toMermaidGraph', () => {\n    it('should print nothing when no dependency', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      assert.equal($.toMermaidGraph(), '');\n    });\n\n    it('should print a dependency graph', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph(),\n        'graph TD\\n' +\n          '  hash-->ENV\\n' +\n          '  hash1-->hash\\n' +\n          '  hash2-->hash1\\n' +\n          '  hash3-->hash2\\n' +\n          '  hash4-->hash3\\n' +\n          '  hash5-->hash4',\n      );\n    });\n\n    it('should allow custom shapes', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph({\n          shapes: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              template: '$0(($1))',\n            },\n            {\n              pattern: /^[A-Z_]+$/,\n              template: '$0{$0}',\n            },\n            {\n              pattern: /^.+$/,\n              template: '$0[$0]',\n            },\n          ],\n        }),\n        'graph TD\\n' +\n          '  hash[hash]-->ENV{ENV}\\n' +\n          '  hash1((1))-->hash[hash]\\n' +\n          '  hash2((2))-->hash1((1))\\n' +\n          '  hash3((3))-->hash2((2))\\n' +\n          '  hash4((4))-->hash3((3))\\n' +\n          '  hash5((5))-->hash4((4))',\n      );\n    });\n\n    it('should allow custom styles', () => {\n      $.register(constant('ENV', ENV));\n      $.register(constant('time', time));\n      $.register(provider(hashProvider, 'hash', ['ENV']));\n      $.register(provider(hashProvider, 'hash1', ['hash']));\n      $.register(provider(hashProvider, 'hash2', ['hash1']));\n      $.register(provider(hashProvider, 'hash3', ['hash2']));\n      $.register(provider(hashProvider, 'hash4', ['hash3']));\n      $.register(provider(hashProvider, 'hash5', ['hash4']));\n      assert.equal(\n        $.toMermaidGraph({\n          classes: {\n            exotic: 'fill:#f9f,stroke:#333,stroke-width:4px;',\n          },\n          styles: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              className: 'exotic',\n            },\n            {\n              pattern: /^hash([0-9]+)$/,\n              className: 'notapplied',\n            },\n          ],\n          shapes: [\n            {\n              pattern: /^hash([0-9]+)$/,\n              template: '$0(($1))',\n            },\n            {\n              pattern: /^[A-Z_]+$/,\n              template: '$0{$0}',\n            },\n            {\n              pattern: /^.+$/,\n              template: '$0[$0]',\n            },\n          ],\n        }),\n        'graph TD\\n' +\n          '  hash[hash]-->ENV{ENV}\\n' +\n          '  hash1((1))-->hash[hash]\\n' +\n          '  hash2((2))-->hash1((1))\\n' +\n          '  hash3((3))-->hash2((2))\\n' +\n          '  hash4((4))-->hash3((3))\\n' +\n          '  hash5((5))-->hash4((4))\\n' +\n          '  classDef exotic fill:#f9f,stroke:#333,stroke-width:4px;\\n' +\n          '  class hash1 exotic;\\n' +\n          '  class hash2 exotic;\\n' +\n          '  class hash3 exotic;\\n' +\n          '  class hash4 exotic;\\n' +\n          '  class hash5 exotic;',\n      );\n    });\n  });\n});\n"],"file":"index.mocha.js"}